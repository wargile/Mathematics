(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    506438,      10817]
NotebookOptionsPosition[    493189,      10377]
NotebookOutlinePosition[    493532,      10392]
CellTagsIndexPosition[    493489,      10389]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "x", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"IMPORTANT", "!"}], " ", "Otherwise"}], ",", " ", 
    RowBox[{
    "wrong", " ", "result", " ", "when", " ", "evaluating", " ", "total", " ",
      "notebook"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Find", ":", " ", 
     RowBox[{
      RowBox[{"lim", 
       RowBox[{"(", 
        RowBox[{"x", " ", "\[Rule]", " ", "4"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], " ", "-", " ", "x", " ", "+", " ", "2"}], 
        ")"}]}], ":", " ", "Lim"}]}], " ", "=", " ", "14"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "-", " ", "x", " ", "+", " ", "2"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "14", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "16"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRangeClipping", " ", "->", " ", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.481801545796875*^9, 3.481801639046875*^9}, {
   3.481801881234375*^9, 3.481801955765625*^9}, {3.481814391859375*^9, 
   3.481814478203125*^9}, {3.481854312734375*^9, 3.4818543653125*^9}, {
   3.481854873390625*^9, 3.481854992984375*^9}, {3.48185502759375*^9, 
   3.481855029984375*^9}, 3.491752192078125*^9, 3.50649764754125*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
ctXQ/wEd5erl
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{4}, {14}},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{241., Automatic},
  PlotRange->{{-5, 5}, {0, 16}},
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.48180158009375*^9, 3.481801640109375*^9}, {
   3.4818143938125*^9, 3.48181447896875*^9}, {3.481854994578125*^9, 
   3.481855001671875*^9}, 3.4818786131875*^9, 3.4818804453125*^9, 
   3.481880579734375*^9, 3.481897408921875*^9, 3.481897904265625*^9, 
   3.4827373755098658`*^9, {3.4828185295277805`*^9, 3.482818544492028*^9}, 
   3.4828329229073124`*^9, 3.482949032893619*^9, 3.4829490746263914`*^9, 
   3.4829629221878915`*^9, 3.49189691846875*^9, 3.4976883803125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "^", "2"}], ")"}], " ", "-", " ", "9"}], ")"}], " ", "/",
      " ", 
     RowBox[{"(", 
      RowBox[{"x", " ", "+", " ", "3"}], ")"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "6"}], ",", " ", 
      RowBox[{"-", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Lim", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "as", " ", "x", " ", "goes", " ", "toward"}], 
     " ", "-", "3"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.48180314778125*^9, 3.481803235921875*^9}, {
  3.48180327465625*^9, 3.48180330184375*^9}, {3.48180333596875*^9, 
  3.4818033375*^9}, {3.48180338346875*^9, 3.481803401734375*^9}, {
  3.481811150015625*^9, 3.4818111540625*^9}, {3.481880370109375*^9, 
  3.481880414078125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtzn1Q03UAx/GBSF+exmAb+40xth8+nIiGkrFomTLhTk0e5EENDETE40nQ
gVS0Q1SGMo0OH+GYnJgIaBqa2qGCHyEGhhjqfJg8GA+ighAi5so5Wrv98bnX
ff570xszI5KsGQxGiGn/q/MZfDc1xcMod+L91BQNTWPhTabpJ8Y3b9pj+hdW
ex8VGnl4XHOonWn6qq8z/KQGHlqkkjKhkcanzfrkHD0PxxIUi6QGGuoYpwcv
x3kIOWublqOnsaHIv07Xx0NdkODRy3Eaz4b2bvqlmYfsrKALuj4azyX9sVG7
eHgteDV/7g0a0ye1kSuDeZiWO+xddYLGQi3njtyOBypVlVxfQGP1SruevW1u
8K4qyAjaRON7n6MvXu9zQ+vh9sl/gmk0nNAVrFrphvg76bLZs2gYFqdUPbRz
g7Hi4t0RGxprgw5ofu3gYp7XioGuITGq/szMUe7nImJcclWmEYP1fGh2TRgX
JDuLra0WQ8U+s/49m4uWouhzxiIx3mpn0EvvcaAYLmEdTxEj38p/6OERDsAQ
vE77Qoz3zYaAr6I5MCYY1efmilF0msXmcjkIjt5bpLIXY6Gh4SWtY1sUoWNA
FO1RysZtsyIo/QWNabFsFJoVYaGo/VINn40FZkUY8Wnzo3SuFj3R9GNcXbfa
Fb+Z9cT+87XXimNdLXoia27xzcOersg264mU1uuxf/S7WBQi4t8qxd+VLhaF
WFs6q0Ke5GJRiPBbX4Z2z3BBmFkh1s3s2v3NAAtrzXpA8exNfUo1y6IHDi1t
yVu+mYWDZj3QZvNhkMKbBY1ZD/AetwpbupzhODpQ3D8qgPKBujM9xhmytNBk
/7MCzKs9WdDYx8SRqAjZk60CXKnmrhmJY6L3nv2Z7b4C7FTUz2kadEJg43pO
woQ7ksreTjemO+H8rXfWOy67Y0F/BYM74gj+trB81XZ3LLL61nB/myPK8j8z
Dn/iDtGqa1z5mANYs3vtA97yMedJWUDWFgcc+OuWuv4yHynLT8d5vrGH/8xo
3x9y+SjpmVF5Um4PzVhJeEQAHxPLOwe1ejt8NzNZnmqgsM3g9lHqTjtI8/bx
L4HCwy5NxeMpgsEtiWGjOyjklNQ6vCkkuNqmVeYuo3D3ZrlEV0CgH+woT5dR
mG9dnNiwi8DBqvV8XCCFQbn8qjKPYEtAfY9sCYXVUdI0txwC+vSxjx2kFObx
On6XJBHU7tv8tNyPQr96vCh3GUFiqD6ogabw+f3+S3GBBGdTX8X8LKZQ5nS/
T7bE1FM4vLVSRCE8rz7AQUpgf71brRRSaIjf9aLcj8Dge2MyhE+h1IuzooEm
CHRRnexlUZiMsd1eKSJImb/7SqczhbCD+uNKIcHwCkVnE5OCrU2PPoRPcHtn
huGUI4Xsp1U1vSyCUxMRUZmEQqewVNvEJLBzXpWa8AEFnzUqRrUjAdMnOD/S
1tSvyViXSQjaN0p+kthQWDy1oSDSluDQjgVN3tNMPZLIOokNQfEx70cCa1NP
ZnC3wJpg7KLXmJOVqadGQhgMgjSvXhsGg8J/r6JWWA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-6., -9.},
  GridLines->Automatic,
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{236., Automatic},
  PlotRange->{{-6, -3}, {-8.999999938775511, -6.000000072534571}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4818031871875*^9, 3.48180323653125*^9}, {
   3.48180327825*^9, 3.48180330253125*^9}, 3.4818033381875*^9, {
   3.4818033855625*^9, 3.48180340259375*^9}, 3.48181116134375*^9, 
   3.48187861334375*^9, 3.481880446546875*^9, 3.48188057996875*^9, 
   3.481897409046875*^9, 3.481897904375*^9, 3.482737375916087*^9, {
   3.4828185296058817`*^9, 3.482818544554509*^9}, 3.482832923016683*^9, 
   3.48294903300299*^9, 3.4829490747201376`*^9, 3.4829629222815914`*^9, 
   3.491896918609375*^9, 3.49768838040625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{"1", "a"}], ")"}], " ", 
     RowBox[{"INTEGRATE", ".", " ", "Find"}], " ", "the", " ", "area", " ", 
     "of", " ", "a", " ", "triangle", " ", "with", " ", "length"}], " ", "=", 
    " ", 
    RowBox[{
     RowBox[{
     "12", "\[IndentingNewLine]", "units", " ", "and", " ", "height"}], " ", 
     "=", " ", 
     RowBox[{"4", " ", 
      RowBox[{"units", ".", " ", "Slope"}], " ", 
      RowBox[{"(", "m", ")"}], " ", "is", " ", "then", " ", 
      RowBox[{"1", "/", "3"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"as", " ", "x", " ", "increases", " ", "1", " ", "unit"}], 
        ",", " ", 
        RowBox[{"y", " ", "increases", " ", 
         RowBox[{"1", "/", "3"}], " ", 
         RowBox[{"unit", "."}]}]}], " "}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "12"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox["n", "3"], ")"}], 
    RowBox[{"\[DifferentialD]", "n"}]}]}]}]], "Input",
 CellChangeTimes->{{3.481809021171875*^9, 3.48180905009375*^9}, {
  3.48180908078125*^9, 3.4818091273125*^9}, {3.481809174234375*^9, 
  3.481809195671875*^9}, {3.481809247609375*^9, 3.481809253859375*^9}, {
  3.48180943684375*^9, 3.481809437046875*^9}, {3.48180957115625*^9, 
  3.481809583671875*^9}, {3.481809619234375*^9, 3.481809619859375*^9}, {
  3.481810031828125*^9, 3.481810032109375*^9}, {3.481810382625*^9, 
  3.48181038515625*^9}, {3.48181067225*^9, 3.48181068184375*^9}, {
  3.481814324171875*^9, 3.481814325578125*^9}, {3.481852620265625*^9, 
  3.481852621*^9}, {3.48188048821875*^9, 3.4818804904375*^9}, {
  3.481880524390625*^9, 3.481880528390625*^9}, {3.48198717740625*^9, 
  3.48198718459375*^9}, {3.48590497161425*^9, 3.48590497511425*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{
  3.481880503671875*^9, 3.48188058015625*^9, 3.481897409125*^9, 
   3.4818979044375*^9, 3.4827373774784765`*^9, {3.482818530902367*^9, 
   3.48281854460137*^9}, 3.4828329242822595`*^9, 3.482949034096698*^9, 
   3.4829490747670107`*^9, 3.4829629250925975`*^9, 3.485904978942375*^9, 
   3.4918969209375*^9, 3.49768838275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{" ", 
     RowBox[{"1", "b"}], ")"}], " ", "Multiply", " ", "with", " ", 
    RowBox[{"1", "/", "2"}], " ", "because", " ", "a", " ", "triangle", " ", 
    "is", " ", "half", " ", "of", " ", "width", " ", "*", " ", "height"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "3"}], ")"}], " ", "*", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", "*", " ", 
     RowBox[{"12", "^", "2"}]}], ")"}], " "}]}]], "Input",
 CellChangeTimes->{{3.481810018828125*^9, 3.48181002059375*^9}, {
  3.481810096171875*^9, 3.48181015359375*^9}, {3.481810398*^9, 
  3.481810412578125*^9}, {3.481810445734375*^9, 3.481810471625*^9}, {
  3.48181433303125*^9, 3.4818143364375*^9}, {3.481880531296875*^9, 
  3.48188053240625*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{
  3.481810021296875*^9, 3.481810117765625*^9, 3.4818103990625*^9, {
   3.481810446515625*^9, 3.481810472265625*^9}, 3.481878613578125*^9, 
   3.4818804481875*^9, 3.481880580203125*^9, 3.481897409171875*^9, 
   3.4818979045*^9, 3.4827373777909546`*^9, {3.4828185309804688`*^9, 
   3.482818544632611*^9}, 3.482832924376006*^9, 3.4829490342060685`*^9, 
   3.4829490747982597`*^9, 3.4829629251550646`*^9, 3.48590498373925*^9, 
   3.49189692109375*^9, 3.49768838284375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{" ", 
    RowBox[{"2", "a"}], ")"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "3", "15"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox["n", "3"], ")"}], 
    RowBox[{"\[DifferentialD]", "n"}]}]}]}]], "Input",
 CellChangeTimes->{{3.481810690078125*^9, 3.481810696234375*^9}, {
  3.481880493765625*^9, 3.48188049575*^9}, {3.481880546921875*^9, 
  3.481880551171875*^9}, {3.485904988036125*^9, 3.485904990567375*^9}}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{
  3.481880509671875*^9, 3.481880580265625*^9, 3.48189740925*^9, 
   3.4818979045625*^9, 3.4827373778222027`*^9, {3.482818531011709*^9, 
   3.4828185446638513`*^9}, 3.48283292439163*^9, 3.482949034237317*^9, 
   3.482949074829509*^9, 3.482962925201915*^9, 3.485904991879875*^9, 
   3.491896921171875*^9, 3.497688382921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{"2", "b"}], ")"}], " ", "Find", " ", "from", " ", "0", " ", 
     "to", " ", "15"}], ",", " ", 
    RowBox[{
    "then", " ", "subtract", " ", "from", " ", "0", " ", "to", " ", "3"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}], " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], " ", "*", " ", 
       RowBox[{"15", "^", "2"}]}], ")"}]}], ")"}], " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}], " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], " ", "*", " ", 
       RowBox[{"3", "^", "2"}]}], ")"}]}], ")"}], " "}]}]], "Input",
 CellChangeTimes->{{3.481810706296875*^9, 3.481810727734375*^9}, {
  3.481810794015625*^9, 3.481810807171875*^9}, {3.481814341140625*^9, 
  3.481814342546875*^9}, {3.48188056059375*^9, 3.481880562984375*^9}}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{{3.48181071453125*^9, 3.481810728421875*^9}, 
   3.481878613703125*^9, 3.481880448515625*^9, 3.481880580375*^9, 
   3.481897409296875*^9, 3.481897904609375*^9, 3.4827373778534503`*^9, {
   3.4828185310429497`*^9, 3.482818544695092*^9}, 3.482832924422879*^9, 
   3.482949034268566*^9, 3.4829490748607574`*^9, 3.482962925217531*^9, 
   3.48590500023925*^9, 3.491896921234375*^9, 3.49768838296875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NOTE", ":", " ", 
     RowBox[{"The", " ", "derivative", " ", 
      RowBox[{"is", ":", " ", 
       RowBox[{
       "The", " ", "slope", " ", "of", " ", "the", " ", "curve"}]}]}]}], ",", 
    " ", 
    RowBox[{"the", " ", "rate", " ", "of", " ", "change"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"A", " ", "car", " ", "travels", " ", 
     RowBox[{"(", 
      RowBox[{"changes", " ", "pos"}], ")"}], " ", "2", " ", "miles", " ", 
     RowBox[{"pr", ".", " ", "hour"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pos", 
        RowBox[{"(", "t", ")"}]}], ")"}], ".", " ", "The"}], " ", "slope", 
     " ", 
     RowBox[{"(", "m", ")"}], " ", "is", " ", "2.", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pos", "=", "mt"}], ",", " ", 
       RowBox[{"pos", "=", 
        RowBox[{"2", "*", "1"}]}]}], ")"}], "\[IndentingNewLine]", "The", " ",
      "derivative", " ", "of", " ", "that", " ", "function", " ", 
     RowBox[{"(", 
      RowBox[{"=", " ", 
       RowBox[{"speed", "/", "velocity"}]}], ")"}], " ", "is", " ", "2.", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", " ", "straight", " ", "line"}], ",", " ", 
       RowBox[{"no", " ", "change"}], ",", " ", 
       RowBox[{"no", " ", "slope"}]}], ")"}], "\[IndentingNewLine]", "The", 
     " ", "derivative", " ", "of", " ", 
     RowBox[{"speed", "/", "velocity"}], " ", 
     RowBox[{"(", 
      RowBox[{"=", " ", "acceleration"}], ")"}]}], ",", " ", 
    RowBox[{"is", " ", "0", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"no", " ", "change"}], ")"}], "."}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"So", ":", " ", 
     RowBox[{"Slope", " ", "of", " ", "pos", 
      RowBox[{"(", "t", ")"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"vel", 
      RowBox[{
       RowBox[{"(", "t", ")"}], ".", " ", "Slope"}], " ", "of", " ", "vel", 
      RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
     RowBox[{"accel", 
      RowBox[{"(", "t", ")"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", "2", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Distance", " ", "travelled"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.48185506878125*^9, 3.4818551875625*^9}, {
  3.481855328484375*^9, 3.481855335734375*^9}, {3.481855430125*^9, 
  3.48185543596875*^9}, {3.48185557503125*^9, 3.481855615609375*^9}, {
  3.481856004046875*^9, 3.481856134625*^9}, {3.481856181578125*^9, 
  3.48185619775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Find", " ", "the", " ", 
     RowBox[{"speed", "/", "velocity"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "which", " ", "is", " ", "the", " ", "derivative", " ", "of", " ", "y"}],
      "=", 
     RowBox[{
      RowBox[{"mt", ".", " ", "Speed"}], " ", "is", " ", 
      RowBox[{"constant", "."}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4818553409375*^9, 3.48185534346875*^9}, {
  3.48185544775*^9, 3.48185554384375*^9}, {3.481863013234375*^9, 
  3.48186301825*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.481855344546875*^9, 3.481878613765625*^9, 3.481880448609375*^9, 
   3.481880580453125*^9, 3.481897409359375*^9, 3.481897797453125*^9, 
   3.4818979046875*^9, 3.481902903609375*^9, 3.482737377900322*^9, {
   3.4828185311210513`*^9, 3.482818544741953*^9}, 3.4828329244853764`*^9, 
   3.482949034299815*^9, 3.482949074907631*^9, 3.4829629252956147`*^9, 
   3.491896921296875*^9, 3.497688383015625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Find", " ", "the", " ", "acceleration"}], ",", " ", 
    RowBox[{"which", " ", "is", " ", "the", " ", "derivative", " ", "of", " ", 
     RowBox[{"speed", "/", 
      RowBox[{"velocity", ".", " ", "Acceleration"}]}], " ", "is", " ", 
     "zero"}], ",", " ", 
    RowBox[{"since", " ", "speed", " ", "is", " ", 
     RowBox[{"constant", "."}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.481855362*^9, 3.481855368125*^9}, {3.48185547684375*^9, 
  3.48185552159375*^9}, {3.481863021390625*^9, 3.48186303309375*^9}, {
  3.481902866453125*^9, 3.481902870578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.481855371484375*^9, 3.481855374953125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.481855376265625*^9, 3.4818786138125*^9, 3.48188044875*^9, 
   3.48188058053125*^9, 3.4818974094375*^9, 3.481897801140625*^9, 
   3.481897904765625*^9, 3.481902872828125*^9, 3.4819029066875*^9, 
   3.482737377947194*^9, {3.482818531152292*^9, 3.4828185447731934`*^9}, 
   3.482832924501001*^9, 3.4829490343310637`*^9, 3.4829490749388795`*^9, 
   3.482962925326848*^9, 3.491896921375*^9, 3.497688383078125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"p", 
     RowBox[{"(", "t", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", "2."}], " ", "v", 
      RowBox[{"(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"t", ".", " ", "a"}], 
       RowBox[{"(", "t", ")"}]}], "=", 
      RowBox[{"2", " ", 
       RowBox[{"(", "const", ")"}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "the", " ", "derivative", " ", "is", " ", "the", " ", "slope", " ", "of", 
     " ", "the", " ", "LINE", " ", "TANGENT", " ", "to", " ", "the", " ", 
     "curve", " ", "at", " ", "a", " ", "given", " ", "point"}], ",", " ", 
    RowBox[{
    "since", " ", "the", " ", "curve", " ", "is", " ", "not", " ", 
     "straight"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"n", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.481856598828125*^9, 3.481856655171875*^9}, {
  3.481857527828125*^9, 3.48185759478125*^9}, {3.4818576816875*^9, 
  3.481857694578125*^9}, {3.48190287640625*^9, 3.4819028780625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "n", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Derivative", " ", "is", " ", "2", 
    RowBox[{
     RowBox[{"x", ".", " ", "Speed"}], "/", "velocity"}], " ", "doubles", " ",
     "when", " ", "time", " ", "changes", " ", "1", " ", 
    RowBox[{"unit", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.481856658140625*^9, 3.481856660109375*^9}, {
  3.481856746453125*^9, 3.4818567515*^9}, {3.48186305840625*^9, 
  3.48186307725*^9}, {3.48186322353125*^9, 3.481863226671875*^9}, {
  3.481902882234375*^9, 3.4819028825*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "n"}]], "Output",
 CellChangeTimes->{
  3.48185666115625*^9, 3.481878613875*^9, 3.48188044884375*^9, 
   3.481880580671875*^9, 3.4818974095*^9, {3.481897784953125*^9, 
   3.481897804265625*^9}, 3.48189790484375*^9, {3.48190288309375*^9, 
   3.481902910125*^9}, 3.4827373779784417`*^9, {3.4828185311835327`*^9, 
   3.482818544820054*^9}, 3.4828329245322495`*^9, 3.4829490343779373`*^9, 
   3.4829490749857526`*^9, 3.482962925373698*^9, 3.4918969214375*^9, 
   3.497688383125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "2", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Put", " ", "in", " ", "1"}], ",", " ", 
    RowBox[{
    "derivative", " ", "is", " ", "2.", " ", "Put", " ", "in", " ", "2"}], 
    ",", " ", 
    RowBox[{"derivative", " ", "is", " ", "4"}], ",", " ", 
    RowBox[{
     RowBox[{"etc", ".", " ", "The"}], " ", 
     RowBox[{"speed", "/", "velocity"}], " ", "doubles", " ", "when", " ", 
     "time", " ", "changes", " ", "1", " ", 
     RowBox[{"unit", "."}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.481856683875*^9, 3.481856741671875*^9}, {
  3.4818631014375*^9, 3.481863108109375*^9}, {3.481863158203125*^9, 
  3.481863159921875*^9}, {3.481863229640625*^9, 3.481863231296875*^9}, {
  3.4828329160482006`*^9, 3.482832916407562*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.48185669371875*^9, 3.48185671575*^9}, 
   3.481878613921875*^9, 3.4818804489375*^9, 3.48188058075*^9, 
   3.481897409546875*^9, 3.481897904890625*^9, 3.481902896390625*^9, 
   3.4827373780096893`*^9, {3.482818531214773*^9, 3.4828185448512945`*^9}, {
   3.482832917079411*^9, 3.4828329245634985`*^9}, 3.482949034409186*^9, 
   3.482949075017001*^9, 3.4829629253893147`*^9, 3.4918969215*^9, 
   3.497688383171875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"v", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "'"}], 
      RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"dp", 
       RowBox[{
        RowBox[{"(", "t", ")"}], "/", "dt"}]}], " ", "=", " ", 
      "\"\<slope of p(t)\>\""}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dp", 
     RowBox[{
      RowBox[{"(", "t", ")"}], "/", "dt"}]}], " ", "=", " ", 
    "\"\<Give me the derivative of function p(t) (=position(t)) with respect \
to time(t)\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], 
      RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"dvt", "/", "dt"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "''"}], 
        RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
       RowBox[{
        SuperscriptBox["d", "2"], 
        RowBox[{"pt", "/", 
         SuperscriptBox["d", "2"]}], "t", " ", 
        RowBox[{"(", "\"\<second derivative\>\"", ")"}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Read", " ", 
    RowBox[{"p", "'"}], 
    RowBox[{"(", "t", ")"}], " ", "as", " ", "\"\<p prime of t\>\""}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"To", " ", "find", " ", "the", " ", "derivative", " ", 
     RowBox[{"(", "tangent", ")"}]}], ",", " ", 
    RowBox[{"you", " ", "have", " ", "to", " ", "have", " ", "a", " ", 
     RowBox[{"smooth", "/", "continous"}], " ", "curve"}], ",", " ", 
    RowBox[{"no", " ", 
     RowBox[{"cusps", "/", "breaks"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.481857897125*^9, 3.481857976953125*^9}, {
   3.481858023796875*^9, 3.4818580241875*^9}, {3.481858081234375*^9, 
   3.481858120484375*^9}, {3.481858165359375*^9, 3.481858219140625*^9}, {
   3.481858250828125*^9, 3.481858287375*^9}, {3.481858339515625*^9, 
   3.4818583490625*^9}, {3.48185838965625*^9, 3.481858395546875*^9}, {
   3.481858484765625*^9, 3.4818584925625*^9}, {3.481858528140625*^9, 
   3.481858569109375*^9}, {3.481858684109375*^9, 3.481858711703125*^9}, 
   3.481872651359375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "x"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4818726545625*^9, 3.481872663171875*^9}, {
  3.48188108521875*^9, 3.481881085734375*^9}, {3.48855382609375*^9, 
  3.488553827765625*^9}, {3.48855386109375*^9, 3.48855387609375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw90H1MzHEcwPE7V8l1petLVLp+17c5rjz9YZOp74dsohiSJvPQ0QMStW5L
haSkWRxakrVbImtWHnZseQhJ6emM81ymdY5JbeVcdT3Kfh/3x3uv/99y1aHN
sVMEAsH6yf5ZekzlsGRvRjDvmeB6AxcexW1jvPvYREPtSc7mEVb6tMDH3mY+
SwxSHxz0+e9lZhhJKOyzWcmmtncpem3WsLJmbfIvm02s+lZ+e+LCZvQzi2ev
L/ekGFAjSzLNN+qqP6E/mVieo/i6rBPtY2ddW5Rlu42omanatzwRtX5HB1jy
ixzVIUU3OszuHJZEzF7bi46xsowD3Yuj+lABZGtHN/3p6We8QhAYOuFRupnx
imBualzaFqWF8drDN8ulrU6PBxivA6wz7T96IXmI8TrChm8af5lsmPGKofu5
Kutl1QjjdYKF0vfeIbvGGK8ziJklpsM8znhdYE1v9KBvpAB1hY91e4XRAUJU
CvdO1+/kLEJUCnH26k69fgrqBntSMu5JSkQogUXx/vrwGDt0BrxyC3BSB9qj
M+FhdfaVAJED6g4ZQuXG1i8OqDuIO9JDk3RT0VlgqpAXajMd0dlQOM/DriZy
GuoBmpK4xhhOjHpCdOEOveSHGPWEodXXrdpaJ9QLjKZVaXV5EnQOXA1a4tUW
44x6Q1WuWhq/wAWVQV7knjCRxQWVwdKOssq8tumoDxTPv1LVFuaKcnD8aUFx
WI0rysF6r8jrzX5SVA4rkxq3S/OlqBy0c1R+rZNfeeXg9/xG0YbtbqgvaBbU
Kd/UuqG+EGe2e92kJCgF1Z3fXP45glJIzI4YXXeeoBTUEboPkosEpXDaoj6r
KSIohepA68ilUoJSsD6beF9xk6AUNG8kBfWNBKVQUn4w4VQTQSmUp+pDQlsI
SuG+u2a4RU9QCh3RJMHwjqAUFEaPkC4jQSks1qXLrpkISmF5brs19gdBKYQr
Sm//7CYohZQDnKy/n6AUMlecsN41E5RCrnPX21QLQSkU3yo/MzREUApXs+zi
HwwTlMLNTbGrMkcJSkHn2+AdPE5QCrXmudaJCYJS+Asa8S/v
     "]]}},
  AspectRatio->2,
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{93., Automatic},
  PlotRange->{{0, 5}, {0., 9.999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.48187266415625*^9, 3.48187861403125*^9, 3.481880449203125*^9, 
   3.481880581078125*^9, 3.481881086515625*^9, 3.481897409671875*^9, 
   3.48189790496875*^9, 3.4827373780409374`*^9, {3.4828185312460136`*^9, 
   3.482818544882536*^9}, 3.4828329245947475`*^9, 3.4829490344404345`*^9, 
   3.48294907504825*^9, 3.482962925436165*^9, 3.4885538286875*^9, {
   3.48855386259375*^9, 3.488553876734375*^9}, 3.491896921578125*^9, 
   3.49768838321875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Example", " ", "of", " ", "integrating", " ", "manually", " ", "when", 
    " ", "curve", " ", "is", " ", "a", " ", "straight", " ", "line"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"counter", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"divisions", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", " ", "-", " ", "a"}], ")"}], " ", "/", " ", "100000"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"area", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"counter", " ", "=", " ", "a"}], ",", " ", 
     RowBox[{"counter", " ", "<=", " ", "b"}], ",", " ", 
     RowBox[{"counter", " ", "+=", " ", "divisions"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"area", " ", "=", " ", 
       RowBox[{"area", " ", "+", " ", 
        RowBox[{"(", 
         RowBox[{"divisions", " ", "*", " ", 
          RowBox[{"(", 
           RowBox[{"counter", "^", "3"}], ")"}]}], ")"}]}]}], ";"}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{"Change", " ", "f", 
       RowBox[{"(", "x", ")"}], " ", "expression", " ", "here"}]}], " ", 
     "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"area", ",", " ", 
     RowBox[{"N", "[", "area", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4818781075625*^9, 3.481878166390625*^9}, {
   3.481878202640625*^9, 3.48187826359375*^9}, 3.481878387015625*^9, {
   3.481878417328125*^9, 3.4818784759375*^9}, {3.48187852575*^9, 
   3.481878574296875*^9}, {3.48187868996875*^9, 3.481878724328125*^9}, {
   3.4818788001875*^9, 3.48187880278125*^9}, {3.481878906109375*^9, 
   3.48187891190625*^9}, {3.481879014859375*^9, 3.481879020359375*^9}, {
   3.4818790714375*^9, 3.481879091875*^9}, {3.481879156*^9, 
   3.48187915621875*^9}, {3.481879505265625*^9, 3.48187952428125*^9}, {
   3.481879773578125*^9, 3.481879784078125*^9}, {3.481880640640625*^9, 
   3.481880642546875*^9}, {3.481896643625*^9, 3.4818966490625*^9}, 
   3.481896710453125*^9, 3.4818967855*^9, {3.48189716321875*^9, 
   3.48189724025*^9}, {3.48189786828125*^9, 3.48189788871875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["10000200001", "4000000"], ",", "2500.05000025`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.481878712796875*^9, 3.48187875721875*^9, 3.48187884696875*^9, 
   3.481878945875*^9, 3.48187902615625*^9, 3.481879075890625*^9, 
   3.481879121796875*^9, 3.48187920053125*^9, 3.481880482046875*^9, 
   3.4818806138125*^9, 3.481880677515625*^9, 3.481896676*^9, 
   3.481896753328125*^9, 3.481896792046875*^9, {3.481897170234375*^9, 
   3.481897196875*^9}, 3.4818972506875*^9, 3.48189741303125*^9, {
   3.48189789403125*^9, 3.4818979085*^9}, 3.482737379353345*^9, {
   3.4828185325424986`*^9, 3.4828185462102613`*^9}, 3.482832925875948*^9, 
   3.482949035815382*^9, 3.4829490763450756`*^9, 3.4829629269353685`*^9, 
   3.491896924875*^9, 3.4976883865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "^", "3"}], ")"}], 
      RowBox[{"\[DifferentialD]", "n"}]}]}], ",", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "^", "3"}], ")"}], 
       RowBox[{"\[DifferentialD]", "n"}]}]}], "]"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOTE", ":", " ", 
    RowBox[{"Change", " ", "f", 
     RowBox[{"(", "n", ")"}], " ", "expression", " ", "here"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.481878593203125*^9, 3.481878666359375*^9}, {
  3.481878761765625*^9, 3.481878774453125*^9}, {3.4818788115*^9, 
  3.481878812859375*^9}, {3.481878891421875*^9, 3.481878897453125*^9}, {
  3.481879029984375*^9, 3.481879062875*^9}, {3.481879158578125*^9, 
  3.48187916153125*^9}, {3.481879790828125*^9, 3.481879793984375*^9}, {
  3.48189720684375*^9, 3.4818972096875*^9}, {3.481897242765625*^9, 
  3.48189724525*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2500", ",", "2500.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.481896761984375*^9, {3.481897173734375*^9, 3.481897200015625*^9}, {
   3.48189723271875*^9, 3.481897252875*^9}, 3.48189741315625*^9, 
   3.481897908625*^9, 3.4827373794470882`*^9, {3.4828185326205997`*^9, 
   3.4828185462883625`*^9}, 3.4828329259696946`*^9, 3.482949035940377*^9, 
   3.4829490764544463`*^9, 3.4829629270446854`*^9, 3.4918969250625*^9, 
   3.497688386640625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"DERIVATIVE", ".", " ", "Find"}], " ", "the", " ", "derivative", 
     " ", "of", " ", "the", " ", "function", " ", "y"}], "=", 
    RowBox[{
     FractionBox["1", "4"], 
     SuperscriptBox["x", "2"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{" ", "1", ")"}], " ", "Take", " ", "the", " ", "power", " ", 
    RowBox[{"(", "2", ")"}], " ", "and", " ", "place", " ", "it", " ", "in", 
    " ", "front", " ", "of", " ", "the", " ", "coefficient", " ", 
    RowBox[{"(", 
     FractionBox["1", "4"], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", "2", ")"}], " ", "This", " ", 
     RowBox[{"gives", ":", " ", 
      RowBox[{"2", 
       FractionBox["1", "4"], 
       SuperscriptBox["x", "2"]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox["2", "4"], 
      SuperscriptBox["x", "2"]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["x", "2"]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{" ", "3", ")"}], " ", "Reduce", " ", "the", " ", "power", " ", 
    "by", " ", "1.", " ", "This", " ", "gives", " ", 
    FractionBox["1", "2"], 
    SuperscriptBox["x", "1"], " ", "or", " ", 
    FractionBox["1", "2"], "x"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "derivative", " ", "of", " ", "y"}], "=", 
    RowBox[{
     FractionBox["1", "4"], 
     SuperscriptBox["x", "2"], " ", "is", " ", 
     FractionBox["1", "2"], "x"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"SECANT", ".", " ", "A"}], " ", "secant", " ", "line", " ", "is", 
    " ", "a", " ", "line", " ", "that", " ", "intersects", " ", "a", " ", 
    "curve", " ", "in", " ", "two", " ", "points", " ", 
    RowBox[{"(", 
     RowBox[{"simple", " ", "explanation"}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "You", " ", "get", " ", "the", " ", "slope", " ", "of", " ", "the", " ", 
    "secant", " ", "by", " ", "using", " ", "the", " ", "slope", " ", 
    "formula", " ", 
    RowBox[{"rise", "/", "run"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"You", " ", "need", " ", "the", " ", "limit", " ", 
     RowBox[{"as", " ", "[", 
      RowBox[{"x2", ",", "y2"}], "]"}], " ", "moves", " ", "ever", " ", 
     "closer", " ", 
     RowBox[{"to", " ", "[", 
      RowBox[{"x1", ",", "y1"}], "]"}]}], ":", " ", 
    RowBox[{"The", " ", "run", " ", 
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], " ", "goes", " ", "toward", " ", 
     "zero"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{"lim", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"run", " ", "\[Rule]", " ", "0"}], ")"}], "[", 
        RowBox[{"rise", "/", "run"}]}]}], ")"}], "]"}], " ", 
    RowBox[{"or", ":", " ", 
     RowBox[{"lim", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x2", "-", "x1"}], " ", "\[Rule]", " ", "0"}], ")"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y2", "-", "y1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"x2", "-", "x1"}], ")"}]}], "]"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "slope", " ", "fraction", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y2", "-", "y1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}]}], " ", "is", " ", "called", " ", "a", 
    " ", "DIFFERENCE", " ", 
    RowBox[{"QUOTIENT", ".", " ", 
     RowBox[{"(", 
      RowBox[{"A", " ", "fraction", " ", "is", " ", "a", " ", 
       RowBox[{"quotient", "."}]}], ")"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.48198657053125*^9, 3.481987008328125*^9}, {
   3.48198713684375*^9, 3.481987298609375*^9}, {3.4819875168125*^9, 
   3.4819877326875*^9}, {3.481987820453125*^9, 3.481987877734375*^9}, 
   3.482737239421834*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   SuperscriptBox["x", 
    RowBox[{"1", "/", "3"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.491897029171875*^9, 3.491897051421875*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", 
    RowBox[{"2", "/", "3"}]]}]]], "Output",
 CellChangeTimes->{3.491897052671875*^9, 3.497688386703125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  SuperscriptBox["x", 
   RowBox[{"-", "4"}]]}]], "Input",
 CellChangeTimes->{{3.482737243453187*^9, 3.482737303983651*^9}, {
  3.4827373444807997`*^9, 3.4827373938210764`*^9}, {3.4827380022968235`*^9, 
  3.482738016015398*^9}, {3.491896884609375*^9, 3.49189689890625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.482737396945856*^9, 3.4827374053515143`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["4", 
   SuperscriptBox["x", "5"]]}]], "Output",
 CellChangeTimes->{
  3.48273740633582*^9, 3.4827380183903675`*^9, {3.482818532667461*^9, 
   3.482818546335223*^9}, 3.482832926000943*^9, 3.4829490359872503`*^9, 
   3.4829490765013194`*^9, 3.4829629270759187`*^9, 3.491896925171875*^9, 
   3.497688386765625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.4827375005166893`*^9, 3.4827375107815914`*^9}}],

Cell[BoxData[
 FractionBox["1", "16"]], "Output",
 CellChangeTimes->{{3.4827375055475855`*^9, 3.4827375115784106`*^9}, 
   3.4827380261090193`*^9, {3.482818532698702*^9, 3.4828185463664637`*^9}, 
   3.482832926032192*^9, 3.482949036018499*^9, 3.482949076532568*^9, 
   3.482962927107152*^9, 3.49189692525*^9, 3.497688386796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.482737519140378*^9, 3.4827375231557207`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "8"]}]], "Output",
 CellChangeTimes->{
  3.4827375242337694`*^9, 3.4827380278902464`*^9, {3.4828185327299423`*^9, 
   3.4828185463977046`*^9}, 3.4828329260478163`*^9, 3.4829490360497475`*^9, 
   3.482949076563817*^9, 3.482962927122769*^9, 3.4918969253125*^9, 
   3.49768838684375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"3", 
   SuperscriptBox["x", 
    RowBox[{"-", "4"}]]}]}]], "Input",
 CellChangeTimes->{{3.4827375845890856`*^9, 3.4827376006823206`*^9}, {
  3.4827379467819095`*^9, 3.4827379489693813`*^9}, {3.4827380660616326`*^9, 
  3.4827380958425016`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"-", "12"}], 
    SuperscriptBox["x", 
     RowBox[{"-", "5"}]]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4827376032447386`*^9, 3.482737607072741*^9}, {
  3.4829489958639297`*^9, 3.4829490525647383`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["12", 
     SuperscriptBox["x", "5"]]}], ",", 
   RowBox[{"-", 
    FractionBox["12", 
     SuperscriptBox["x", "5"]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.482737607947713*^9, 3.4827379514693494`*^9, 3.482738030390214*^9, {
   3.482738087811354*^9, 3.482738098123722*^9}, {3.482818532776803*^9, 
   3.4828185464289455`*^9}, 3.4828329260790653`*^9, {3.482949014816188*^9, 
   3.482949076595066*^9}, 3.482962927154002*^9, 3.491896925390625*^9, 
   3.497688386890625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.4827376454933863`*^9, 3.4827376480245557`*^9}, 
   3.482737741693433*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "8"]}]], "Output",
 CellChangeTimes->{
  3.48273764929014*^9, 3.482737742599654*^9, 3.4827379552661757`*^9, 
   3.4827380313277025`*^9, 3.482738099998698*^9, {3.4828185327924232`*^9, 
   3.482818546460186*^9}, 3.48283292609469*^9, 3.4829490361122456`*^9, 
   3.482949076641939*^9, 3.4829629271852355`*^9, 3.491896925453125*^9, 
   3.4976883869375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12"}], " ", "*", " ", 
  RowBox[{"(", 
   RowBox[{"2", "^", 
    RowBox[{"(", 
     RowBox[{"-", "5"}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.4827376768048844`*^9, 3.482737696694873*^9}, {
  3.4827379704066067`*^9, 3.482737979859611*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "8"]}]], "Output",
 CellChangeTimes->{{3.482737682601574*^9, 3.482737701882207*^9}, {
   3.482737956344287*^9, 3.482737980843973*^9}, 3.4827380320933175`*^9, 
   3.482738100873687*^9, {3.4828185328236637`*^9, 3.4828185464914265`*^9}, 
   3.4828329261259384`*^9, 3.482949036143494*^9, 3.4829490766731877`*^9, 
   3.482962927216469*^9, 3.49189692553125*^9, 3.497688386984375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Some", " ", 
    RowBox[{"rules", ":", " ", 
     SuperscriptBox["x", "0"]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{"1.", "  ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"x", "^", "2"}], ")"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}], ".", "  ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "+", "g"}], ")"}], "'"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "+", 
       RowBox[{
        RowBox[{"g", "'"}], ".", "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "-", "g"}], ")"}], "'"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "'"}], "-", 
        RowBox[{
         RowBox[{"g", "'"}], ".", "  ", 
         RowBox[{
          RowBox[{"(", "fg", ")"}], "'"}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"fg", "'"}], "+", 
         RowBox[{
          RowBox[{"gf", "'"}], ".", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "/", "g"}], ")"}], "'"}]}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gf", "'"}], "-", 
           RowBox[{"fg", "'"}]}], ")"}], "/", 
         RowBox[{"g", "^", "2"}]}]}]}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4827388683341875`*^9, 3.482738997725641*^9}, {
  3.4828206408498254`*^9, 3.4828207570900793`*^9}, {3.4852577617517653`*^9, 
  3.4852577802986403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["2", "2"]]], "Input",
 CellChangeTimes->{{3.4827390216945443`*^9, 3.482739030694602*^9}, {
  3.4827390637416887`*^9, 3.4827390942575083`*^9}}],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{{3.482739024632063*^9, 3.4827390314133563`*^9}, 
   3.4827390954762664`*^9, {3.482818532870525*^9, 3.482818546538287*^9}, 
   3.4828329261571875`*^9, 3.4829490361747427`*^9, 3.4829490767044363`*^9, 
   3.4829629272477026`*^9, 3.491896925609375*^9, 3.49768838703125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["2", 
  RowBox[{"-", "2"}]]], "Input",
 CellChangeTimes->{{3.4827390446790667`*^9, 3.4827390470384564`*^9}, {
  3.4827391003044224`*^9, 3.482739106648213*^9}}],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.4827390478509617`*^9, 3.482739107507593*^9, {3.4828185329017653`*^9, 
   3.4828185465539074`*^9}, 3.4828329261728115`*^9, 3.4829490362059917`*^9, 
   3.4829490767356853`*^9, 3.482962927263319*^9, 3.4918969256875*^9, 
   3.497688387078125*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", 
   FractionBox[
    RowBox[{"x", "+", "2"}], "x"]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "/", "x"}], ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "^", 
         RowBox[{"-", "1"}]}], ")"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "+", "2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "^", 
           RowBox[{"-", "1"}]}], ")"}], 
         RowBox[{"(", "1", ")"}], "\[IndentingNewLine]", "Why", " ", "is", 
         " ", "the", " ", "derivative", " ", "of", " ", "x"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"(", "1", ")"}], "?", " ", 
          RowBox[{"Because", ":", " ", 
           SuperscriptBox["x", "1"]}]}]}]}], "=", 
       RowBox[{
        RowBox[{"1", 
         RowBox[{
          SuperscriptBox["x", "0"], ".", " ", 
          SuperscriptBox["x", "0"]}]}], "=", 
        RowBox[{
         RowBox[{"1.", " ", "1", "*", "1"}], "=", "1"}]}]}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.482739389020402*^9, 3.4827394060975437`*^9}, {
  3.482739568072588*^9, 3.482739693270599*^9}, {3.482739876031545*^9, 
  3.482739926233385*^9}, {3.482787643213919*^9, 3.4827876671341105`*^9}, {
  3.4828198217034864`*^9, 3.482819824779357*^9}, {3.48281996309908*^9, 
  3.482820065832567*^9}, {3.482820103153352*^9, 3.4828201059750147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4827394113628654`*^9, 3.4827394152845144`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "x"], "-", 
  FractionBox[
   RowBox[{"2", "+", "x"}], 
   SuperscriptBox["x", "2"]]}]], "Output",
 CellChangeTimes->{
  3.482739416253208*^9, {3.4828185329330063`*^9, 3.482818546600768*^9}, 
   3.4828329262040606`*^9, 3.482949036252865*^9, 3.4829490767669344`*^9, 
   3.482962927310169*^9, 3.491896925765625*^9, 3.497688387140625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "a", " ", "radical", " ", 
     RowBox[{"(", 
      RowBox[{"radical", " ", "=", " ", 
       RowBox[{"a", " ", "square", " ", "root", " ", "expression"}]}], ")"}], 
     " ", "with", " ", "a", " ", "4", "th", " ", 
     RowBox[{"root", ".", " ", "That"}], " ", 
     RowBox[{"is", ":", " ", 
      RowBox[{"3", "*", "3", "*", "3", "*", "3"}]}]}], "=", "81"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Algebra", " ", "II", " ", "for", " ", "Dummies", " ", "p", ".16"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RadicalBox["81", "4"]}]], "Input",
 CellChangeTimes->{{3.4829466878378177`*^9, 3.482946762708212*^9}, {
  3.4829475645501194`*^9, 3.4829475762067423`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4829467394079075`*^9, 3.482949036284114*^9, 
  3.482949076798183*^9, 3.4829629273257856`*^9, 3.491896925828125*^9, 
  3.4976883871875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RadicalBox["x", "3"], "+", 
   RowBox[{"2", 
    RadicalBox["x", "5"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.4918990395*^9, 3.491899076515625*^9}, {3.4918991975*^9, 
  3.491899200515625*^9}, {3.49189924996875*^9, 3.491899250390625*^9}, {
  3.491899295390625*^9, 3.491899317515625*^9}, {3.49189934975*^9, 
  3.491899575421875*^9}, {3.49189968775*^9, 3.491899765375*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   RowBox[{"5", " ", 
    SuperscriptBox["x", 
     RowBox[{"4", "/", "5"}]]}]], "+", 
  FractionBox["1", 
   RowBox[{"3", " ", 
    SuperscriptBox["x", 
     RowBox[{"2", "/", "3"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.49189907753125*^9, 3.491899201046875*^9, 3.49189925146875*^9, 
   3.491899318484375*^9, {3.491899356234375*^9, 3.491899435171875*^9}, {
   3.4918994959375*^9, 3.49189957609375*^9}, {3.491899689765625*^9, 
   3.491899766109375*^9}, 3.497688387234375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Multiplying", " ", "numbers", " ", "with", " ", "same", " ", "base", " ", 
    "and", " ", "different", " ", 
    RowBox[{"exponents", ":", " ", 
     RowBox[{"Add", " ", "the", " ", "exponents"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"4", " "}]], "*", 
     SuperscriptBox["2", "6"]}], ",", " ", 
    SuperscriptBox["2", "10"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.482946878459623*^9, 3.482946976456381*^9}, {
  3.482947007396059*^9, 3.482947016115423*^9}, {3.4829471404366746`*^9, 
  3.4829471499685955`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1024", ",", "1024"}], "}"}]], "Output",
 CellChangeTimes->{
  3.482947101808955*^9, {3.4829471441400604`*^9, 3.4829471505467615`*^9}, 
   3.482949036315363*^9, 3.4829490768294315`*^9, 3.4829629273570194`*^9, 
   3.491896925890625*^9, 3.497688387265625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Dividing", " ", "numbers", " ", "with", " ", "same", " ", "base", " ", 
    "and", " ", "different", " ", 
    RowBox[{"exponents", ":", " ", 
     RowBox[{"Subtract", " ", "the", " ", "exponents"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"4", " "}]], "/", 
     SuperscriptBox["2", "6"]}], ",", " ", 
    SuperscriptBox["2", 
     RowBox[{"-", "2"}]]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.482947026788049*^9, 3.4829470692129107`*^9}, 
   3.4829473876527953`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "4"], ",", 
   FractionBox["1", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.4829475411586895`*^9, 3.4829488968590775`*^9, 
  3.482949036330987*^9, 3.4829490768606806`*^9, 3.4829629273882523`*^9, 
  3.49189692603125*^9, 3.4976883873125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RadicalBox["81", "4"], ",", " ", 
   SuperscriptBox["81", 
    RowBox[{"1", "/", "4"}]]}], "}"}]], "Input",
 CellChangeTimes->{{3.4829472068319736`*^9, 3.4829472543664274`*^9}, {
  3.482948875580143*^9, 3.482948892187711*^9}, {3.491897825328125*^9, 
  3.491897919609375*^9}, {3.491898094265625*^9, 3.4918981141875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.4829469253415227`*^9, 3.4829469772064342`*^9}, {
   3.4829470615873737`*^9, 3.48294707090053*^9}, 3.4829472555539727`*^9, {
   3.482948880470236*^9, 3.482948892843889*^9}, 3.482949036362236*^9, 
   3.4829490768919296`*^9, 3.482962927403869*^9, 3.491896926109375*^9, {
   3.49189783546875*^9, 3.491897920453125*^9}, 3.491898101421875*^9, 
   3.491898138*^9, 3.497688387359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RadicalBox[
    SuperscriptBox["81", "2"], "4"], ",", " ", 
   SuperscriptBox["81", 
    RowBox[{"2", "/", "4"}]]}], "}"}]], "Input",
 CellChangeTimes->{{3.4829472822112465`*^9, 3.482947289524027*^9}, {
  3.482947516767128*^9, 3.482947534955326*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.482947290555317*^9, 3.4829490363934846`*^9, 
  3.482949076923178*^9, 3.4829629274819527`*^9, 3.491896926171875*^9, 
  3.49768838740625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    RadicalBox["2", "3"], ",", " ", 
    SuperscriptBox["2", 
     RowBox[{"1", "/", "3"}]]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.49189814871875*^9, 3.491898278515625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2599210498948732`", ",", "1.2599210498948732`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4918981845625*^9, 3.49189820340625*^9}, {
   3.49189825034375*^9, 3.491898279328125*^9}, 3.497688387453125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RadicalBox[
      SuperscriptBox["2", "2"], "5"], " ", "]"}], ",", " ", 
    RowBox[{"N", "[", 
     SuperscriptBox["2", 
      RowBox[{"2", "/", "5"}]], "]"}]}], "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "first", " ", "expression", " ", 
     RowBox[{"equals", ":", " ", 
      RowBox[{"x", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "^", "2"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "5"}], ")"}]}]}]}]}], " ", "=", " ", 
    RowBox[{"x", " ", "+", " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"2", "/", "5"}], ")"}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.482821170921359*^9, 3.4828212865704713`*^9}, {
  3.4829630043629665`*^9, 3.482963130557229*^9}, {3.482963231897143*^9, 
  3.482963238177187*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.3195079107728944`", ",", "1.3195079107728944`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.482963122183837*^9, 3.482963131619525*^9}, 
   3.491896926234375*^9, 3.4976883875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Examples", " ", "of", " ", "splitting", " ", "up", " ", "an", " ", 
    "exponent", " ", "expression"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"a", "=", "2"}], ";", " ", 
   RowBox[{"b", " ", "=", " ", "4"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.4827414043564396`*^9, 3.482741409606977*^9}, {
  3.482741492818622*^9, 3.4827415111017437`*^9}, {3.482741551340239*^9, 
  3.482741554418679*^9}, {3.482833076995145*^9, 3.482833105697168*^9}, {
  3.482946596537057*^9, 3.482946600286937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "+", " ", "b"}], ")"}], "2"], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", 
    RowBox[{"equals", ":", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "^", "2"}], ")"}], " ", "+", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"2", "*", "4"}], ")"}]}], " ", "+", " ", 
       RowBox[{"(", 
        RowBox[{"4", "^", "2"}], ")"}]}], ")"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.48274012415145*^9, 3.482740130588827*^9}, {
  3.4827403669601793`*^9, 3.482740374428834*^9}, {3.482741315041794*^9, 
  3.482741322072954*^9}, {3.4827414118572073`*^9, 3.4827414135292535`*^9}}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{
  3.48274013146381*^9, 3.4827413235104356`*^9, 3.482741414685622*^9, {
   3.482818532979867*^9, 3.4828185466320095`*^9}, 3.4828329262353096`*^9, 
   3.4829490364403577`*^9, 3.4829490769700513`*^9, 3.4829629275131865`*^9, 
   3.4859052020205*^9, 3.491896926328125*^9, 3.497688387578125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", "+", " ", 
  RowBox[{"2", "a", " ", "b"}], " ", "+", " ", 
  SuperscriptBox["b", "2"]}]], "Input",
 CellChangeTimes->{{3.4827401361199703`*^9, 3.482740189368948*^9}, {
  3.482740223040177*^9, 3.4827402338368835`*^9}, {3.482740326007579*^9, 
  3.4827403502572684`*^9}, {3.482741416685827*^9, 3.482741428218258*^9}, {
  3.482818491101843*^9, 3.482818541039942*^9}, {3.485905189208*^9, 
  3.485905257911125*^9}}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{{3.4828185103616724`*^9, 3.4828185466632495`*^9}, 
   3.4828329262509336`*^9, 3.4829490364716063`*^9, 3.4829490770013*^9, 
   3.4829629275444193`*^9, {3.485905191504875*^9, 3.48590525867675*^9}, 
   3.491896926390625*^9, 3.497688387625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"a", "-", " ", "b"}], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.491900493171875*^9, 3.491900493421875*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.491900494140625*^9, 3.497688387671875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "2"], " ", "+", " ", 
    RowBox[{"2", "a", " ", "b"}], " ", "-", " ", 
    SuperscriptBox["b", "2"]}], ",", " ", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", "-", " ", 
    RowBox[{"2", "a", " ", "b"}], " ", "+", " ", 
    SuperscriptBox["b", "2"]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.49190050325*^9, 3.491900524484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.491900504328125*^9, 3.491900525265625*^9}, 
   3.49768838771875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", " ", "+", " ", "b"}], ")"}], "4"], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", 
    RowBox[{"equals", ":", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "^", "2"}], ")"}], " ", "+", " ", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"2", "*", "4"}], ")"}]}], " ", "+", " ", 
        RowBox[{"(", 
         RowBox[{"4", "^", "2"}], ")"}]}], ")"}], " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "^", "2"}], ")"}], " ", "+", " ", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"2", "*", "4"}], ")"}]}], " ", "+", " ", 
        RowBox[{"(", 
         RowBox[{"4", "^", "2"}], ")"}]}], ")"}]}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.482740394053583*^9, 3.4827403997097607`*^9}, {
  3.482741228386653*^9, 3.4827412441677012`*^9}, {3.482741285214051*^9, 
  3.4827412896046195`*^9}, {3.4827413293384857`*^9, 3.4827413331978116`*^9}, {
  3.4827414316717362`*^9, 3.482741433984473*^9}, {3.4827877440974417`*^9, 
  3.4827877603931694`*^9}}],

Cell[BoxData["1296"], "Output",
 CellChangeTimes->{
  3.482740400584749*^9, 3.4827406725187683`*^9, 3.482741334260298*^9, 
   3.48274143459391*^9, {3.4828185167816157`*^9, 3.4828185467101107`*^9}, 
   3.4828329262821827`*^9, 3.4829490365028553`*^9, 3.482949077032549*^9, 
   3.482962927575653*^9, 3.491896926453125*^9, 3.49768838775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], " ", "*", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], " "}]], "Input",
 CellChangeTimes->{{3.4827404053815627`*^9, 3.482740546911001*^9}, {
  3.482740582926165*^9, 3.482740605441502*^9}, {3.4827406385817027`*^9, 
  3.482740662456397*^9}, {3.4827408370479126`*^9, 3.482740847516528*^9}, {
  3.4827409879522305`*^9, 3.482741008311345*^9}, {3.4827410490139494`*^9, 
  3.482741211902489*^9}, {3.482741438438054*^9, 3.4827414542678*^9}}],

Cell[BoxData["1296"], "Output",
 CellChangeTimes->{{3.482740509708352*^9, 3.482740548051612*^9}, {
   3.482740588035475*^9, 3.482740606238367*^9}, {3.4827406394566917`*^9, 
   3.4827406584564486`*^9}, {3.4827408402353716`*^9, 
   3.4827408485321407`*^9}, {3.4827409907646947`*^9, 3.482741008951962*^9}, {
   3.4827410556076145`*^9, 3.482741155059467*^9}, {3.4827411866528125`*^9, 
   3.48274121258998*^9}, 3.4827414549866233`*^9, {3.482818533073589*^9, 
   3.482818546741351*^9}, 3.4828329262978067`*^9, 3.4829490365341043`*^9, 
   3.482949077063798*^9, 3.4829629276068864`*^9, 3.491896926515625*^9, 
   3.497688387796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"a", " ", "+", " ", "b"}], ")"}], "8"]], "Input",
 CellChangeTimes->{{3.4827413629474306`*^9, 3.4827413651661525`*^9}, {
  3.4827414587057543`*^9, 3.4827414615029154`*^9}}],

Cell[BoxData["1679616"], "Output",
 CellChangeTimes->{
  3.482741370337961*^9, 3.482741462159233*^9, {3.4828185331048293`*^9, 
   3.4828185467725916`*^9}, 3.482832926329056*^9, 3.482949036565353*^9, 
   3.4829490770950465`*^9, 3.4829629276381197`*^9, 3.49189692659375*^9, 
   3.49768838784375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], " ", "*", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], "  ", "*", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], " ", "*", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "^", "2"}], ")"}], " ", "+", " ", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}]}], "+", " ", 
    RowBox[{"(", 
     RowBox[{"b", "^", "2"}], ")"}]}], ")"}], " ", " "}]], "Input",
 CellChangeTimes->{{3.4827413817291226`*^9, 3.482741383338662*^9}, {
  3.4827414711289015`*^9, 3.482741472847827*^9}}],

Cell[BoxData["1679616"], "Output",
 CellChangeTimes->{
  3.4827413852451077`*^9, 3.482741473597904*^9, {3.4828185331360703`*^9, 
   3.482818546803832*^9}, 3.4828329263446803`*^9, 3.4829490365966015`*^9, 
   3.482949077126295*^9, 3.4829629276693535`*^9, 3.49189692665625*^9, 
   3.497688387890625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"16", "x"}], ")"}], "3"]}]], "Input",
 CellChangeTimes->{{3.4828193551934643`*^9, 3.482819370978894*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4828193742080884`*^9, 3.482819377797824*^9}}],

Cell[BoxData[
 RowBox[{"12288", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.482832926375929*^9, 3.4829490366278505`*^9, 
  3.482949077157544*^9, 3.4829629277005863`*^9, 3.491896926734375*^9, 
  3.4976883879375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"12288", " ", 
  SuperscriptBox["x", "2"], " ", 
  RowBox[{"(*", "  ", 
   RowBox[{
    SuperscriptBox["16", "3"], "3", 
    SuperscriptBox["x", "2"]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4828193936302805`*^9, 3.482819467306071*^9}, 
   3.482819525326975*^9}],

Cell[BoxData[
 RowBox[{"12288", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.482832926407178*^9, 3.4829490366590996`*^9, 
  3.482949077188793*^9, 3.48296292773182*^9, 3.491896926796875*^9, 
  3.497688387984375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"16", "^", "3"}], ")"}], " ", "*", " ", "3"}]], "Input",
 CellChangeTimes->{{3.482819472133436*^9, 3.4828194802182274`*^9}, {
  3.4828195319859605`*^9, 3.4828195330513983`*^9}}],

Cell[BoxData["12288"], "Output",
 CellChangeTimes->{3.482819481283665*^9, 3.4828195339758215`*^9, 
  3.4828329264384265`*^9, 3.482949036690348*^9, 3.4829490772200418`*^9, 
  3.4829629277630534`*^9, 3.491896926859375*^9, 3.49768838803125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  FractionBox[
   SuperscriptBox["x", "5"], 
   RowBox[{
    SuperscriptBox["x", "3"], "-", "2"}]]}]], "Input",
 CellChangeTimes->{{3.4828209060883827`*^9, 3.482820979176199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.482820983630664*^9, 3.4828209870223083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["x", "7"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SuperscriptBox["x", "3"]}], ")"}], "2"]]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["x", "4"]}], 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    SuperscriptBox["x", "3"]}]]}]], "Output",
 CellChangeTimes->{3.482820987944461*^9, 3.482832926469675*^9, 
  3.4829490367372217`*^9, 3.4829490772512903`*^9, 3.4829629278099036`*^9, 
  3.49189692703125*^9, 3.497688388078125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"20", 
      SuperscriptBox["x", "3"]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "80"}], ",", " ", "80"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "None"}], "}"}]}]}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"15", 
      SuperscriptBox["x", "4"]}], "-", 
     RowBox[{"60", 
      SuperscriptBox["x", "2"], "  ", "15", 
      SuperscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "4"}], ")"}], "  ", "15", 
      SuperscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{"x", "+", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x", "-", "2"}], ")"}], "  ", "Extrema"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"0", " ", "AND"}], " ", "-", 
     RowBox[{"2", " ", "AND", " ", "2"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"HINT", ":", " ", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"15", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"60", 
          SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}], ",", " ", "x"}], 
      "]"}], " ", "gives", " ", "you", " ", "a", " ", "quick", " ", "answer", 
     " ", "for", " ", "tricky", " ", 
     RowBox[{"polynomials", "!"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4830898191275578`*^9, 3.4830899045191803`*^9}, {
  3.483089937411347*^9, 3.4830899631693316`*^9}, {3.483090016418112*^9, 
  3.4830900987357388`*^9}, {3.50650024391625*^9, 3.50650027601*^9}, {
  3.50687011596875*^9, 3.506870140546875*^9}, {3.506870261359375*^9, 
  3.50687026496875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ygxTtIdunOA2hTe7PvP5ujLD////Y/h/lqAmTw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-2, 2}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{204., Automatic},
  PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {-80, 80}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.4830898587480216`*^9, 3.4830899052685037`*^9}, {
   3.483089964121597*^9, 3.483089968117987*^9}, {3.4830900227093043`*^9, 
   3.4830900995010595`*^9}, 3.4831394670750113`*^9, 3.491896927125*^9, 
   3.497688388140625*^9, {3.506500256213125*^9, 3.506500276806875*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"20", 
     SuperscriptBox["x", "3"]}]}]}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Calculus", " ", "for", " ", "Dummies", " ", 
    RowBox[{"p158", ":", " ", 
     RowBox[{
     "Use", " ", "the", " ", "power", " ", "rule", " ", "to", " ", "get", " ",
       "the", " ", 
      RowBox[{"derivative", ":", " ", 
       RowBox[{
        RowBox[{"15", 
         SuperscriptBox["x", "4"]}], "-", 
        RowBox[{"60", 
         SuperscriptBox["x", "2"]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "the", " ", "derivative", " ", "to", " ", "zero", " ", 
    RowBox[{"(", 
     RowBox[{
     "find", " ", "extrema", " ", "where", " ", "slope", " ", "is", " ", 
      "zero"}], ")"}], " ", "and", " ", "solve", " ", "for", " ", 
    RowBox[{"x", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"15", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"60", 
       SuperscriptBox["x", "2"]}]}], " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"15", 
       SuperscriptBox["x", "2"], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", "4"}], ")"}]}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"15", 
        SuperscriptBox["x", "2"], 
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"x", "+", "2"}], ")"}]}], " ", "\[Rule]", " ", "x"}]}]}], 
    " ", "=", " ", 
    RowBox[{
     RowBox[{"0", " ", "or"}], " ", "-", 
     RowBox[{
     "2", " ", "or", " ", "2.", " ", "Those", " ", "are", " ", "the", " ", 
      "x", " ", "extrema", " ", "of", " ", "the", " ", "curve", " ", 
      "above"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.483090416238472*^9, 3.4830904352032156`*^9}, {
  3.4830904694147387`*^9, 3.4830905049541063`*^9}, {3.4830952928640223`*^9, 
  3.4830953524737787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4830904397022653`*^9, 3.48309044654457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "60"}], " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.4830904476693325`*^9, 3.491896927171875*^9, 
  3.4976883881875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"5", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"25", 
     SuperscriptBox["x", "3"]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", " ", "60"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.73205"}], ",", " ", "1.73205"}], "}"}], ",", " ", 
      "None"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Find", " ", "the", " ", "local", " ", "extrema", " ", "of", " ", "5", 
       RowBox[{"x", "^", "5"}]}], " ", "-", " ", 
      RowBox[{"25", 
       RowBox[{"x", "^", "3"}]}]}], ":", "\n", "First"}], ",", " ", 
    RowBox[{"find", " ", "the", " ", 
     RowBox[{"derivative", ":", " ", 
      RowBox[{
       RowBox[{"25", 
        RowBox[{"x", "^", "4"}]}], " ", "-", " ", 
       RowBox[{"75", 
        RowBox[{"x", "^", "2"}], " ", "\n", "Then"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "to", " ", "zero", " ", "and", " ", "solve", " ", "for", " ", 
      RowBox[{"x", ":", " ", 
       RowBox[{
        RowBox[{"25", 
         RowBox[{"x", "^", "4"}]}], " ", "-", " ", 
        RowBox[{"75", 
         RowBox[{"x", "^", "2"}]}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"0", "\n", "25", 
       RowBox[{"x", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], " ", "-", " ", "3"}], ")"}], "\n", "25", 
       RowBox[{"x", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{"x", " ", "-", " ", "1.73205"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", " ", "+", " ", "1.73205"}], ")"}], "\n", "Extremas", " ", 
       RowBox[{"are", ":", " ", "x"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1.73205"}], " ", "AND", " ", "x"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"1.73205", " ", "AND", " ", "x"}], " ", "=", " ", 
        "0"}]}]}]}]}], "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4830970423908443`*^9, 3.4830974076863394`*^9}, {
  3.4830976987253437`*^9, 3.483097721894348*^9}, {3.4831349044775534`*^9, 
  3.483134908180086*^9}, {3.50649807235375*^9, 3.5064981213225*^9}, {
  3.50649818860375*^9, 3.506498268494375*^9}, {3.506498364713125*^9, 
  3.506498376806875*^9}, {3.50650022254125*^9, 3.50650022891625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
7Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-1.73205, 1.73205}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{228., Automatic},
  PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {-60, 60}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.49189695390625*^9, 3.49768838825*^9, 
  3.506498122556875*^9, 3.5064981975725*^9, 3.5065002294475*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"5", 
    SuperscriptBox["x", "5"]}], "-", 
   RowBox[{"25", 
    SuperscriptBox["x", "3"]}]}]}]], "Input",
 CellChangeTimes->{{3.4830974483215027`*^9, 3.483097453086487*^9}, {
  3.483097730830761*^9, 3.483097731018238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483097456507902*^9, 3.4830974634132233`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "75"}], " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"25", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.4830974643505974`*^9, 3.4830977363144693`*^9, 
  3.491896927328125*^9, 3.4976883883125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculus", " ", "for", " ", "Dummies", " ", 
    RowBox[{"p158", ":", " ", 
     RowBox[{
     "Use", " ", "the", " ", "power", " ", "rule", " ", "to", " ", "get", " ",
       "the", " ", 
      RowBox[{"derivative", ":", " ", 
       RowBox[{
        RowBox[{"25", 
         SuperscriptBox["x", "4"]}], "-", 
        RowBox[{"75", 
         SuperscriptBox["x", "2"]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "the", " ", "derivative", " ", "to", " ", "zero", " ", 
    RowBox[{"(", 
     RowBox[{
     "find", " ", "extrema", " ", "where", " ", "slope", " ", "is", " ", 
      "zero"}], ")"}], " ", "and", " ", "solve", " ", "for", " ", 
    RowBox[{"x", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"25", 
      SuperscriptBox["x", "4"]}], "-", 
     RowBox[{"75", 
      SuperscriptBox["x", "2"]}]}], " ", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"25", 
      SuperscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "3"}], ")"}]}], " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "*", "5"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"x", "*", "5"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "3"}], ")"}]}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.483097493206094*^9, 3.4830975147344503`*^9}, {
  3.483097546511429*^9, 3.4830975537917004`*^9}, {3.483097657105938*^9, 
  3.483097660355501*^9}, {3.4830977518282075`*^9, 3.4830978074308205`*^9}, {
  3.4830978655643754`*^9, 3.4830979413051643`*^9}, {3.483098037340581*^9, 
  3.4830980381061172`*^9}, {3.483135617826909*^9, 3.4831356182175617`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", "1.732050"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Extremas", " ", "are", " ", "zero", " ", "and", " ", 
     RowBox[{"Sqrt", "[", "3", "]"}]}], ":", " ", 
    RowBox[{
     RowBox[{"1.7320508075688772", " ", "or"}], " ", "-", 
     "1.7320508075688772"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.483134776826106*^9, 3.4831347790445013`*^9}, {
  3.4831348461743836`*^9, 3.483134865155721*^9}, {3.483134920506239*^9, 
  3.483134939893761*^9}, {3.4831349787156734`*^9, 3.483134980574751*^9}, {
  3.4831350445488887`*^9, 3.483135181047722*^9}, {3.48313525064544*^9, 
  3.483135378400156*^9}, {3.483135420693312*^9, 3.4831355136789527`*^9}, {
  3.483135677034202*^9, 3.4831356811282406`*^9}, {3.483135724865694*^9, 
  3.483135735913347*^9}, {3.483179932852106*^9, 3.4831799492496405`*^9}, {
  3.4834903424983053`*^9, 3.4834903428420553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"25", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{"75", 
     SuperscriptBox["z", "2"]}]}], ",", " ", 
   RowBox[{"25", 
    SuperscriptBox["z", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z", "2"], "-", "3"}], ")"}]}], ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"z", "*", "5"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"z", "*", "5"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z", "2"], "-", "3"}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483134993557049*^9, 3.4831350223961835`*^9}, {
  3.4834903484514303`*^9, 3.4834903638889303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.00020981230431971198`"}], ",", 
   RowBox[{"-", "0.00020981230432371535`"}], ",", 
   RowBox[{"-", "0.00020981230432371537`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4831347888866763`*^9, {3.4831348521421785`*^9, 3.483134867467851*^9}, {
   3.4831349268489733`*^9, 3.483134942924526*^9}, 3.4831349821994915`*^9, {
   3.4831350236459837`*^9, 3.483135182532515*^9}, {3.4831352523334155`*^9, 
   3.4831353800412426`*^9}, {3.48313544810728*^9, 3.4831355147259016`*^9}, 
   3.4834903673108053`*^9, 3.4918969274375*^9, 3.497688388375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "4"]}], "-", 
    RowBox[{"6", 
     SuperscriptBox["x", "2"]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.866"}], ",", " ", "0.866"}], "}"}], ",", " ", 
      "None"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4831366246717787`*^9, 3.4831366407491837`*^9}, {
  3.4831366759976044`*^9, 3.4831366765757036`*^9}, {3.4831367125584664`*^9, 
  3.483136720073755*^9}, {3.4840576996938353`*^9, 3.4840577013813353`*^9}, {
  3.506499078150625*^9, 3.5064990991975*^9}, {3.506500207338125*^9, 
  3.506500214775625*^9}, {3.506500293306875*^9, 3.50650030526*^9}, {
  3.506500340885*^9, 3.506500343400625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
j7obWNRTMkpmy1kX0P//v8f/AQPdFhc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-0.866, 0.866}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{233., Automatic},
  PlotRange->{{-1.999999918367347, 1.999999918367347}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.4831366315152225`*^9, 3.483136641452277*^9}, 
   3.4831366774194155`*^9, {3.483136713870908*^9, 3.483136720823721*^9}, 
   3.4834903692795553`*^9, 3.4840577036938353`*^9, 3.49189692753125*^9, 
   3.497688388421875*^9, {3.506499095588125*^9, 3.506499099650625*^9}, 
   3.506500216025625*^9, {3.506500296275625*^9, 3.506500306088125*^9}, 
   3.506500344150625*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
kfkviA==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculus", " ", "for", " ", "Dummies", " ", 
    RowBox[{"p158", ":", " ", 
     RowBox[{
     "Use", " ", "the", " ", "power", " ", "rule", " ", "to", " ", "get", " ",
       "the", " ", 
      RowBox[{"derivative", ":", " ", 
       RowBox[{
        RowBox[{"16", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"12", "x"}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "the", " ", "derivative", " ", "to", " ", "zero", " ", 
    RowBox[{"(", 
     RowBox[{
     "find", " ", "extrema", " ", "where", " ", "slope", " ", "is", " ", 
      "zero"}], ")"}], " ", "and", " ", "solve", " ", "for", " ", 
    RowBox[{"x", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"16", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"12", "x"}]}], " ", "\[Rule]", " ", 
     RowBox[{"4", "x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "2"]}], "-", "3"}], ")"}], " ", "4", "x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1.732"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "x"}], "+", "1.732"}], ")"}], " ", "x"}]}], " ", "=", 
    " ", 
    RowBox[{
     RowBox[{"0", " ", "OR", " ", "x"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"0.866", " ", "OR", " ", "x"}], " ", "=", " ", 
      RowBox[{"-", "0.866"}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4831367275577946`*^9, 3.483136814038164*^9}, {
  3.4831370797433095`*^9, 3.483137081352602*^9}, {3.483137302368944*^9, 
  3.4831373029472284`*^9}, {3.50649861904125*^9, 3.506498698744375*^9}, {
  3.506499009650625*^9, 3.506499059931875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "=", "0.866"}], ";"}]], "Input",
 CellChangeTimes->{{3.4831370250742335`*^9, 3.483137064103485*^9}, {
   3.4831371330530796`*^9, 3.483137222722031*^9}, 3.4831375987838697`*^9, {
   3.4834903758108053`*^9, 3.4834903762483053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"16", 
   SuperscriptBox["z", "3"]}], "-", 
  RowBox[{"12", "z"}]}]], "Input",
 CellChangeTimes->{{3.4831370585725183`*^9, 3.483137059400601*^9}, {
  3.483137117756988*^9, 3.4831371192881594`*^9}, {3.4834903805295553`*^9, 
  3.4834903826389303`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.0006096640000006204`"}]], "Output",
 CellChangeTimes->{{3.4831370359330525`*^9, 3.483137065337797*^9}, {
   3.4831371201162424`*^9, 3.4831372242380733`*^9}, 3.4831376003309727`*^9, {
   3.4834903835608053`*^9, 3.4834903903576803`*^9}, 3.49189692759375*^9, 
   3.497688388484375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"2", 
      SuperscriptBox["x", "5"]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.095"}], ",", " ", "1.095"}], "}"}], ",", "None"}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"2", 
      SuperscriptBox["x", "5"]}], "  ", "-", 
     RowBox[{"2", 
      SuperscriptBox["x", "5"]}], "+", 
     RowBox[{"4", 
      SuperscriptBox["x", "3"], "  ", "2", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"4", 
      SuperscriptBox["x", "3"], "  ", 
      RowBox[{"Derivative", ":", 
       RowBox[{
        RowBox[{"10", 
         SuperscriptBox["x", "4"]}], "-", 
        RowBox[{"12", 
         SuperscriptBox["x", "2"], "\[IndentingNewLine]", "2", 
         SuperscriptBox["x", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", 
            SuperscriptBox["x", "2"]}], "-", "6"}], ")"}], "  ", "2", 
         SuperscriptBox["x", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", 
            SuperscriptBox["x", "2"]}], "-", "6"}], ")"}], "  ", 
         "x"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"0", " ", "OR", "  ", "x"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.095"}], " ", "OR", " ", "x"}], " ", "=", " ", 
      "1.095"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.506499141213125*^9, 3.50649931276*^9}, {
  3.506499394056875*^9, 3.506499505025625*^9}, {3.506499580244375*^9, 
  3.506499586400625*^9}, {3.50649962504125*^9, 3.506499625775625*^9}, {
  3.5064996559475*^9, 3.506499682181875*^9}, {3.506500142150625*^9, 
  3.50650016572875*^9}, {3.506500323431875*^9, 3.50650033622875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zMP//1+T/D8NBt58
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-1.095, 1.095}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{220., Automatic},
  PlotRange->{{-1.999999918367347, 1.999999918367347}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.50649965810375*^9, 3.50649967766625*^9}, 
   3.506500166385*^9, {3.5065003293225*^9, 3.506500337088125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", " ", 
    RowBox[{"-", "1.0954451150103321"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"12", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{"10", 
     SuperscriptBox["z", "4"]}]}], ",", " ", 
   RowBox[{"2", 
    SuperscriptBox["z", "2"], 
    RowBox[{"(", 
     RowBox[{"6", "-", 
      RowBox[{"5", 
       SuperscriptBox["z", "2"]}]}], ")"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.483138106251886*^9, 3.483138141786313*^9}, {
   3.4831381978534775`*^9, 3.483138282737402*^9}, {3.483138325855502*^9, 
   3.4831384205590973`*^9}, {3.4831384707854347`*^9, 3.483138508919957*^9}, {
   3.4831385714308014`*^9, 3.483138718689829*^9}, {3.483138764156542*^9, 
   3.4831388062640305`*^9}, {3.4834903969358053`*^9, 3.4834904189983053`*^9}, 
   3.4858756358176093`*^9, {3.4858756708801093`*^9, 3.4858756764269843`*^9}, {
   3.4858757302238593`*^9, 3.4858757349582343`*^9}, {3.4858757991613593`*^9, 
   3.4858758073332343`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7763568394002505`*^-15", ",", "4.2632564145606`*^-15"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4834904404670553`*^9, 3.4858756370207343`*^9, {3.4858756774738593`*^9, 
   3.4858756843801093`*^9}, {3.4858757312863593`*^9, 3.4858757353801093`*^9}, 
   3.4858758021457343`*^9, 3.49189692771875*^9, 3.497688388640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "7"]}], "-", 
    RowBox[{"20", 
     SuperscriptBox["x", "3"]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "30"}], ",", " ", "30"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.30"}], ",", " ", "1.30"}], "}"}], ",", " ", "None"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "7"]}], "-", 
     RowBox[{"20", 
      SuperscriptBox["x", "3"], "  ", 
      RowBox[{"Derivative", ":", " ", 
       RowBox[{
        RowBox[{"21", 
         SuperscriptBox["x", "6"]}], "-", 
        RowBox[{"60", 
         SuperscriptBox["x", "2"], "  ", "3", 
         SuperscriptBox["x", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"7", 
            SuperscriptBox["x", "4"]}], "-", "20"}], ")"}], "  ", 
         "x"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"0", " ", "OR", " ", "x"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.30"}], " ", "OR", " ", "x"}], " ", "=", " ", 
      "1.30"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.483139235761222*^9, 3.4831393520899005`*^9}, {
  3.4831393952308016`*^9, 3.4831393981370697`*^9}, {3.483139444512367*^9, 
  3.483139444840494*^9}, {3.4831395004346*^9, 3.4831396332796326`*^9}, {
  3.483224399862465*^9, 3.483224415627989*^9}, {3.50649971385375*^9, 
  3.506499828619375*^9}, {3.50649986151*^9, 3.506499899650625*^9}, {
  3.50650014810375*^9, 3.50650015901*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
67FT5TC2rNlhbuf+B/3//2ex/wFXX//v
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-1.3, 1.3}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{212., Automatic},
  PlotRange->{{-1.999999918367347, 1.999999918367347}, {-30, 30}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.506499900619375*^9, {3.50650015160375*^9, 3.5065001596975*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "4"]}], "-", 
    RowBox[{"20", 
     SuperscriptBox["x", "3"]}], "+", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "5", "}"}], ",", " ", "None"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "4"]}], "-", 
     RowBox[{"20", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"5", "  ", "12", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"60", 
      SuperscriptBox["x", "2"], " ", "4", 
      SuperscriptBox["x", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "x"}], "-", "15"}], ")"}], "  ", "Extrema"}]}], " ", "=",
     " ", 
    RowBox[{"0", " ", "OR", " ", "5"}]}], "  ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.50665916279125*^9, {3.506870059203125*^9, 3.506870096609375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVmnc81e8XwK3shHttMorICCGJPidkJUkZSUZGlIyIjIx7JYR8S2ahRcNK
ZPs8JJmRCJGshJCdFb/P7597X+/XOc845zzPec55vT7iFz3NnOloaGiCiZ//
/3+wFf+xvb0LKZtGNW6zZIHUiqqx3+ouJOLscD9pPROi4ozKp+d2oRveG6qa
w5lgXOVzv294F1ptr9Z7m58JnQIN+m/f70JXT8fTmhplwlDX5UKX27vQXMDA
ISwiAzaNisPbOHahnzEv3rTTPQKVQ/p700U4kMXHcN5EmTQAnOvHE2521H1p
ItKuMBEOZOVkmO1nRR86ZsUk7RNA5eGp/B4JVvT+zXZWjmkCaKT8rbYRYkUl
3zsqVY4lgF6C/ncXdlaU4JdQ4CGRADZhv4SCZllQ/KSfeF3zXYiy35f6tIgF
qfndi/X/Fg8jYjn3lzRY0HrxedEzLHGQ+Dg7KukEM/KiD1rofxINVoqSRgE6
zCj4XEhFSWQ0CONP2WyOMKNnEmf6n1+OhmcDWfHissyIq9l8o1E5Gor50hNz
WZmR8tStMIH6KOiKu5tV18SExDIf7Pg2dRt4Am+UzeozoWczKTmxBpGQZGY0
oafLiIa2XkRc0KZCDceAYbEmIwqdmivZkqPCz+arr8VVGRHlvTDzGz4qqOj8
57EpyYjIr1VmDGYo0Hmwd+kNEyMK8j/XpptKgV08LrQiLTuQYMEOqvNSOET1
hAsunt6BXiyp7OIsDYNAm3LjTDsGJMd+66dPbzDYvxa3v2zJgKqulJ/6XhQM
euvRPqqnGNDRESfBy3HBwJ1indZylAG9cnUKndEOhldfNn79FWFAIUeXjFML
guCb0VGq6QA9ijHeq+BzNxA0Dr8vpz1HjzoFOlufuN4AsSjZtlZTeuQX+or9
tP4NYOy5P5RsQI8W7yVKi0ndgE5fJyYFdXqkvWH7XGzMHy4X7jC35qNHplfk
ol84+EPaPoO5om46xFFNU1130Q82eNqknMzoUPz6xHJysC9cZPkRY25Eh35q
nw+vt/OF5s25WT1tOhTcbmjHoeMLaaPkUhllOmSP1prWWHxB442N/h8uOhRy
T8NOPtUHbhhPXwr8TItko0Sq/1ZdgxUK28sEU1pECnLuTRfwBls/kZ0UA1ok
oeU4cIrGGxrcDnj7AC16Ppe1svuXFySZnjlsoUiL8r7E7OMo8QLV3elNQpy0
qNtx5K6CmRf4lu+fym6nQf10x+w7JDxh4Y+hbLUJDUpVak+P0XOHGk7PA4f1
aVBKrmGJm4g7RCslHizBaJB/2j5F36UrIOYzeCRPkQa9ys3pZ316BU6uXDN+
xE2DGoz9GDXprsDptUP967nbeCXPkRcPGt2ghnvALqhqC+/Q6vW55HsJzM9K
ufrkbeHmL0rqb5pegukHXl5XMgi5mwRXldwlEBDYEX4+bAuPEv6gVPjTBXxF
FZ4c0d3C6bav5/icc4H9cmFjGy3/8D3KVZKmBs6QfHyvW3D/Jp75IelXtrYj
vMoV6j7QsoknpfSL/hZzhBoS6dhoxSbu+5scZL19EcaHaQWM0jbxJ9HJvBVV
F0El5Ecj37lNXLTMxjDg8EXofJcm/fbrBj7WXLz2TcMBdkpzTUx+Xse9St7X
JpTZgthd5rOPatfxkdmwfMdQW1BZ2cZN36zjSce0myL0bMGmfja5NGEd/2L+
K6aw+wK8sm/Vv3VqHZcpuX86568NGKTezhFrW8Of0XTVfTM8D1TWLRfLxlWc
8cWD4aeSVmDbKkQSK1/FsRs3j/xZtQT1+MP4xMtVfLwkeN6/1RJmua7zBd5Z
xa95Mr4GX0uwFpj++NBkFX/Md3HiZYMFKEp/kx7p+osfana8UOhnDgPH3025
D6/gPVM9NWp0Z6CUqStJtXMFp6ypeX4aMIN7TfPaW3UruILcuMOjUjPQPymf
fvfZCu4W+9Vk6KoZFJ19dqLo0go+/PQJx/LAaYhyvJf7d2YZ/6165r7iB1NQ
DffwoKwv4XkfPmsbB5wEcuyPyuTfS3jvE+n+Zs2TsJBkypI3sIR3BK9ffEFz
EvJzlZ/11Czhd7nPjIdEG4N070qfHHUJ38Ky9RIyT4DwgdDjPWxL+FfeSJG1
AUNg+H5XWE5kEfc3+081Pk0PRn7RXD7GsYj7WCy26LrpQe2Cd6nF9gLePvWx
4JS6HoQwnzULH17Ap6efczv0HIfVg/xRX58v4HlBKgfcBI7DdEzWYpjCAq4X
0+nekKsDX9TfNHdj8/jZjCc9/hzHQMGtPSj7wDyucbTM+f0oQEzqjJy/6Dye
82pI0qUcANZl7vJvz+Fxr6yeFTgD5Fc+OXO+Zg63fGmxGB+BQfTRxIEhzTnc
zevatiOvFox5FMW9kZvDO89tmVNaNAEyO45ShOdwtTCTa9rhmjCzLaCtv/oH
N348P/hs9gg0UthaWv3+4JwxlS0DHRoQEjU70OMzi3+MCWJ0L1IH1cn9WMCZ
WXzgevG4obc6TBteeix4cBZPeV10uFpRHc6xDTlfWJjBp/Lj5B3eHAKV+M+z
I14z+KmnEuTocjWYul9MM3t1Gs/P0t9VOKYC5pmBexlcp/CLd/Z93PNYCdJK
6Jk6DKfwgd8X5K76KsFgS+xkuuwUTt7hxLLXQAlcVzPyD/6ZxNHKRkfPnCIE
n36v7ug3iXvMP5HX11eEZ/TsJ+siJnAzbhHJW7sUYFLgwYF4lwmc7Ut7vcZ7
eVBQ3M1tbTCBs863l5X5y0OZjWLPPNsErtlEZWQZlYOWkrMO4vd/4RdSjA70
18nCwqVH18Mej+MCDP3DetkycChEysqYOo6zC/atrzrLQHBigQa/8zjeOCKE
OUjJAGNt7XaB9DjudaXt06mX0iAoOB79o+AnHhbm3XSrdB8ca1XIOFozhrt0
6SfbLElC5EhpGGvWGD6uKL/wu0YSmlfB8Wv4GO61nVwrGiMJZyXPSHscH8On
ZWftvCQkwTXEv+hR6ygedVFBPNl6LyQooobNbyN4mEysA/OEBLT/99QLqxjB
BZcOLZeVSQDHYqQgJXUEH8k9ZscbIwF3Sk56MFmN4PY1+050KkhApEY/D3f3
MK601l4iHSYOH9Jr8LPFw/jG2VxZQQtxYPj32C35/jD+Ic32TZ6cOITjrtXC
ZoS84l1iSb8YBOuuOO1rH8IjZ7tv7DkmBpXP+zgu5w/hmXVvpGiExWCdsbos
N24IX/6XFjMxKwr+TVR2ZeMh/DHnD/Ej9qIw+lDCNeDeD1xup9CZTNPd8KnQ
ivFZ5Hdcv7hNT9hFGIx9RK1ljn/HRXS/O8TIC0OT6nhePv13nC8Xffq3LAT1
FT7m5WEDOEe5pvNUtBCU18c/+xTYj6sdea55v1oQ1G6br5453I//2mXyYCxW
EIoNhY37/n7Dv300mpW6IAj5n14ujvp+w6kpv+/60gjCs9567TWPPny/dsSF
mdMCIJF+JylEvg/P+jAWFCYtAJkXzKbop3txM81/yXPb/JA28uM/Drde/GuV
z48Lb/ghYXp9aI9jD56dZXJn325+4CioVXkp3oOXOj73uLDBB3e8o6IUhr7i
3xQ20236+CByhUfx8IWv+MHUw9x5yXwQRKMUamLZjUc6T9qbifAB8y9dK0a+
btwq5yaVRMsHiW1WSjVfu/Brbwu2qD95ITctbFTeogv/LKEx4VbICwMqHfo7
zb/gTnvEZVhNeMFVaEzsA/kLblLd+5LxEC8s0a6uBXd14mu9sT5ZYryws100
d/pMJ96w+u3Pk2UeOOrmydlq9hlvv4PLP8/mgeZT1Ekq92d8WpI54WQiD1io
Jdcd6ezAye0LvuEUHvCkx31fn+7AHwtrr1HseWBjsvOkI1cH7u3epmJsygMc
j9tOqj1px0UlDGRTgAewIyJFPI8/4bna83EFEjxgxXzc6ZbYJ7zgoGemH5kH
vLrdeZcz2/C+pKB3pYw8kOVZFdiV0YrnTfsZZ06Tge7ZeZ37D5vxQvuUio/V
ZBD0pi7TCTfj43lS9yXekuHg0dc519KbcNVsP63xF2Rw6l1nM0trxHdqqlEz
H5Ah+LlETa1AIz71x/NHQiwZEq8ZeSmlfsRvB23Hj1DJ8IE9rYszpQF39TH2
y/Ahw2BfbWQYXwNe2bHpz+BOhpXsSfW5pA/45K8J+zonMkgdO/yo/UE9/s5s
IUrLkgxHORxOYTz1uMg12fQVUzJY9kfRFiS+xxdGejS2jcgQdb3XOf5+Ha56
07p7BSNDljYN/xZ3HS518nrusAYZyndJN1+9V4vHVMY2kdTI0DlwKvg7Vy3+
70emyB0lMky99Fc4+R/CfWY6047LE/7wzxyq4kS4qrKnyjEZMqhGxUueE8Px
n3yjg0GSZEiqkp/l212Nn1iu18reTYYGi5tmf4Wr8FWDpqH/hMjwd6713Veh
Spy6/Nm7mJ8M0neEhd4JVuA6M4y/2XjJYCXpHvpAoBwf0yrRTyKRIRqvHPXl
L8OvcJ6KOM1FhopzbAZn+Upx1ZdXMo7sIva3aJ17kPcdvnTpY6LZTjIIxb/i
JPGU4MUfdS4lspGhpsvOX0+yGBd8wiojwEoGeyGewQDVt/hpz8kenJmw52Kz
bt7xItzbeH9PJBMZnr0IfT1k/ga35lqOcWckg94fFW6ySyFebHrKynMHGTqu
dM3HT+fjk5bCz+MYyEBeO4ovs+fhcgdEej/QE/uPfBlrI/8a90uds+Il+CGJ
bP3+5Es8kkxKuElHhqGskH37PXLw4d7B8TVaMuxVmFxKiH+Od/bd+RhNsFvl
mbq/+U/xKx8OPJIlON+g5q5t+2OcylDz5TsNGcZen66I+ZGJl1cw9WYQ7N4g
ZW4l9hD3aqjku0rw8tDGH0mHFLwTudDqExyy0RGz+DgR//zvGoMswYy82ZK1
Iwn4nljp//gIFnFYCRPRj8GPq+bxsxGskJT1rqyRggfeZNjJ8P/xSQ96cxL9
8Janu4ZpCI6ge7ErwM4WZ3kSx/x/XjjLqJN3/wLWKCe0ur1NAkHZqz+LHfww
57fKkv/nYHt2LayAgtHZyzFuEnxZ9iLTM/kYLIrvKPcywXIb/a4MXxOw5wFB
tRMEPxti/KT2IBH7NNQd202wcIPSQbezKZjWReHZcoLvv7ZJSSc9xJbbNuwS
CWb97/a/ts5MrDp/64IjwceOnFOiaXqMiRvFOUkSvJk365j64inmnzUz17tF
gjKxiCTlqOdYr7tOeDDBvvcFmlou5WCSkgmJHAQrMhZsOOm/xBjWi17F/SPB
9A1dhS2p19jwV1fd1U0S5Pzus09mzMPmHIxHjQm+aOt5X3E8H5PZ7GaJ2SDB
XVe60bGLhdjJ2vNH8teJ8eIng9+YvcGGbnNtlq6RwKg/mSdEuwg7MMz8+fkq
CV4kjuQbKb/FTggogd9fEjCayBvwSRRj7IcsO/atkMCJ6cbwKFcJxrUpyVK+
RII6VBdYSPsOqxmT9JFeJEHIQas8w+FSjFp2gPbhHxIMTD/R4/1chuloZ2o8
miGBRvbMjxFUjm3KsXX4/SZBip16QEFhBTafZmqyb5IEK/xU7uCsSkzObb9O
3jgJzna2vTZIqMJuHlDSYhojQdEd/uM8YdVYEPS3HBwmwdWtPP98Oxx7q6w/
ufWNBD/PB0dV70PYmq1ReloPCRLLxLufZiKM3t1Hmr6LBAve7h5ed2uxzXrY
q9pKgsefuCotmOowGWVy9cZHEpjKljJphdZh9+uu3Ip+T4L8MdrHLJ7vMdGk
WLrlchL48RztIM+/x74IGjy+UEyCo3qB26I+9di7ySuvg/NJ0JazcEHN/wMm
c8tw7OtjYv1ehbhjax+w0TXF2xzpJLBhuVJlHNSAibAM3Fy+T8Tj8qigY+hH
7GIYk01zBAmK00WNPGgbsdfHjWuLg4nz2no+IIDaiC3Yfb+u70sCNoWunru3
m7C/kQ+7bS+SYP98fWLV3RasT6Pkz14Nwj5x2vqPXK1YhrOovvgBElSYaS12
3m/FhlM8d5ftIYFhccnpyeQ27N1QV1A+Gwk4f86HLQl8whq9rz1k3eaGXh6F
wu30T5g1A9O19XlucPXP5uDNase27MxD4r9yA//Z+QxOrg4sx1rh3IFGbgh2
v6vGa9aBbZdrKl0o5wbdRy3O4l0d2Kj2JYVzadzwZUun/lDvZ8zyHdfKUwtu
UOMbOa8l0Im1KZqeCNHlhrQDYYva1p1YJ7npUq8SN1y0r5IwGejEWGOUr+1g
44aFWpVwp6EvmLdiyDWeUi6w+NbJf1m8CxMVa8hAWVxQseBV6HmxC5uWon85
GM0FlD15PwLHurCamtA1d2su4LolefS/iW5sfDpFM3uJE3wfve9OkvmKlcUe
oavq44TeEoerDy9/xaZSdVjUazgha/zRw5zpr1gGD90zm1ucoGjAu1E914NZ
qzU3y7Fzwik2prKp1T7sL2NTuOTyTkgqYzuVrvoNU3+S8ORVwU4YdOYcP3Ht
G9ZWvPR6zXUneCABct7vb5jv5X29v3vYIfa6nJfnYD/hX4XU79ls0CWhxCQm
NIC5zpKWPSzZQKhDNaPDcgA7HcohXcrIBq/2Y61Knwew/w7syrvowAqNP05L
L73/jjXUorYxRhbgjLMgetlBTI/C5fU7lxksNc5bmGsNYr1/7YyTTjPDeKJT
xLt3g9gVts3I9iQmYDDyH7rx8gdW1KOllsDJCGLWJq0hH4ew+pjUHWY4HdQX
dvD1/BzCZJ1rx2JN6MCV6YzjAYZhTCqPTdxggBYKii3Xf8Aw1nA1ZE1tkQaO
7nKQPlYxjL1K3ubxEdnCbOp9IujzRrAuzxeO40vLGI3QSvv5lhFsb9obI6fh
JeyZ9w2h4skRTIKxozujeRH7vftmkZPUKBasKGx2+P48FhgQOfQhcxSbs29k
lFibxFIVUjWj7o1hQxIN47QXmzBtjVrk9nYMo4nksir2qMKmj0/qnugiuHz6
zvkLyRhcOHySg/cnJma075vzrnp84k7fhcTUnxhNfVK5zPgQrj4pEJqVNY6Z
umHbynuW8ZGlY/SU2nGs8LKZxo/WFTyW5vJtx5FxbHWGLWgtcBUf4qu4K7X3
F+YucCInZmwDj9KzzsrN+YV9+n3TscOPFvU+Tasty5/AskYr9ZpnmBGloO54
WvsEZv+vy1HiFwuSq5xqCpqbwOYKQxO7R1hRWKdG51HlSUxTeW7AfJgdSdP2
j9SXTGKth40Eb97kRDdshRg+V01h2YP2d8w/kxGfwEO9yeZp7Eklfn7NdTeq
uCcSpfR7GjNwuvSfJasosmHPbApgm8GqlgPj/+aKoifbj41ZjWewN5o/FWmC
xJDceI6ZbNsMdjF4x1B2iziCt29tr7bPYsFWezlb7uxFJdnOlatuc5iXnZfa
iZj9KNJRakA4cA5DH0cCfv7Zj6zEfm1CzBxG438yQd5CFq2nuh6NfjWHGTD/
zm3cK4cg7kqtwG9CrlVXr9Isj5p9vD9quM9jVbavkUC6IhqEm1+CPRawaXr0
4J6RCpp4wld85+YC1qjdYe8SoYIWGIoS02IXsHmYuBxTo4KYmsbNy14tYE/9
VN69P6iKFE+b9i6OL2CiQTt8tsTVEMVhz/fLdotYyrSnYP5OdSRJaRq3Ml3C
GP4KK5dKaCLFMcePl+yWsMsnI9qaXDSRht5Wjp/HElZ/zYNd8bUmMmE96JYY
u4TFsNzr/KuihfzuPfzd3riErZ6VZfA3Pooan3jO6R1bxjKENt48PQ7I/T3P
uoryCjbLE/Dd7pk2Wtum84/SXsFMTSMkWNu1UaTm3GK/2Qrm9byU9deaNnpc
0jxD8VnBoi11Z9VNddDXnNDhjuIVzOWynMjRbR10LHay0f3QX4ym/7vPV5fj
iNe8OvmZ5iomXC/0OcDGAKFxJ1Wy/jpxfhszh0dMUGSj7DUzi3WsOGFDr5r3
FDJ+tZCf4LyO0TAxmTQYnUJ9V8Okd0asYyqz32/avz2FFpbShRhr17Hxy03v
rHVM0V76L7SrGhuYQTJtxZzgaRQleuxTv8ImNr4jL1Ok3wydshK59JR3C2s4
WdqkkGmBuOcT6B5IbmHFTWmREjUWqCuaISNSZQvL/mj6Vva7BbKu/N3lZraF
LTQZnAoRskROuyu0FeO3MGvbtYN7Uy3RjTGL3dU7trHc2tlkzxQrlOWV0P11
aRsTGs84NJltjQLqaSVuTdIA6wCtqS2dHZKX7xA0nqODtA6G2O73TmhL8wvH
lS4GoJU3VBrQvYyUHynFiQwzwvdeV1r1i15obkBq+MgYM9hIRwgSuQa1vjdV
LKpnhd0fioNE6P0R20Y3S1UbOzzcJ3TK+lYgutR3d1CkmAOmeG4bDL++ibJP
eNVfN+CEx5q9CwXaYajuaV9kmDEnBErZ0kUYhKEfG9qGd0w54fWzkNSzJmGI
P5fnU5YVJ5BvyBr8PheGYtgre1pcOeFp+zLLrFcY8mzb8Vs8mng3VJ7L62aE
IfVT6Vyfmgj9k/QzrCth6GwOQ1dvGyc0vJf67bQRhry3ryaNfuYEvWrj8gqa
cPSqAITWiHeolZEz/xxbOBLhHN+7d4qQq26fcRILR3SfFdUDWblgyGqfbY5h
OGoxa7CVOsEFm/b55hUp4UiNLPX5twkXLAmYDis+CkdZ3bd03phxgZ+XmNjT
x+HIz+q4tCbxDpreVXsa+CocSdjWz59244ItFXXl5cpwdMOtLuLmbS7IQmU7
yIPhSDKs5lXXey7oCnvwrms3BSUc2y2S9pELRlzSW0olKGidLuSuXQsXrAuV
/3kgRUEdt7R8pzq5oH7jmKmOAgUF36nSohnhgkAt0x8OWhTUmVTRIUvDDSO1
NQ9eWlNQaN67FYomN8QeimM5+h8FxUjKJqQCN3gFBi1UJ1JQ0qNMmUKiLpg9
r6hzKIWC8uOibL4bc4N7GhcNbyYFDVy1rjt0gRvoxsT3UnMpSF1hK276JjcU
7Z+a42mgIN3sa/voKdzwoubcTpkmCjq1+xcSiOQG60xacdVWCnLh6FjUi+cG
1vdhXOqdFPRg9vG5xxncEH/D/tTEdwpayD8uaYFzg9zpd39/L1LQllRFjft7
bmD/bSl3Z4WCWDIVrKgfuUF9XuGnxBoFid3lu1PYzg0DaS4NR7YoyMRzco51
iBuGTLoCuZmpyPrXhRjxMW546MK64zorFTnbde5Rn+CG1XrmvnZ2Kgo+VWnh
PMcNnMJr4MFFRa8PxFXhNETdKWGtfVKQit7l0Fp8ZSABXfwDY29hKqoT9fsz
zUyChyvxznG7qejbLjsJQS4SuCwxZedJUBHznGKUrzgJjBMzEuL2U5FTYdcZ
GW0S7KUUhNWrU1HNf9ij9eMkKGwMv2+kQUX8Pq/GWwxJkOBocbrpCBW1qIYF
eJwmAfsLq5LCo1SkXCmb+daeBHN2yd5SulQU+zBpIsKJBFsn7Q54H6ei8Zu0
yhauRJ0u+8ilWI+K0qCnftWTBPUs/0nvNaQi2gbKlFYoCShScSdenCT8kTNz
cBeVBNlex6XemVBRcZTVzaFIEui1eRpUnaIi1xMKnNR4EpCtlg3fnCbslUs9
d/Ye0SdIlwtnmVGRMAfDU8kkEpiZIpHbZ6ioo6NPtfER0Tc5mP+nZU5F+4t0
Q1OJult3S/MvuwUVRdwvaLz8nAQM54SudRF8yOLW+Z15JEiSOh93woqKEg7N
PRssJMGnC0ziGwRP8Z+fLSDq+tZ+rPDJOSrK6FcMN6si+sTcrzl91lS0WpXe
vAeRwKPLi97tPBWZZTCSl4k+Ye8sx7E5gnNDvS80EH1EwmEja08bKtrhMJCd
3EKCIf4Kg3GCbbX151zbSWDLubTD/AIVle0pOqzxhajzG+7cqSSYe4cIlY3o
WxroSV8EbKnIffx26wDR18wVCXz1JLjh4wJP/iAhH5KPryZY7OUFu9AREkBV
/xKdHRUFxjS+MCX6Jq+kPHoguOvKwQXxKRLEjMgW+xKscDLjyCLRhw2oft/O
IjhKgeVW/TwJZvX1huoJHtnl++nBMjHfwqTJEMFH5gf5LhF9Ypai4fFFghM7
DR3UiT60V2y06h/Bs2+LX7HQkmGMTrVgm2CDB6JL3xjIMKtewbNG8BO/GK1c
ZjKI6U9PThK8abkceZOdDINftCU7CbY4bN9hwkmG3JyDtW8ILhRsERAjE/p5
yqVRBLNuqjrO85GBZv4NjSXBTt+zcuuEyLD/iXiyMME1NWwr90XJ8IxrzqeP
8Ad/FtHr7yFDbFF0QhzB3uHDUWr7yCAneG5cneDmi8adTLJkGN9u8Ogn/L1X
t1SoT4EMBloae64T3MsYlx+kRoas9rrlOCJe8zxP2w9rkOHah+SnuwhmlSyf
+6tFzMc1WBlFxFtT56ey73EytK5WcDsQ58PcbOOMsiEZwL1FFxHnx8OB6/qc
MWHfGDTyEpwZqlXqfpYM/OlHXr20JOIff6Z3vxUZysbkNn8S57PjkdvaxHli
faPzkQIE01U9OOLsSIalaJX9LmepyGV1Br9wjQxzQgNbiaZUFMrEMCzkR4aO
jA8OMcT9SeEVpPsWQPjruWGzH3G/mlX0dC3CyfBif8E9FWMqkvfOaDRJINbj
9jbR0acivbDiSfZEwv6KStk54j7b3m1mbUkmA/vM3f77xH1PyFsx1s8k7Hsr
m4ofo6KlSZPPWD4ZEr0O9OYQ+WLnmtPCvzdkcFX4/ICVyCdSzEGkqhIyMIjd
XHAk8o2VVI65ejUZGhVInusqVFR5cbtPsZUMKpbFeIk8cT69eTZm2wl7JBRR
qywVTYfJCud9IUPXlUbZbzJUtDvT0lamn4hvt9r+XkkqovQXjIhPkWGVf8dO
exEqSp/6QD80QwbducsFMkJEPlnr35sxT4YJhf+iJvmJ/MTHfElwjdgPqaP+
BJmKjM7a/+Zm5oEq9bu5qUQ+5mrjXKKX4gGGy9Ke5ssU1HzviCZpPw+MvVPx
OLZAQRFWLhESCjxgehzcxf9Q0OpoJfmYGg/M9RzUqZ6goMF1F9UQPR4o3BC5
6thPQbnS1X6rLjygwlckf7GGeG9mf9UwXeGBh0t9fDEVFCRazM3E58kDCZMu
/s/fUdA9zDVZ1Z9Yj2bF510+BQVYkMqu3eYB/ghjT8igIL0It7XpHB6I9ZFo
ng6kIBqjxGObr3mA5k7/or4fBVXswqPZCgm5yyZjkjcFyaeTBfeXEfNHSjSw
ulIQuQjXuNTIA4lhaoXmZylo+AdP8PAED3QUWF1120+810fqtrpleKErhfW7
YWs4irg8upIpzwvSSb8rLjSEo9hUhj9uSrygG/hE3RmFo4d/9X78U+cF3/6R
ZZPicFT5tgWXNOCF1c8hObHp4WhdtjvsugsvOIWU2b26RNQXwhN0PE95gYaz
NlqDqIfCTrBsDGbzgmKp+Y+3s2EoKnD/4otXvPDC58uo6K8wlNLrPqpZxAvM
qovf2nvCUGni/HunWl4Qy9Z6HV8WhlbYNyKKf/CCAVe/QLh/GLr+byfTWWE+
SHnIurXjayjaPaoj5SnGBwaq9NurtaGooTHgeMxePuA3bfBqzgtF/Ik/qUiO
4H1hFsy3QlHF/moaeS0+mDjtvzqjFIporNzXd9jyQdird4smt0JQTFHzTGkm
oY/pv+7juokOptDs/PKUmP/G9H8+a8Fo4Kaa3GwOH3D+87OdHApG8oZPLu8t
5APXyAQL14Jg1PEj4FcCIva3myP0jVEw4tkpM+w2zAemE/cotoFBKOvS7S6h
PfwgZufbm1AdgJiDXFv27OOHF9GD7EyPA5BXvGGdrCw/rBaVz1pGBCCshK3w
yEF+8NKRvRxtFIAG6RLunNfhB1D7zCrTfQMJZ6RopzsScnioYTjqj1K6XhYK
PuOHuX27H4aMXEc0EzE5Ei/4IezbDZE9tdeR68aVjP25/DDkn1eTmXkdHZJQ
iNUoJvhexU5xm+voq2fRJet6flDU3Eg59sUXkdkqd6eNETx/T2ai3IeoD1tj
BSQFQGzK9Iq6qzfSq3l6cEBaALJqJMpO6XqjTY2gbxlyAjA0Ys+qLeaNXFX2
S+9VIfT7FgNKe7wQ7It6r6AjAJwDV7JGdYn6nl13XceBGI/y8hwVPdCp3spL
Ho8EgCbXVNJS1w0xmN/nUHpMjD/okUC/6IoqPl8uWXxG6A8JZDs8dkVSLQL0
AbkEuxzRUf53CW1V+2dQKwUAqBsO4m9cUP7Tg90pfQIQ5kq3g5/VCXF4vtZ+
zyMINKHOAr1bNsj5STJnjwDB/0hbWeo2qKqbOjglIghIaY9Ijvd55KZpE8gt
JQhhWE6y2/A5VM+ys8hBjdDXGLSoLrVAgc88xGksCf3RHVQTzBSN9ynRaKUQ
cj+XP1pVkqhGt6z6naAQoNxrL1wbrcFxOO3Ird1CEEb/czr1zXlgDrlZfkZC
CGhQzvPodBswK9UumZMh5E8S3zz3toVxmbbc/YeFQEzs2DV3kgNw7BpJz7Ak
5MOXysu+OYFtH1tgZCIxXq+A/VORO/y7aqdmwSEM9ilqHaONfnBRfeYOF7cw
mIYasp7m8IcGuqDhVh5Crvh4fO6MP8QnJ8XqiAgDja1dV+MPf9hd2zaiKCcM
Xi0pL/rXbsBRsuZdNiNhSHh61DHjUBCEVvBPoFvCAK+Om0h8CwVaps5U2X+E
/iNZQ/QjAtQMrtUZ0eyGxvia3tyEBFgfyJ3gWdgNE4sLHDuMk0HXvTHh5Mpu
WK255OnlngxxG6Pqt9Z3Q69R69752GQQExSKXqIThZQV73zlT8mgbxkt84Uk
ClnF30RKT6dA4mfnywmqokS9zerfapMKCg27p1kDRIFZfs9rB2o63DDXSNS+
KQpik3pGt7PToXbMXDMwXBSsnK8ce9+UDmfp42Ino0VBfey6VQjnQwiCDbnG
NFGwrxbYRZf5EBoreq7eqiLmQ9fa9dAj4DZa5KlGojAXMvOxe+wR2PRx1CzV
i0LZOaaHQSwZ8OfvcQ6nNlEiXoqrbGcygFe1OF97UBQm+E+7wq8MsK9vtwgc
EYWo+0WSt9kz4eWZ31tvxkWh8BMT7U+lTNC8JnFK/A/BOp3K48GZEEl79K/V
ImGv+Uxq9JNM6Eg4l5nwVxRMe/VBtzETBMWu6zduEP5RUlfgnc0Ex4KEP9vb
BPOwvfv/93r/A4mQEAk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{5}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{202., Automatic},
  PlotRange->{{-3.9999997551020408`, 7.999999755102041}, {-619.9998458997256, 
   2052.999576816358}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.506584791744375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"15", 
     SuperscriptBox["x", "2"]}], "+", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"15", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"5", "  ", "9", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"30", "x", "  ", "3", "x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "x"}], "-", "10"}], ")"}], "  ", "Extrema"}]}], " ", "=",
     " ", 
    RowBox[{"0", " ", "OR", " ", "3.33333"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "6"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3.33333", "}"}], ",", " ", "None"}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"-", "9.999993721976352`*^-9"}]], "Output",
 CellChangeTimes->{3.506586914869375*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3k8lV8TwG3h3mu/lkibJUuklOInPZP13lJ2EZWiLBUqqWSNJClCyppU
kj1bsp0TsoRCQiJEiEgiO+/z/nU/38+cZ2bOzJy5M5tPuZmeZmNhYaliZWH5
/6+tr1Lb6uoqqivXrlhFZvjblIHA35lVVKr56MvvXDNs52hvODS2itIJI8+h
J2b4tHFcdWPHKir+fVZlONAMu0pxF8bmrKJ1YVsCdjPMcEDNwIOdJ1ZRXOTn
NFqrKU7liz/iWLGC+Evf/hcyaoInkyhfP3gvI+8kyr8724xx+kuxtsCqBfTh
BU+STwATa/n3yruqzyEJ/wipygEd7NoRQttQMoP6bJPleJX24Xdr7fvy1/xF
vi6MqoP71PCCkyxv/OIUCj12tLNxoxre9mZY48afKWT5hX7yFKsafmR9Lsq4
ZwoRmqdL31fvwmfjLuuPF0yhzVadwhGGu7CgZEjmFocpdO1y4emfJ3biYxuz
rsZW/kGD6rNtRQ924BnZWQE/v0nUffaPst81JdyqcePzXY9JNB3+Nk1FWwnn
HuKNS3CeRIwfhUG8NCXscllausRsEm1LXNxhkrgV91Ubqc3ITaK6B/c2zlYp
4ge1xvntyb9Rn/75nfniChh08nVztCeQT/j3lPghWbzoUt/UqDSBftXmT/UX
yOKiyF7LUdEJ1L6itNM8UBZv/U5zlh0bRyX9XFZlm2SxaIDD3fiocXT549RE
7DEZ/KtCpP3W4C/kO7xnn3+vFH7431VHu+AxlD5pVpvGvglbui5LDrqPISeJ
6MYDuRuxaMqNVkebMeRZUD/3wHojjqHc1XLbPoai+warN2dtwNGdT+i+XaNI
Yvx5PY/VenzfswHFbxtFrtdeXlpfLoHv5G1Y29E+gkJdz5ZFVIngA0NPm46+
HUHTXBtDEz1FMFVCIfBbxgjCGSVh8woiODRg58QP/xGUPOzzJem+MA4xZlRP
K46gPI7VbQkOdHxz4oK7kN8wUvTULj4sLoj9FN/VHZIbQsl3OM/PXKPgJCV5
BR36EGq7WDByZ4kbl227c1t99QcScFLze+HHjedUTQ5Id/xAjRMqbudvceGL
mj0Nc8E/UN6dQO/tiWvwGcOZD0+HBlHIzE0rj35WbOgq+3n++QBS11z5+e/h
DHJxD1H7fX8AuVOiA/rLp9Hti2MPBn0GUIJwrWfT4F9U4/nK8qPFAAp7x34i
TY2sKz+tzmdrBlBx4uNP1TXjSDXC4qvR6e8ot26ExaynD4nn3ex/LtOP8BDF
33asiQjR9LowytePNh2sXVHb0ErMVbuyqsz3IRaljlkl7c9EZ8eRzcVNJBdo
7HX1/krELCucfO/Zh/ANXKnaM0DIRia87bnfizpnR1xeZf8m1mJl7NbVjTaU
t0Qea10gZltF++ayu1FK+RfJtKuLRPuP1dWAwG4kdVmh7Mv6JeIBrZWIVupG
z6I8n/51WCaEjniiYt+vqM/q+RRtaJXgmaioYJXuQs7pm9/yHWWD1XXG5VFn
O1BBw/zE+reckNAwrcqi04Heq51KyV7hBPXrsWnnJDrQWKXLp3pNLrjY9T1K
r74dlQxu2Z9cwAU/Hl12md3SjlriPx9uSeaGBpF4MZvvbehwwAkjB3sqOL0j
7ta+aUOpWSEC2bFU4Lg8yLbrfhvq8vSOC/pIhX1tyhM80IYYvvfiOzVo8CoS
V1ckfkKeRUMWmyg88JB/6IKUdSu6f7mk9nAkL+xCocP3treiw6yGTM+3vNDs
qnJskasVlT5t/aY0yQvUD1cZbUUtSLDhdqeBIR/4hNE2Bgu3oJE5BarGKh/U
CJ169OnxR2Svpb1fWF4AWC5mBGYe/ohusUZpKuwVAI2Wadebyx/Qr7uXfnAa
C0Bm+C29PTYfUM5h5n3JKwIQyZM1FSfahErieA7mVwrACc45w1N336OEV+ss
kowEIfPB8s9PWu9RB9IP/HtCEBZk2G/pTdQjSSfPFGF3QYjW4Xsrb1SPTiVR
5kvCBaHOX0btt0AdIgyoY7GNgiAioNhq97YWbWlwuGn8VRBOPVZxa71Qi46s
FYj/9FMQlsv/e1nYWoN2b/HzITiFQHXReL139Dt0sLCeLXevEPiFWpaM675D
/fKFNo1MIWgUtz1yYqYasT7QKim0FAJHdcf72pbVyM/1YNNvNyFIuOyzhrK2
Cn1uOK3CniwEayZfjj+Ix2jq6Ch70T8hMPXLCeUyxGh8nWRLOgsdiPUuRlNz
CP3dGVh8nkoHj6P+VcUlFQj5i607vp4OPW2ZGXr7ytAbVXv6GNDh6t/XP+Qf
l6KzJgdiTJl0EBKq2sjDUoqc/uWVh5jQQd/oS1Tr2zdoYHQbcfIkHXLr13if
0HuNCOnuyWpfOhwYESjSTi1C6eJd15/epMMPTslJWa4i9OTdczWTMDpI6Ko6
/KorQM0WjV4SsXQoOKWV9FGhAH3RK5Hf/ZgOhwMYnXmh+YiXPeHA5ud0CKw4
bnjNMA/FLtmpnMmlw4Ye52DbrFcI63YI40I6FC96YILvFcq/4Jj/s4QOXRdE
nXmSc1Di/UW7zGo68Oco9bSezEb2EZGRevV00P2lbRIrnYUe3HGuzG6iQ9YZ
N40tL9JRz73lk38+02F6bVJq76GXyGj8zy3JLjrsbWikx06/QDa+Ij783+gQ
5LPobxqfiu5w+Bx530+HRhXFCZr2c3RaW0v50A86CH+3snk38hRdWnARfjRC
B9voW3W+4SlI87eEdMYYHTr/1OsNvHmM1sWa8yv+oYOTpdwmS65EpP2JSzzm
Lx3mSoIW6szjkI55RMr7GTqEbPzeppnyEKV+Y6usnaXD2iAiJ/t3NJra5XH3
7jwd0kYSbm/WikS54vMSkot0cIubrpUXCUeORqn+l5bocM8+x5sv9zZKfhTR
FrVMh2wllx3TB4JQ/+tGJZ8VOsSPMRvzG3xQgZvbY5VVMn4+SM2P9RJ6fOOu
dgbJOze57HvgaocU8zWVJklWH08vMXqoS3yrundxheSPMWidVokLsf9K/NZ2
kuU1XGTM5K4SPeGe56+Q7GHm1VN1NYDQaN51+DtpzyIUyX/rCSa6F0YHREne
/ZbDY047jDBqzdIVIf2jLT07QWmLIMTFI4N7yPtcf2hwMyY4iqi8n4ncFugw
pjqaLq0RQ3xaEeRsnCPj+yGsOXfsEdEq1eE29Y/Mh7PKP62keMIAC9AHpsn8
rWld12CcRJTGflqTNEUHS+OSTZkByUTRhV3HpSfpwJd0J3+q6wlRQWWoXhqn
Q82Yrb7GrqfEMTnpR3dH6eCrse2L391nhHho1/OLw6S/t1bP1gw9J67P3Lgg
NUiHibbmFR54QdCUdggm9tEhVSrlvllsGmE8OR/3vZsOYhW6r/sOZhDiStve
fWijQzNN9IDc80wiU77q/uVmMr/Ww93nV7IIkfJ3ycMNdPBe0A3wscolAl+f
+aZcSYdfD4ZTqbR8IkfjmLZeJh3q9hpPZr3OJ6o1n4UxUunwbKBYw8ShgBj7
uVIvlkzGY0do48PyQiLKXNtTIoqMR6PSlIx7MSGTrr+a50nWy6UHmnWSb4hs
M3fDtW5kPUusBJ2tf0OElptpHXAk4+X0USxPqpSw6o47JXyEDpnsF7WIz+WE
1F03Wd1ddIjc80vFwrOC8BVOks/dSvaLs2ekzooh4uuvJp5JKTqkOGcFNihh
otJnCo0J0OF8yxOnWde3xPWEB7Vto0LA8SRU1ehvFaGQc4XPJ0YIZktqt3bp
VBOvBI+EqtwRgtE2DtnT0dXEyDVNztd+QtDM7Sd2Xe0dEcVo09NzIvuf+6Wl
1Cs1BIdNWJfdHiHYCbY1K4t1xLDaAZ5nTYKw5Wgsum1YT9yuEPmTjQRhrUd7
sXAiyayj0+GvBGHlhXGG4r73RPPT80/aogXhPb9ehKV/A5H1WS7IxZrs373K
R7M5PhDbmuOlOrsEgIFW/2UHtxCx1trp7r788FjrurBlXguRvn+4T9KCH/6V
/tux3NNCrMtQ/3d2Kz88Kx4/d1CtlahMeHHpbzsfsOR9/T480EqMqcm8yVTg
gzfPXn/YtL+N8BOhukyW84BiqFtq5GI7UawuRiylUCCAe6xKQ66DcFb3+2Tr
SoHO4DP9faYdRP+9uqXTGhQIDjwmqZLeQbR1vau++IEbvnsfjGyw6iQCFL4o
XJ/mgjg3OV+Ooi9E25U2HbftnECz6LXwdO8mjt/KjJRxZgOrUm8Jk/huoqzd
fGjtVjZI3SzRu7Wmm/g+sM+r4hcrwIS5U/+6HuLA8xr+DW6s4HHrvZdhbQ+R
U62QudOdBb69KXwstaGXsJpoXCqrXSKs+Ws8hn/0ESXn/ppVykwTSh4JFVFR
AwSLwOrk9Ks8YtqK1zP8xQDhb7Vr3YXnKUSZlq/ynVJSDuoO4sM70UEuu4Qb
AwMEdvR8uW82D7nESXtd2DlIYKsr1NHQRvQSp6sZfRokQhRk9Ds/96EtvG8y
qfQhwlj8exX/pSm0KfVzXEDkCGG1Q+M8bZAd17FnRT5dHifOHe/oqGsVxb0O
Ic7KwX+Ia8FrfaskpHDBsdtiT3WmCbY5f4HMCQU89jltj9n0P6K4fvxsA/sO
zLzBt9TkOU9YvNou6Ti0Cwfo6nw4pbJEiIl7rW+T1cB9/1XoVr5ZIbJd1l6X
E9LCJp0ZotnxLFA+cnR0syPgjRv6BENmWEHLTUXkiZk2ZvHdc8JAnR1sPVti
lJd18Acnz3x6DAcQl5ZzI+L08NUnGdYX4jkgWyJX2DNZD0t19a1+SOYAywvT
9UdS9bDnwYOGoRkccOWwxQaBPD28YdumHyxvOaC56LyUeb0edv1bLzoxxgFy
r9P2yM3qYT7f9V51+9fAue1VUUNG+vhwVDX4jK+Bk22OKztm9LGdlba379Qa
aJm21q2c18cX1+PXfrNrQCniGDq8oo8fvijddoOVE6yK6g7achngvtI8yVsi
nKC457o/U9wAXxpMnovQ4oRQXHDWZa8BfqTmk/vsLilPfthd5GeA0xcWxp5H
ckLZtRK/+kADXIauyr14SM6pVS6CnbcMcD/TI+nlE05gk3s6OxJugBWPnw3L
LuSEpRR0/8tj8nywtVNxDyf4y9L4pyvI8x1qmxqVuaCRjfp2Zd4Ab9T8GK6x
kwuEUnvdO5YN8LEkp9VUdS7INKrlyGBl4C8O8d8CdLhge/e9Jm0KA7f8YUnc
Y80Fg0OHonetZeC3tEbxp0FcsCLLEbBBjYGfEKfoXl+5INheeOucCwP3pize
GO7jAnd7tTE5VwZez/lgynyIC5wSrqmZXmDg2MbaFpU/XNDeq3ws5goD37dW
jvjByQ0cb6LTuwMZOODSHI+JKjeUiLXVHo9n4JMv7nHK3+YG0cfdJ2RrGJj7
oTtN4x43yO+w7PKsY+DsYFOBA1Hc5FwSqFv1noEXTotKnEvkBp6x9m+GHxk4
WiZJOfcVN6Q4WY1JdTJwzZMsc/Uubmg2LbDvHGHgc/fDrZm93PCNS7K2Y5SB
hQIuHD86yA2R657NtPxi4BN2ak7eE9zgdW4yvWiSgec2lF/HbBSYEryye/8c
AysmNKYwtlLg3FG5FitOJm6+k/3CejsFUsKgjZ2biT2vR2S6qFFgi9mQz0sK
E1cdNS8KIyhwLz2vdJCHiW3Fu+ubzSjwrO/gEwk6k1Rd8aHfigJAr30UJ8zE
L+cef5o6RoGl6SAZEVEm/tdh3yPsRAHGp6e/59cycXjM2KSVNwWmrc4K39jA
xLuDm2acAyjgf2r+fPtGJu6+nLPgFUwBlt3+TNnNTCxvcYkjMYIC+xhmPnnS
TFxJXxTrf0aB4is8j0LlmXg6gko4N1HA6k9hrMoOJo4tby62a6WAqfy4xBZV
Jt43GqNq1UGBLpeOHWI7mThER3qLQT8FRt7Irf25i4kl/2nyys5QIILuEnpQ
nYnfSrHdklyggMd/v7xFNZj4jFEdi/AqBZJKh/5+JTk3zXyajUIFeY8XZyw1
mVjP5vzXPkkqeJtQpSn7mHj01k6Lzs1U2PCNdfkFyREF8x8+bqECpu85sJ9g
4i7e4MqK7VQ4s7lczR6Y2O8/w71FalRYewh9HCNZxlGoKOs/KsjUn2xz3c/E
rjjpZYIuFYqsR4UdtJmYPu4gHc2kwujbAMN2kovFtybeOUyFzs2SQ9o6THxM
/49ooBkVLKUje1+SzHbpdYSXFRXAvWw3TZeJXzz2oV48Ru59eZd+niHZsFEn
yPkUFdKjImbKSI6Rbb5idY4KbV3HBK30mFjTNOaP0QUqnItGkokk9/nanjXw
pMLV6J9Xu0m+mSH1Y991KjQHFUiL6jOxYufI8d3+VDDkn5c4QPJHjpxO5ZtU
qO4Jt71KsseOy6ayoVQQiDMZSiZZ4rhmo2Q4FdgmRIuqSEahrPrC0aT+wOL6
PpIdXtciGrmX6nLwb5wjmTp4V4M9idxLJf7mUwyYOEfAPH8hhZS7aQWLkGyu
JaE89YLMT1ZN1DqS5537Un9mkvH3cez6PyfFpG7qf0WFwdC5I6Ik61Sdi+ss
Iu/na0qlkTzyW1W4uZQKqmyHf8+T9u5Kzt+txVTgxlUcAySrMhEXekeFxpNh
jBqSOy7fDCh6T973vn/xU5K9Uw4uZpF787m5q6bXSd78UfDy8zYq/IPDwodI
rlnsmEj4QoU64S+La0k+K5/kFP2NCmXrpzh7yXgKWDh8vzNAheQ1F3c+Jrkw
QNE2cIQKVp47/KxJPpo9+dlrnAq54pQRXpJXu4qMLk5RISi25ez/8/eMy6fe
eZaUP7bnPk0yc5eOzsklcq9vf1jKRfKEHaXcipUGVkP6gc/I+tAoeZBrQKPB
mb1XDRrJeqLevHI8Q4AG2KuE/RDJXUbWPPyiNChjbC+vIevR+4ekU/smGuwe
L5B8TtbrodwVkf+20CB6UrucQvKG631ViVtpoN/DZuxI1jsWeLbx9G4a6DaK
7ucl38P9rzeb6jRp4L74M9ZCi4lPpTpeV9pPg4Tz419i9jIx+96tHX8PkvY8
Ajk4yPel75h378ZJGjQG9BWF7GFiMdXovUNnaDC3V3Hp4W4yX0uXR5nnaBA5
kSyUrMbEtyM19AWv0CD3Hj0tjnzvjeV4+XEYDZJ2s8lrqDBxYkhKBnskDVjE
017ybSPfl1mQteNDGmx/fmWoW4mJ+X8aFG5LoUG1cGSwvSITmwp/PFf+mgbm
1Wl0cVkmlu7NldhcToNNzhGbC8h+NP0ysi6okgbyZ5PaDKSY+AFhKWPYRIOQ
vq0brcl+1unS87XrOw0iOFjnpcTJ/qiGbu8bocECp8DADTEm9mJ5sidlnAbc
Etq2X0WYeF2MQ5TzHA2eNfD+uSzExMffjh2Y4+WB6eY9R0xoTKwS1jRnQ+eB
XY1m5y+T/ZnlSE4qWssDHnfCl+5zMfGTXxfZbknzQG6Ow/UCdiYeFFt4I6LB
A5LsXllJiwzs4sqtsNOBB9I8pr3WkP8fT9+pnvvPmQd+qSVt6Bxm4G7JYzn7
XcnvTcr4nv1g4MMNr9SMr/JAs/DpBrl+BlaVt9E+H8YDwts+X/nWwcCL/Vk2
Lwp4oKA5Mo2zmoF3aXQmZb/hgXPVplzn3zKwawTb98IKHphke3evsYKB+/Yd
caqu44Gg7o98V94wcHU8y+X+bh4wPDMWfS2bgcMszO6tW8ML0XMJ1aoPGfhd
pk+LFJUXkqVNUxSjGXiFPU1YkZ8X6m7PBq27z8DueUtx6uK8EBIoZTwSysAW
/KkvLJR5gXH/NFL2ZeAN9XM43IIXNv3HznvGnoFz9ib9ZU/lhe0DhchbnoGF
VQddrmTwQprv8Pa9Mgx8VU7x+2guL4x0F4n/3cjA2kJFzS2lvGB3pkHfQIyB
24ebsh638ILtYToKWcPAS5HLjprLpD4vm/TzfQaY8dO2+6I5H3j7FfpkkPNO
1rcUsyFrPogudTtuHmqAhdpG3luf4AOZvgyb6SAD/LXC4w248IGho36yuJcB
do0Oi+Hz54NmPkO2eXsDHE2UGadn8EHQ+/YM7t3kfPRg3bt+Nn4oUG1NPfJJ
H2eLpbfMcZF7CH9dnGGTPvaOVf/Gz8sPdYH2fhq1+lg00WJWS4wfpi/oCS6W
6OMDz8IV4si9BbY0ia5P0cd5eez3TM35gXvm5ZMuV30c9HHMsuo5P6TZ3Pbe
yqaPTUy87LvS+SFC2ZlLYpGcRz9xu//J4YeQh1idZVoPF7fL3t5YQuq/FHEz
/4ce/tVzovT6B35Q4m8MLqzTwxa/Pm3cNcsPup/dN8ne1cNRHMc9TGUEIKLZ
zjOFXw/P2YuptWwRABZ5r53pXHr4eFXzjJGCAOxtr055uaqLFW/oXDm0TQA4
rHaEh//WxZWr8l4MdXJPa997avaDLp5a+Ou3z1AAGkcbudTCdLHxn9t3FD0E
ILr7AKc1iy7m+1aYwlYtAGHyt73rP2jjUB4fn9c1AjDSVfy9uUobc2rqWp2r
FwBuVkpvU7E2Xn7Yytv+gfRneOBeWoo2/mXy++rLL6Q/zR4+fZe18ft38kbG
v0n99SGyVhLa+FZW/GKihCC4D6auN7PZj1l8Asw1LgiCvI7xhtfXCJz759c8
uiQIV21V96jbEdjujNVjfU9BeOTGnHmuT2BspDJqdl0Q1LunDxvQCewv1ePn
elMQ+v6zmE/O2IdXa9UznsYKQvLlXtXMTi28IjTJylcpCBHCar5sMnvxYtrx
nO9CQiDwuCIp11cdn4/LuStUKQSb/u10TZrdhou3hnALutIBmBmeC9bCmOfA
RaUbfMLAcpF10Uh/LXQoN3+6ViYMdsPvNw2274SMJEJm8LgICPjnh/7duh+s
cnYLrl8RgbqglqA3oky4fvNJQHe6KLhf+/gww8gE0kbWx/MZioH/7rj5O+qW
EJR40+7bYTFIzg12v2FkCXam47LZJmLALXla7sYZSxArK8s9dEQM1PnUbRKj
LSE43KYm7JQYyFvMcer8sQSH3bF/qNfEYI4+1WiYeQQ2BQkzuFLFAMIM2E8r
WMOSujdvR5oYTHZE+wXvt4bO8YHW1AwxYJi0n39lbQ3hR/KP6b8i7Qt7pkqH
WsOKoumlm2VikNY6mn9tzBq6W8KT2D+R+j4VJ47nHIXi4Fn7T5/FIMS2ZTq1
7ihEa55QeNopBsU7etud+4/CwefbCrS/iYEx1zptHroNlFxtqg/4KQZ25p/7
qjxtIEZZLdzklxjk7jhaWh9uAxe+J5hv/k3ed9Rc+UuaDcgbnuvF02Kwfeev
HuGvNsDB2vYsYlYMOofTNu6ftoG+Qk0XuwXyPFq36slrC2UuT1W2L5P+vm/z
KdpiCw830mZWV8XgkaRD4iphC/8D4lp8wA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{3.33333}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{209., Automatic},
  PlotRange->{{-1.9999998367346938`, 5.999999836734694}, {-78.99998432653149, 
   112.99997648979695`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5065869149475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"2", 
     SuperscriptBox["x", "3"]}], "+", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"2", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"5", "  ", "6", "x"}], "-", 
     RowBox[{"6", 
      SuperscriptBox["x", 
       RowBox[{"2", "   "}]], "6", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"6", "x", "   ", "6", "x", 
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "  ", "Extrema"}]}], " ", "=", " ", 
    RowBox[{"0", " ", "OR", " ", "1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "0.55"}], ",", " ", "1.3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", " ", "None"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.50658723810375*^9, 3.5065873109475*^9}}],

Cell[BoxData[
 RowBox[{"-", "46.66666665533334`"}]], "Output",
 CellChangeTimes->{{3.506587229635*^9, 3.506587311588125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k8FV8UAHCiQpZivEEpqURUkhZLzhUh2aJVpEWSEkmLslQqu1SyL9kL
SXZ+GJElkUhIyFKyPO89PEuy/K6/3uf7mXfn3rnnzjln1p9zML2whIODo5qT
g2Pxd0XwkUfh4T1UTmH0Cu5JMeQtwogeD+6hjAShZsW4GOJ+7pVnGNRD+W8c
CyZYYmj2adEfTq8eauXEpKXckBhiPJHSt3PuofjLLFKtusTQFz+6oJpxD6VU
l7RioUoMBXs+DOvg7qHsFYMHloeLoTXXc9LWOXZTW8pFG1SQGNqYee44OtVF
HQ1P8MgIIFHsMVuPBY4OanWzsFbxFA0JB3fNBWZ9px7vcIxqu05Dxp2B20WU
WimOsyyR5ROiaDXXIZ+jHc1U+Ft1AYMAUfROWTPE/0gTRZmIpUkqiKLmhs/Z
UfpNlH/R+aTSLaJo0s6iMR01UU9v3vI+IyeKVONu8dcrNFGrhoAnRUYUlQtk
PBBY2kTd7TYY1FiPx/dLOATmNlJlpBhvBE0UTYexdYNojRQvzdVtllMUuc8Y
j29+10Al3C+Rs/1BoJQnaetiYhqor7SHaUfbCfRl43IDwr+BqjdsHdH6TiBp
49JEjosNlK1RYLZ0K4EqExSOfV/TQKkel4PBJgLxG/IW+np/pnY4XNodUUug
yNhy9xGreoqaKov1LSJQgfYuvmzBT1TzBd2d0VEEgtQtHWEztVR1wA2f5EgC
VQlJZbj311Lb8gTzMyMI9K2dz1S/tJbSSawIrQ4j0Jhjd3iPfS0lqMJltxBM
IIVoP7mV9R8przM7ZUMDCBQ70aNn71dDXfOULb3gQSCZU60SZrdqKAnknuTj
TqCMsjr63vM11POOQ6cz3AhU7JcfxK1WQ/0xCdKauUugtvUBbZFD1dQDO5/W
yNsEEjbaa1t7sJoScgv5t9SJQI+TA70281RRHf/o/c4X8HrsPuifn6ikih+Y
elLWBDq9fUYgtreS0mgQb+TD3lVwIZhWUkn5NSrdSzhHoF8f1eOWOlVSw5tM
ZTutCKQ5MlTU9+MDxX/+vPs1cwLN7tRlxL6toKraipQkTQhkO+367kdUBTXb
a5LpZkyg5uIsZ9K3guq8ca29y4hAaQfW/gu0rqC4jPJ3JhgSyPz4xHJ38Qrq
oZP45M5DBMq/k7DewrOcCu85EnZDh0BO7xeOiB1/T4ksea51ex+BQvgGI7K0
31MWYfMlLHUCFZo1dRsovad4cl98v4TN0Z945b7Ae8o3KGfcUo1AgXz6D4cq
yqjtKvlvDVUI9NosOLtYsYxqCuuTObSLQGWfDm8sJ0qpiQYn4ZKtBFp+emPm
JLOE0rkZc/kgthFrUk3+UwnFlrA526JAoA4iyiz4fgllc3WP9Jg8gaYs+x/Y
MIqpsORfbMUtBNrGutPDV/MfxZfoWvpJhkDRRGKM2d1CKm7Vvj5nKQK91E29
cdGskCq7eNeKHzvxTqbBXflCKudSbmDiOgKldxfPxP8ooAKXn1vaupZARenf
jo2pFVBaNQ+NtCUJ1KK9XOjpbB51UVduM5IgUPstgf7E5jzq2ezBkl5xAnWm
ipQUpOPr+a5cj7F/rZS63G2RRz1qtoz9LIbj37G3entJLvXp44SQLUkgwRt2
Hp/dcqitvrlp/xH4/LxyPNZ7NIcqV1u79RK26I+bWye35lCtBm9PkdhrND1/
SHZlU9MbgqgbIgTaIhC1x14jm9Kv2BmtKkwgnaR65oqFd1T3WzWvX0L4fKSe
LXvG8ZZyChT9kr+CQC/8HXYK52VQntKOb92xt111S356OYM6d9FNSgf7zI5w
/6CWN9T652L5LXwEqsj/ciIwPZ36Z7U1a56XQL4fYNTnRCr1TCWz9BIPgTYk
G1rzCqZSfRk3U1Swi71OtXpXvKZuijxbx4fN0L9V4rXtNcWpqliSvpxApo0Z
Po+4X1Fzg79fTy8jkHiXpPT9zCRqHmiyaUsJlEXJv+CwSaKYblfYntj6cSo8
91YnUeGDhYaW2K7WRxnujxOpnO/xyauwu4f8i1wtEihzPp+Re9wEcqmL2Dq7
KoE6k+AseRpbOOPVy7vV8ZS5j+x3NWztax8e31GKp2o+HR6f5iLQq6l/prd5
4qhv5OMMF2zN77xVUyUvqY9Lg/aewm4vIlVuXX9J0a12Gu7DJmdtNOjFsZTF
QIYoF3YXT0vLH9toSnnP0XUvlhBoZd1ocf/XKIpxfdnMHez9TwQSfmtEUcLq
0qfPYieLHnDoIyKpXfOc5dux7aVzlv8sC6NU9miwmzgJ9Mw2RuLUujBKLk5P
5z/svAzvra1uodS9W2f3JmLPq1qaNaiGUCnec/9uYUvf17U5FP6CIsyk6s9h
61bvcKmeCqZkXwftM8IOMlsWS+U8pzzI8H8y2DnhrHdqIs+ps9QXPQK77Wf7
h/xrzygZ4RfKS7DXX3k79HbbUyq8dcmfnxwEsuZ9dwUdDqDqixWy4rHTXzx6
tlfQn3IJ8WQEY0+sNy9Q/ORLPTz5u9oL+7EqF/f6A97UWBHPYQfsz1WtcuJL
vCj2wCUOa2zSLN14FfWIerZO1OAk9qvLRyM5VTyp7krv/APYrCm5938n7lPb
Klkt6tgqD+f7R7PuUUfpPU+VsbnXJ4s3/3SnNnEpDChgv1AxvvDhpCt1tTHm
+yZsGdPpzJyvLtTcWj6bddgFdnGziYa3qMTsfQHi2Ac99fVeVDtTO47zGhPY
7ZHjzx9pOlHXG9XThLBbbFWo4ZsOlNpQStwK7L/hfsfq7OyoY5cklHiw13zq
HEk/fYEKoVlbLMXWmN3+KMD0DFVTeESKC7vMnFulw/8YVSJR7MaJzXfncIPq
oB6lxWnnzIFtMGObxe6VpuR3beNedM1fFfo9pgZoubcpLHrbGjv+dc2H4VTi
XsaiBwsrOy3pp0DLYa3eEuymtKDjRkvOw8fkk6rc2Jl3NMrsBW2hRLjowzLs
wIN02QAJe2DcEfrDi72bv17vmMg1UEiRixPAThzfMHch/DroWLWNrcIW+XHn
3Y11N4H/8vAPGvaD8sYLj5Jug8EzJYs1i/F4LSvxQv4utEa5XZfGtnrq8Tnx
nRvcNY1aL4d9Uf2yZvvqe8Bz97SNIvbazJDVvafvg2HXc829i/u5oXxiMO4B
SGjzZyPsAyvEU/9ufgQ+u5eeMMOeddd+yHn5MXw03eRniZ0z5nCaN8MLPgdV
m9liS7dXCYsr+8KFp42JHovxMhyjS93yg5C+NgV/7KfvJatli/yh9mbcwXBs
jtfOd/eiJ3DTIxflYscM7BRN1wiCkzVVXyuwi13f0NU6gyDLxHWiCXsq8WXk
KYlncDte8tcY9tWJx38jgoNBt1Ptkgp+H/x9OBq37HwB1TnXrhhgv5a886qo
8QXINHbNWmH/OmB/vF0wFPaeevXBG/tUiFmuuE84xOj+G+rGvr2l3v/15ggQ
+D5iOo0dUqpjrVIVAVU5qTor8fvf1K8icpIrCj7V133RxNbbI3UtzC0GRMRz
7dKwV1+5GbKiMA600rcEhOF8s2X3zgdmPPHgt9MqqgB7LwfLPvJ4PIwJPVT+
jn0s+NIB+cl4aNQfmF+N892zYgu2/s5EqDklOZWCzSOgZer7JhnUHxgZfsf5
k2xd2Nc0mwyp6ZtaOHE+lokrlpMwSAH+PSK/t2Br79rNmTqUAmcYd4LdsT0s
5TI/bn4Nqnc8lBVwPp98IyTIG58GljHXDr/E+f76bK3y3+E0WFtV0FqPzdJ/
fGpwVzqUndv85R/20J/ZVx8/psN2dj/tJK4nneuHtHxH38Bh/b4pMVxvevV7
ix9JZULaCYc/b3A9qi0tHlvmmAW5SR9d5HE947GRWLYQnAU/DxjM2WDrCtwW
nyrMgpWbjzHisT+c2on+cGUDb/JlsTUrCVQ6/TqgOjQbpmyfeouswvVFKVTW
m8qBilCbAhqun+HJ107zCuXDOk0FM3tcjyXeRMpI78mHEFLesRg7KruSoWqF
/SqAhx/X75dl4h5X3uZD25r3qenYr9rfxzYYF8AKzfy347je5wkK97wIKgQZ
gaBnYWtw/3Uz67y0cDFIWjheU5fG8XHrkFdTLYZQw8uxEdhtnsvYZueKoVew
b/9f7I4g84ePsoohZIP/YP4GAvWlLkkaMC0BmndEpuom3D90mfZnPC8F56bj
s0dlCeSd4JIT7VsGYUQj9G7D51HXaPOR6DKwk6c8dbfjekaXjuDLLANf037Z
N9gzynUet75ha+iEuCgS6ErV2kOHpd5DgJf4X5oSgUwGK3q4896D9ZsbJedx
f0ZuFxS60lMO9VX7lbVxf5dcFH9JdW8lMDZsdBbD/WJiYOfu+waV0BYFmrHY
8efEuGvOVMK4lsoNGQP8/vEFxhz1qYT3hVyrduN+M9Tc5atjeyXwPYkWNsf9
qfeM8b4U1yrwVt0skmtGoMuqcyuJ99VQZZOUnWtBIMWi4wUjB2thbVxfeYsD
Pg9+8uYc2g0wMTAlcC0c9x9N40cPsRthyn9+ScAHfP+m0E9xt5vhRIzqF90p
3C9MbhdXbWqBjaqjRBn+/rnkeXzlEqnv8GRIg+ZrKYr8uQ8c+Rb7AwzfrAhM
CBVFUq9lHIfYnTC76hjf8gZRNCF18cpSjW749YSofbmChrriHtx4c7cHwiti
zGZ1aMhDOcxuMqEX9s/FJoW60ZDa+5XLDvzug8RNbYKH8mko08ozQHnVb/j3
n72k2DANvc4qGVTb0w/BglItJ1aTqGTBnK538w/Um2TH7DIgkc/psfbJ2AGw
cI/o/nWDRI75dIfU3kFQ/M6dtS6GRBI+rPdWfwZBWtVVKw270pwtIkofhJA1
sQ92x+Lr8//yPSYGoaVFn9fgJYk+aK/gOMozBI67x3ZejyeRWJNc0MLWIeAz
0ex4l0yiMrpN5hGXIQi16LdhZpBopXQPa15oGDadvNV8rpRE/sJ746OIYRCj
2xi1YPNyPTFTFR+GFlTvcJAi0ZJf6nk3pIchKsXu1bYyErGTwu7SlYch991P
Ovs9ib7LmSxrPzkMvONX4h0rSRS/g1qdmzAM/Zz9JRvqSLRWmlZv+moYVvft
+emHHSls785KHwbrA9YJ49jB4xI98nnDQFtaKFJeT6LHuTeT42uG4VzBwSDz
BhJdVtm2I2hkGPzlyttcmkikrBmtc3kPHT4L9CQ6tpEovCRA0F6dDsmbcJuO
Pa/i3nJVkw6ZU7079n4nUY2SlY3TIez7y8fmsC02rn/sYkWHQcWWpQ9/kOjh
8qRKLy86aIiZm97pIlFzfbp2Yisd7IZcdwn+IpGKfjR/cgcdXonpuJzHjqkK
aE7pocPYfxu1C7BtqavWacN04Ba3uXrmN4lmMxUfZi3QIV3xq1BaP4k2BudU
lG0egZlRGUu5QRJdNy/e33lrBEKjdrXVjOD9oSwCfVxHQCqmfoGXQaLaDXPf
d90fAfoUu0AfW3pk37VA3xHIiD/xsxa7yYOKhWg8/qT2dCWTRIpJ5bNx5SOQ
4LRDJWWURB285/WMqkdg4s/niz3Y3le5gmc+jQDNIXTT6jESde/Rljf7NgJy
cSuNArCf1Fae5B4YAV1xZ6Mr4yRiMGvybAQYwO/hOUxMkCjiyKUlIsIMYHD0
zuhi6xTyGlE0BmwxWh56Bzvmgf5vUooB4ioCN7qwDUXrRD4qMeD+t5aKl5Mk
SldtcJQ/wYBtRr99haZJdCLWobjVggHWN8qOqGFzc6/keXgW/3/9/CsbbIt6
k9gOOwa0TC5n/Ye94kxTfYAbA15KyLDP/CWR3aNvW1jxDDh3ZWV28AyO9w2h
AI5XDGj3iaMVYz+zOchc+YYBa201R3qx/9Mtyd6Rz4AdUUNj2/6RiJ8vSf36
JwbcOfbEvAz75UxXjOcXBpgx9h/uw1YeFuMM/sYA9M6jcOksiSzr/CtzfjLA
faSxUw87I9DZaHKcAfeyHznWYO/3yMhc9pcBs+R2Rj92i8OAMDmP17+q4wf3
HIkWTCxa9/Aw4cOM2zLANhHRPuOyhgn+ooHP07F/cbmX+6xnAjOMw78K24Wd
vzFChglTq0fHfmLHf5MfLFJkwppjPitWzZNoPFTEaVabCQWCWueuYHt7Gzbz
6zPhAJfpx/vYa1y8dksaM4E6ezI6BFvb/N/MvpNMiH8a6FeK3aa/y9LoNBOi
5syTGrHt1Ryo0+eZ8JrHUv4XdsiaPk8PeyZI7oC7yxdI/P0p2f/EiQm0wRJt
MezSuWN6L28xQefGWxdZ7D9dtfzv7zPhCshu0sV2beB2aHzMhAnSKPIo9soy
jcYePya0/d3geh57b1zWiyUhTGgSlHRzw657Sp8SjmSCa0dXlA/2mQcy5hte
MiFxIEDmBTbb6UzxziQmBN/7K/4S2+d8xFrtVOxR1s1U7LVHmu8decsEhrfW
vhzsLG3BPuscJtCfl10pwW7f9CDlUSkTxlVuLfuMfZVWzBtSwYQgB2PHb9hL
lk9eTq7B1w2f7O/ADpna/jmvngkXpZe59WLLD1xSrG5igrKq57oB7LK2hGet
rXg/e7/JjWAf+djJ/tPBhDnb+shR7IFC8vh0D46vhMqNicX9SD1cyPOHCWHa
A7nT2L2FXXc46Uzokk4y/Yd98ONl9RkWE8pL6k7NYWe2Tc+NTeD9WlBsnMem
DTyihmdwvL8mZC1gu00J3/+1wITJDVMLi3biMom7uoQFsj9mCxa9yY+2ZJib
Bf19jzsXx7cJd567uJwFFbIX7Rfv7xeRUNHHy4KjwQ62i/NrSNttPMPPgp2r
nD4vrm/0teKjDkEWjPmg2MX1J+6Y+n1iFb7/YHr74vMdLyzR+SbCgsviPvcW
n59P82HKYRoLTJamBC3uT2mNPs9nMRZcDW3j68O+ZrLqkv5qFpgXMRmL+7ux
rfVjlSQLUk+Uqrcsrs8qZouWFJ7PgsZejI/fH2s/SpoFn959JKoX1+cgT1fb
xIIazdSY0sX1TY4aFGxmwf0pn6e5i+tzL3ijvIUFviWqI2mL6wk84LB1Owt+
bzzeFYJdIsr/5fUOFpyLtLnuh+0Y3aQoo8wC77pARw/s1nSrsbUqLJDivRZ/
AdtXWcYsUo0FpYOfW44vzl9MzyY1WGCxPcDp4OJ8n1xurNRiwfBzp59bFvfD
DLX4H2DBMu99mRKL8/9YtodXjwUufpl/eBfnG3o+zWnIgjy7Fp9+/H7t4824
O36MBeNKZEgYNivIucPhJAvW6ouFemIniqnto59igXGlyZw9Np9szfyvMywQ
fvZ2GmG36PTeb7FjwaOtEsmL+cHn86teU3sWKAnUfarEVj/moNXgwIKnSdpH
07ATLsxy1zizoDi18ZkztuNDmnehO47nW5PsBZyveMv1A6OescC678nZaZz/
uvcNKjKCWRDxb0isFTuv0OsrhLJgoOHbgVxs63cfxPoi8X6sqFxwwC59qZEg
l4TjeX6M2YXzrZOHUkFePgt6Dta/jMf5Wu/fF3OeIhYU7I2MvY297pbD3Mli
Foxaxq8ywq67mr5/rowF4qlVRlM4328+LVOvVcsC7Z/GclrYHeoSvV868PPb
v9Yow/Ukq6DgofRPFsi13rcKwPZRPr7ZuYcF9FH10ZPYuxWCr5D9LOAOq7QZ
xfXo6WrBKUsmCx6r84aIL9avGU7+Yc5R6AiJ+WWE611m/uCupZtHYdOqzeoG
uJ7e/dvc5y03CsoOgic4sXXUyp7yK4yC8J/tVbm4/v4oDRkR2TEKiefPha3B
XlallSStNgpZh4yEeum4XjRHE8h4FCxzvCQNhnD8Rg+P37k1CtwNb+0jcb/w
TWlf3LzLKLiJ33BWxX7pLGv8wHUUPtx2r27rI9Gu6flUn/ujIJEbc1gE+8xC
2rkwv1Hw6O5kefSQKF9gWVNu7CgQP6N27MH9ivWWokxW9Sg8OWdwdU0riUzP
uL08WDsKBiqukektJEIhKCi+bhRQerOMOrbkkmqHI42j4LXN+vjJb/g8ff+6
raB9FMIlqNX+X3G8fEbSPUZGgU/TUegr7r8UBqReC4qMAe9Byee/q3H/ufZX
2EXRMWg5v0P1LDbPkRTvMnIMIk8Eq3ZUkeg3tdXWac0YlIem6XzB/WBMqOrm
lk1j8Ky32yuzAtcD3SNJ0XvHwNHcyf8w7i8nkrziFE6PgfTRwEAij0QGl9ll
LmfGQK/GUsI9F78Pime7q86NQfZ/Jpx/cvDz/ae67uzFMWj8Jdidl43j92Uk
6oXjGHj70juM3uH+4J9Z2PyDMQi5uT3HKp1EXSZST76kjMGkTX8bF+6Pa/4V
uDqPjsHnY2/+GfqRiPByShkfHwPfP+3Vrr4kshJWaHKaHIN62Z3VqT4kmpSN
3Xzt3xhITb86ze2N89exR032S8fBwjZw+M1DEt3LPCx7UXwcCh5cONLuhuvb
haGvJzXHoVn1yupQBxK9+rxaHp6Og02omF6ICYlIozehz5+Pg79Y6nScMe53
6zW4B16Mw5IPhfR0IxzPurOdQRHjMPf9v5gy/L0gVZvypDdhHE5XbJT5qUei
0Mqd7Ed549AVfDxuGuHxxYdK6n6Mg/bddxCliMen3jU2l2GDR3hBQ7QArjfW
euJsWTZ8oD+TOs5PorPrRPsC5NnwtznjjtAKEp0Ozrj5XpEN4wZtB914cH/m
3hMtq8YG+h4FI0MuHA9TXfqkMRtGulPLSqdpaNeMsM9zFzZE50X8+N1LQzk5
P023urLh2mlbhkcPDSk5pK+pdmdDTXcXl3g3DSn+OpA548mGt5bju/Q6aWjL
59utZwPZoPWCnRnRSkNr47s2KSawwb53S7NQHQ1FWaQxPyaxQefWx+nwWhpa
Td4uPP+KDZd8PqzZ8JGGxPxXGYa+YYOm4NxZpSoaEr6p7TyfzwZi6t0P7TIa
ClJcpRFWxIZ1X69OVJXSkNBw53KlEja0zfXw65XQEP+ZW5EXytnAIyumrFtE
Q74S2hcWPrChJfKaVmUBDfF+W7k9vJoNS3UzjPfj7zvvJ53TSrVsKD8ffqI0
l4aW6aeW19WxYa/CvKVKDg39DxQCcq8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 5.},
  GridLines->{{1}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{215., Automatic},
  PlotRange->{{-0.549999962244898, 1.299999962244898}, {5.000000062294286, 
   6.240249806882662}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.506587229635*^9, 3.506587311650625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"10", "x"}], "+", "100"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "5", "}"}], ",", " ", 
      RowBox[{"{", "75", "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"10", "x"}], "+", 
     RowBox[{"100", " ", 
      RowBox[{"Derivative", ":", " ", 
       RowBox[{
        RowBox[{"2", "x"}], "-", 
        RowBox[{"10", "  ", 
         RowBox[{"(", 
          RowBox[{"2", "*", "5"}], ")"}]}], "-", "10"}]}]}]}], "=", 
    RowBox[{"0", "  ", "Extremum", " ", "is", " ", "5"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.483172343426565*^9, 3.4831723951959887`*^9}, {
  3.4831724309979763`*^9, 3.483172459907769*^9}, {3.483179915658119*^9, 
  3.4831799162827873`*^9}, {3.48855449853125*^9, 3.488554654140625*^9}, {
  3.488605542828125*^9, 3.48860554553125*^9}, {3.506499961213125*^9, 
  3.506500000088125*^9}, {3.506500360213125*^9, 3.50650039185375*^9}, {
  3.50650044151*^9, 3.506500536150625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt2Hk0VP//B/CxZQkxM3bZRirJNiUS87SUEsq9MyhrsoZkisoWJYSSUNKm
opQl4SOijJJKUlQqqaTSpiiRpPzu95zfX/c8zvvc9733/X693q/Xudr+kUSg
MI1GowvRaP+7Wr7Y9mV6miU4sP/a0HQzH88aTg+v+sMSaB2JvJDfyEdMQedo
7jhL8HdvmZLBFT6qePOm5n5lCfIZLRKelXzoPnwhvbaXJbD75m/VcpwP6Vu2
hkW1LMHh08kjlTv5eFUpF4VQaj7agsRZi/hI3l0+ntStI6g+vnDJ+4tR2KcU
dq8kU1uwZVvcUdHMLdBonXd263otwdhbi/w/jEj8XvVQP95HQ9Ag6yhQNI3A
0g9eZzyeqAlkf0VXySEMR2o+aKZtVxFEDCwrik0NxQ7PJOO/g4qC2Z6Xps1a
gjEUph4T7s8U1KXa7ngwOwjxZXUtCyXpgheyKY+2VgRAc/81REzKCu55x3v9
NNuIRG0pKZaFlKDVejCkZWQDRNK8re5liwmOWf168KXNDzlnOw4LJ9MESen5
c6rNfVG2bMtEY86v5iXflWXPWXgjHX81dCo+N4udv3GRZuuJ9SZPHruvb2+W
Wf7GODZ1Haa9bSU7HJ9xphuYO5wUPaAWLFpzyHKE46jcp5VT74YQMlg+ecMI
Z5XeEb3nNW6o5bRHRqaNcIK6a/+wLrnBRfmggdOjEc6EqDLzRokbku6qnRML
+85JfJTwVzPXDYML2Ed3FP7g0BVvV/tvdkP1yIZdPr9/cvxM1p4XmeuGlbHN
q/Wv/OZkCJbV1xTx0Jf+3di+/zfnj1BB+7rjPEQdYSn6SE5y6h0K54sU8FBY
m9af4znJUe3Pve+bzcPQtzXRv6cnOdvtPSuQyMPBjf0n76yc4hS+WNpR5MXD
UyehH0G9/zjxdlZpvWo8hHuynyaJTHPSZHcaflbigbYpsKnQYJrz+qWnzl8G
D/PS7qZ2Jk5zYvYpjhhI83Ct/47MMXkaljH9WLVTXMxSyzkjXEeDyYTdJ79X
XNRka3d0/RNC/W+XH+xiLurj6GP/6MLIWdRw+FoRF9eDRTQM5gojY/7aUMcT
XLRz3kemrhFGn43o0YjDXPQPlzIsi4QhYrBXpzedC+m1xp7FNiLwHvz0cvVm
LoLkOJ9jUkRhM2o9nmPJRfiUEaO4QBQ6fPglm3MR9VFrWVe5KFhlmye2LuYi
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
tOOaWf0zKr/ct7pePKiIgr+OJa69VHxuf9tn0qCIK4ylwmUvCdy4cnMUUkrI
igpp/PWOQGfzqR5/phKGWhJuDL+n9uN2XEOKhhJo19/9+zxIYOQpe9cdUyWg
4bzSl48ENCbOSq31VMK8JqG78l8JxJmnaPuWK2H/qNiC32ME2h1WNj36Twnm
HNHNcr+o+HKXdl/ZrATdRNt4/QkC9dF5WSbdSmh7kjgZNEngZ3XxL5EJar6h
8QShaQLhC2/dL7VTRtB/74qaJEg0LtsXMttZGeaLB47QpEhIOTmLHHJThkup
5nqHmSRKNz0xjwtVhm3IeryUoerh+fdnnbOVsXLNg1x9BgkfnRmxP3qV0dFQ
57aaqq8VJu3M4HfKVD9TI9SkSfUDOHDpxVdlSCiMbDfSJlHoq/i+laYCF6v5
bRq6JJ4e11t7RE8F4z8LP2lQ9XqtkoPeMr4KWmnxTiVUvbeRTu/eK6kKx4xF
u9tdqfr8btrlFkMVkQvdVRtJEqJN2++JaqhiR3bJZCWPRFtYcOseU1UYH7yV
W7SOhOO9FXXJnqpYnkKfV7aBBJEhVphQoYops/5n3nwS/hJ7NkS7quFkm6On
xWESdv2TL2s91aCz4v3EoQISuvX89T8D1ZCeUvZquJDqr4L9ya2xapiyatxd
c4rqB27bLI86q4aMsx8M/C+Q4KfS5keMqcHUYpuk9zUSe0QTRwKOqqP+gNfb
Ox9I3OjUTt92Vh27ZfkFiZ9J0I7e0kypUMeZr87bl3yl+quFMmvOtqhj8K5H
dfUPEjvcjle8+aSOxMmrsx/8JbG59Oomn6Wzqby/fPcUk4v1Tr/eub+YjSJO
YEyRPRemeVueO87WxCXHLzqalVzUBk7Nq9DThM9I5nv/y1yYLUnfMctYE1Ve
50Mu1HJh2XtK6bGtJmz3uVRZN3Jhr/WA5x2iCUVTn+UZd7hwL1/YHVmjibgb
u1NL3nJh7R8d2K6rBc6r/oAhqp/3jzX1Gb6qhTqh7zmNeVR/79A9LibQQlCJ
nYTYUR5imPxs9VtaKHnLbHQ9wUNG5WXBqgda6DZi9/ws4aFmwJhV/FYLr2b4
Dmy4woPoaqOPHtLaaLu0lXjay8M5NQP+DW9tdA4dzDHSdcOnpjmp+TQd3Gcc
y8wXuGHgg0rZIWMWZJYKos3FPXDIJ2tx7npdiDlyBeZb1yHpw/bx4RNzsPuy
+TiMPNHvEVB79p4eZL/o+Ob/8UJi393SGvo8nPNNtHuo5YsDK40LVe3n41Jl
9ZvQUj9waQrfUyL1Id25N1+yawM82vmJq2sXQO7Eeon0BRvxIL5LIvStAQIz
opbrpQYgxebC3YEFhmB3PitTUgrCsOv0sO9mI7ypqzq1/mowgueUSRY6G6Om
IcjTwyMUY/q5ZtUjxlhmuuEz2zQMTcV/3oylm2BncVyYlGgEfOxZsNQwRVNs
Rmf1wGZoRqQ1GApMITALXbM2eQtUpMIvO7uzMXHvNbc4IwqldgmxI+vYcFnR
EeyTHQWzhAN2uV5smJXLrFPJiwIxUvXk2QY2WpZm9+SciEJGz9jvjeFs3PLf
b7W/KgqTZ3bZxiazse9VdGNFTxT6LHMfnStj41/Kr5h8Fh+boouPr6pkozMq
mRs2j4+Jyv8Ch6rYMHX0k7NdyAdT59kvkzo26q6ps36Y8eEkMVv9moCN8ksH
a70c+bj2+FzAoydscJsD0jyjqHHZ+oUxz9gICLRy5MTw0etwd1z5BRvivzZ9
YcXxMX71S7pPP+WXrXeGU/gwPG1c8ekzG+M1W4dzCvho6rWJyfrKRnHdaHH8
CT4cmSTHaISN98V3zEPO8BGUFt21bYwNln3UH5tyPn4KUguVJtjQGrPXN77M
x+7JIxuvTrJRnROxRLOOD7lFFwy8/7LRo/JFZ1YjHycjro5NT7OR/f//Q/4P
kLSB/w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{5}, {75}},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{207., Automatic},
  PlotRange->{{-10, 20}, {0, 300}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.506500458681875*^9, {3.50650050222875*^9, 3.506500537306875*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", 
   RowBox[{"10", "x"}], "+", "100"}]}]], "Input",
 CellChangeTimes->{{3.4831724766548657`*^9, 3.483172492450777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox["x", "1"]}], "-", 
     RowBox[{"10", 
      SuperscriptBox["x", "0"]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "-", 
      RowBox[{"10.", " ", "2", "x"}]}], "=", 
     RowBox[{
      RowBox[{"10.", " ", "x"}], "=", 
      RowBox[{
       RowBox[{"10", "/", "2."}], " ", "Extremum", " ", "is", " ", 
       "5."}]}]}]}], " ", "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.483172494914503*^9, 3.4831724988128033`*^9}, {
  3.4831725499117193`*^9, 3.483172607216729*^9}, {3.483179919265577*^9, 
  3.483179919827778*^9}, {3.488554752046875*^9, 3.48855475759375*^9}, {
  3.4885548180625*^9, 3.48855482084375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "10"}], "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.4831724994209375`*^9, 3.4834904751701803`*^9, 
  3.491896928640625*^9, 3.497688388875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    FractionBox["1", 
     SuperscriptBox["x", "2"]]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
   RowBox[{"GridLinesStyle", "\[Rule]", "Cyan"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "None"}], 
     "}"}]}], ",", 
   RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4831736377309914`*^9, 3.483173675154183*^9}, {
  3.4831797573034163`*^9, 3.483179784716482*^9}, {3.483224383831317*^9, 
  3.483224386737549*^9}, {3.488554863703125*^9, 3.48855495178125*^9}, {
  3.506500733931875*^9, 3.50650075447875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
p/h6+D9I8Nu8
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 5.},
  GridLines->{{-1, 1}, None},
  GridLinesStyle->RGBColor[0, 1, 1],
  ImageSize->{229., Automatic},
  PlotRange->{{-4, 4}, {2.0000020572088006`, 27.069725613247204`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4831736601979294`*^9, 3.483173675764287*^9}, {
   3.4831797590664654`*^9, 3.4831797857930336`*^9}, 3.483224387862541*^9, {
   3.488554865421875*^9, 3.488554953453125*^9}, 3.491896928734375*^9, 
   3.4976883889375*^9, {3.506500747400625*^9, 3.506500755369375*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   FractionBox["1", 
    SuperscriptBox["x", "2"]], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"This", " ", 
     RowBox[{"is", ":", " ", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"-", "2", "  "}]], "Derivative", " ", 
        RowBox[{"is", ":", " ", 
         RowBox[{
          RowBox[{"2", "x"}], "-", 
          RowBox[{"2", 
           SuperscriptBox["x", 
            RowBox[{"-", "3"}]], "  ", 
           RowBox[{"(", 
            RowBox[{"or", ":", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], 
               SuperscriptBox["x", 
                RowBox[{"-", "3"}]]}], "+", 
              RowBox[{"2", "x"}]}]}], ")"}]}]}]}]}]}]}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.4831737013573804`*^9, 3.4831737081467466`*^9}, {
  3.4831738200930634`*^9, 3.48317387314085*^9}, {3.50650004735375*^9, 
  3.506500066244375*^9}, {3.506909585140625*^9, 3.5069095855*^9}, {
  3.50690996103125*^9, 3.50690999375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483173710759244*^9, 3.4831737143885827`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", 
    SuperscriptBox["x", "3"]]}], "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.483173715467998*^9, 3.49189692878125*^9, 3.497688389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "3"]]}], "+", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"-", "1"}]}], ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       RowBox[{"-", 
        SuperscriptBox["1", 
         RowBox[{"-", "3"}]]}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"-", "1"}]}], ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox["1", 
        RowBox[{"-", "3"}]]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"2", "*", "1"}], ")"}]}]}], "}"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Extremas", " ", "are"}], " ", "-", 
    RowBox[{"1", " ", "and", " ", "1"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.483173737509971*^9, 3.4831737978946533`*^9}, {
  3.483173894838662*^9, 3.4831739039432955`*^9}, {3.483174856234988*^9, 
  3.483174870243617*^9}, {3.4831749146589336`*^9, 3.4831749451124735`*^9}, {
  3.4831874513591275`*^9, 3.483187474886756*^9}, {3.483187514203898*^9, 
  3.4831875189501505`*^9}, {3.483187615823354*^9, 3.483187673749383*^9}, {
  3.483187788365644*^9, 3.48318781139214*^9}, {3.4831878719927797`*^9, 
  3.483187875088569*^9}, {3.4831879309378605`*^9, 3.4831879467764196`*^9}, {
  3.4831880564424143`*^9, 3.483188099439489*^9}, {3.483190351881755*^9, 
  3.4831903735945387`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.4831749387562733`*^9, 3.483174945908951*^9}, {
   3.4831874528942194`*^9, 3.4831874761242275`*^9}, {3.4831875150027723`*^9, 
   3.48318751954539*^9}, {3.483187616292644*^9, 3.483187629041689*^9}, {
   3.483187659748898*^9, 3.4831876742186728`*^9}, {3.483187790540021*^9, 
   3.483187807137244*^9}, 3.4831878760579576`*^9, {3.4831879319697905`*^9, 
   3.4831879478083496`*^9}, {3.4831880587720737`*^9, 
   3.4831881001899834`*^9}, {3.483190359405503*^9, 3.4831903745467176`*^9}, 
   3.491896928859375*^9, 3.497688389046875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "2"}], ")"}], "x"], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "100"}], ",", " ", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4831901255635242`*^9, 3.483190127967002*^9}, {
  3.483190178096686*^9, 3.483190189302512*^9}, {3.4831902556984806`*^9, 
  3.4831902568223352`*^9}, {3.483190744213825*^9, 3.4831907486782856`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Rw+VNz75eqSqH/4HavJ4uQ==
     "]], LineBox[CompressedData["
1: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
ofVGDw==
     "]], 
    LineBox[{{-0.030100443669790075`, 
     0.7711757956810195}, {-0.029940935220352197`, 1.2275354067836288`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.8},
  GridLines->Automatic,
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{251., Automatic},
  PlotRange->{{-99.99999591836735, 99.99999591836735}, {0.7711757956810195, 
   1.2275354067836288`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4918969289375*^9, 3.497688389109375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"15", "x"}], "+", "12"}], 
    RowBox[{"x", "-", "3"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   " ", 
   RowBox[{"GridLines", "\[Rule]", " ", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.507993087909375*^9, 3.507993208440625*^9}, {
  3.507993265690625*^9, 3.50799327526875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
jfp+qmIkNNv2Xb1G23f1vOd1DBLumS+aLWjzkwY9WlkkPhW7PSdpy3UVjPbK
0Kb4/YPBFIbmHwj+SJLITfAbq6Bd4W0iPTGbhMy8bvHztOOu/8mQUCSxNSxU
5hBtj58PtOWUSRSuOyjlQtsQZ+6qckkoijz6tpy2+GkH6yVqJKgHWXULaHc+
k3+5UoOE1BHdgyTtAoVeLxstEvf9Cydn0g7amje2QYdEdvIO94kgev2Xd4d7
6ZGIGP475itt9dEl5CEDEsYPWiNGaX9f9v1iiDGJ61E25p9pPw2uXBJvQkL6
/Kn7Y7QzH4fdz1hOYr++xNgkbT/2arurq0gkb7PvnUXPZ75epqccJLx6vx+e
Q3t2dseehwISUx/Sy3Rov3+bMdFmSWKGzWCaOe17iz1P960msUAxSnkz7fgj
WgojtiTYVatMj/8/HlWf8n/Zkwh/8nwok7aReJnxLCcSra/kNetoS9gdfzB7
PYnY/LcjH/4fj2S+o7oriXO5C5Yr0N/jWo9kv747SZ+7H4hb0Q5e0OJHbSXR
xK9YE0h73d7kqTWeJDLPsiRv0F5wyy3O1YtEmfVjw4+0GwRDBYd9SGTcfPZk
N50fWTFFZmG+JL6k7VxYTHv/i0P1CQfo+ZW/vRmnLb9d5F3BURJmE30eCXT+
DRc8PnwnkMQxYatCP+3Kr7EzHweRUH3fMWcZnb/bwhRV+8NJqEnnvhumbdzQ
V/Ipio5/NlVgTee/BPk3NRlNovREZn4B7cIcQ3eFRBJxZfkGx+j6+VmzJtUu
k8SGZlF1M7reGmeRmpsukPjYFqJ1g3a2Q+ct71wSKY+vmuvS9Wnxesfz8Ct0
/nAkLunQ9ZwwHSRdcYt+/1Wf89fS9a9JXQ/XbCbhKPBWUKP7yZizn7xIK4lN
p4b492nX+uhd7XpOInTW3TfudP9xTytsie0k8XRSJDSH7k9nx64ofntD4mu2
eLNVMoXpgpyS6l8kjhgYkxLpFJpqPczT/pC4EpluU087vZPbcVBEFkt4qxtj
Mygsk8j+pSEhCyPl7enKdD/duy1dGEvIwnjirtoGuv92Kpz7d6OWLKg3HeFL
L1P4W8/R11BHFhe1gyaV6H5+SEiIsvRkEbX469kZdL9nH0rQrDaShfZ1U5lO
ej+waIk5oMGTxbOZldMZxRSuR0RIfnWRRcq0V05kOYXoL0eMYsJlIeisLn72
hH7+nvFd66Nk4WnrGvapnt6f3hzOVI2Wxa8HWnNkGihMdhwSvxMvi/9SM8Nc
muh8qDjwcjBNFkGbe5R/tFJYH77vOHVdFkPnyZqYbjq/Zns9+NJDr0+2Y86n
TxSqTZ2dNi6TQ/HKhAEzen9vX67u5WEmB3OtqT09KvT5ZuVXf++VcqjU8Y8O
4fIgx09MP2Yuh7hFkaHNajzsWd3U/9daOXTEPVkcuIgHeTeL/V075bAz2H5S
2YSHfceN49xS5fB02lApyImHufflnrj/lEPwXL1nTok8qM1gmHkWzcbrZr8Z
fElgbUTfVPYBeTjp7E2wcwI0Hg3X9WgpoPj8iX1zLgLP0lg/wnoUMG9b753m
UeBCIXHS48IcJE77Z2+y4UMp2Eac56IIznkYKeTyURHn1eespAS9u9VyKvT5
XM8gbdGLf5VwqVi7cWCnOezOiRx0TJyLjKz+/74/NEeSkQ2b4awMHV7spmZd
AULOPrlSw1SBltFIw6oEAcwjN998XaWCzFDbdxOfBdAu7yBMQ+ZBEJP1dLm7
BaryQ30Tl3Ix4/6dAcdaCxivS9GtMOVCbMnhDXMeWKBwsuDDmxVcCNac7O19
aIF0p/adJuZcLNzlqbK73gL+ogu3vlrLhX6Sr0/IMwvob26y1/XmQuu3wKy0
1wKX5BQM6tO52O6k7an2ywJza3RGv2RxsWL03ufh3xY464OiuTlc2GSlJNz4
Y4HQut2L/C5zkVgpOQVRIbbsr1SVv8WF6q8/mR6zhFBo2kbuaObCzOdgT668
EPFH/VvjWrmoEf3s4zNHCAn1mPjbL7iw466QMlai/x8DbjGlurlYf2duwCMV
+v9yoeTM0ndcnB8xIoYXCGH1Ym7tv8Nc5GmsmVeqKcT9YP2T4iNcjH/9tvy4
lhBFHa6/N37j4mpxT660rhALQn3vhn3nYm+X9Kd/FguRqRt+tHCCCx3ypvXF
JULIdqYu/WeSi7oZj0p3GwhxJrzw2/Q0F9ddV+oaGQnxPxtgsOo=
     "]], 
    LineBox[{{3.000915083056331, -68.82489244903607}, {3.000939172642916, 
     102.65143356216915`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{250., Automatic},
  PlotRange->{{-0.9999998163265306, 7.999999816326531}, {-68.82489244903607, 
   102.65143356216915`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.507993150690625*^9, 3.507993210096875*^9}, {
  3.50799327014375*^9, 3.507993276175*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Trigonometry", " ", "derivatives"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{"sinx", " ", "=", " ", 
    RowBox[{
     RowBox[{"cosx", "\n", "\t", "cosx"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "sinx"}], "\n", "\t", "tanx"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["sec", "2"], "x", "\n", "\t", "cotx"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["csc", "2"]}], "x", "\n", "\t", "secx"}], " ", "=", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "tanx", ")"}], 
          RowBox[{"(", "secx", ")"}], "\n", "\t", "cscx"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", "cotx", ")"}]}], 
          RowBox[{"(", "cscx", ")"}]}]}]}]}]}]}]}], "\n", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "derivative", " ", "of", " ", "tan", 
    RowBox[{"(", "x", ")"}], " ", "is", " ", "sin", 
    RowBox[{
     RowBox[{"(", "x", ")"}], "/", "cos"}], 
    RowBox[{"(", "x", ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gf", "'"}], "-", 
      RowBox[{
       RowBox[{"fg", "'"}], "/", 
       SuperscriptBox["g", "2"]}]}], ")"}], " ", "which", " ", 
    RowBox[{"is", ":", " ", 
     RowBox[{
      SuperscriptBox["sec", "2"], "x"}]}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "cosx", ")"}], 
        RowBox[{"(", "cosx", ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", "sinx", ")"}], 
        RowBox[{"(", 
         RowBox[{"-", "sinx"}], ")"}]}]}], ")"}], "/", 
     SuperscriptBox["cos", "2"]}], "x"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["cos", "2"], "x"}], "+", 
     RowBox[{
      SuperscriptBox["sin", "2"], 
      RowBox[{"x", "/", 
       SuperscriptBox["cos", "2"]}], "x"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       SuperscriptBox["cos", "2"]}], "x"}], " ", "=", " ", 
     RowBox[{
      SuperscriptBox["sec", "2"], "x"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4831912147951403`*^9, 3.483191286649119*^9}, {
  3.4831913463472905`*^9, 3.483191369593705*^9}, {3.4831914199870453`*^9, 
  3.4831914607075977`*^9}, {3.4831915047057667`*^9, 3.4831915371846986`*^9}, {
  3.4831916392635756`*^9, 3.4831916858094177`*^9}, {3.4833094186304617`*^9, 
  3.483309492247608*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   RowBox[{"Cos", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4831917367823706`*^9, 3.4831917456373796`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4831917477613325`*^9, 3.4831917501351624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "-", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4831917511971383`*^9, 3.491896929078125*^9, 
  3.4976883891875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "x"}], "-", 
    RowBox[{"3", 
     SuperscriptBox["x", 
      RowBox[{"2", "/", "3"}]]}], "+", "4"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "8"}], "}"}], ",", " ", 
   RowBox[{"Filling", " ", "\[Rule]", " ", "None"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "8"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Negative", " ", "x"}], "-", 
     RowBox[{"values", " ", "gives", " ", "imaginary", " ", "part"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"like", " ", "this", " ", "for"}], " ", "-", "1"}], ":", " ", 
     RowBox[{"3.04004", "\[InvisibleSpace] ", "-", " ", 
      RowBox[{"1.80141", " ", "i"}]}]}]}], "  ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.483197531215536*^9, 3.483197555388292*^9}, {
  3.483197589802949*^9, 3.4831976319379454`*^9}, {3.48319766422017*^9, 
  3.4831977034756045`*^9}, {3.483224304659949*^9, 3.483224306550562*^9}, {
  3.483224342597206*^9, 3.483224357097113*^9}, {3.4876567591392307`*^9, 
  3.4876568593267307`*^9}, {3.488554148265625*^9, 3.4885543934375*^9}, {
  3.488776322609375*^9, 3.4887763276875*^9}, {3.4887768609375*^9, 
  3.488776908625*^9}, {3.48877700415625*^9, 3.488777134421875*^9}, {
  3.506582680025625*^9, 3.506582691635*^9}, {3.506582963494375*^9, 
  3.5065829824475*^9}, {3.506583017400625*^9, 3.506583063994375*^9}, {
  3.506583288775625*^9, 3.50658331929125*^9}, {3.50658335404125*^9, 
  3.506583444775625*^9}, {3.506583498838125*^9, 3.50658351051*^9}, {
  3.506583542119375*^9, 3.506583660994375*^9}, {3.506583821619375*^9, 
  3.506583822619375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
i6R+/5//ByrB+qI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{184., Automatic},
  PlotRange->{{-2, 8}, {0, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.483197521938677*^9, 3.4831975563222036`*^9, {3.4831975931805973`*^9, 
   3.4831976346462903`*^9}, {3.4831976649517345`*^9, 3.4831977041916037`*^9}, 
   3.483224308222426*^9, {3.483224344987816*^9, 3.48322435836273*^9}, {
   3.4876567601548557`*^9, 3.4876568598267307`*^9}, {3.488554149953125*^9, 
   3.488554325640625*^9}, {3.4885543590625*^9, 3.488554394765625*^9}, 
   3.488776329296875*^9, {3.48877701115625*^9, 3.488777135265625*^9}, 
   3.4918969291875*^9, 3.49768838925*^9, {3.50658354422875*^9, 
   3.50658358522875*^9}, 3.506583828275625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", "x"}], "-", 
     RowBox[{"3", 
      SuperscriptBox["x", 
       RowBox[{"2", "/", "3"}]]}], "+", "4"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Calculus", " ", "for", " ", "Dummies", " ", "p", ".162"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.483222619175778*^9, 3.483222624628763*^9}, {
  3.4832242109261737`*^9, 3.4832242272541943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4832226266287117`*^9, 3.4832226343472643`*^9}}],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["2", 
   SuperscriptBox["x", 
    RowBox[{"1", "/", "3"}]]]}]], "Output",
 CellChangeTimes->{{3.4832226314879627`*^9, 3.483222634894126*^9}, 
   3.491896929234375*^9, 3.4976883893125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   SuperscriptBox["x", "2"], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calculus", " ", "DVD"}], ",", " ", 
    RowBox[{"section", " ", "5"}], ",", " ", 
    RowBox[{"The", " ", "Chain", " ", "Rule"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4832249840462255`*^9, 3.483224992249298*^9}, {
  3.48322502790532*^9, 3.4832250452020845`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"=", 
     RowBox[{">", " ", 
      RowBox[{
       RowBox[{"f", "'"}], 
       RowBox[{"(", 
        RowBox[{"g", 
         RowBox[{"(", "x", ")"}]}], ")"}], "*", 
       RowBox[{"g", "'"}], 
       RowBox[{"(", "x", ")"}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"Cos", "[", 
      SuperscriptBox["x", "2"], "]"}], "*", "2", "x"}]}], "  ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.483224998858631*^9, 3.4832250023586082`*^9}, {
  3.4832253088872795`*^9, 3.4832253834957*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "x", " ", 
  RowBox[{"Cos", "[", 
   SuperscriptBox["x", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.4832250034367266`*^9, 3.49189692934375*^9, 
  3.497688389359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    SuperscriptBox["x", "2"], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "6"}], ",", " ", "6"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", " ", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4832254244483004`*^9, 3.483225490119335*^9}, {
  3.483225521634615*^9, 3.483225522072112*^9}, {3.4832255848842106`*^9, 
  3.4832256482431803`*^9}, {3.4876567285142307`*^9, 3.4876567291548557`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
T7iwXLTxxO//5w+Nw4ePP+LCjaVx03/pvM9cTnRXu3Dh2gVdxQOzBLp3JuXJ
5TtceKejiVX9MIEG6i1291tz4XrnkLDsJgIZXhZrtDfnwtNdM+ZUeh7Cfxvc
F67Q+1OesOdhAoGUrgdJeBtw4fUz6it23gSKG9Es59bhwo+ozveKTQjE57Di
8Oo4F97QM+8P3k+gR9PfSJLHuPDYevPhBlYCTbo65Kcqc+Hj1BSWt000ZLK6
8/qh3VxYRav53jI9r1R7d7MX7eDCV3XCTs5fp6Fj7K/Sz2zhwp95jDujpWjo
8zO9S61kLky7R9s830NFAa9RIoWVC4+wMu5hO0NFi1vcdVzXOXFrB1Ns+/Ik
sk5UmmJY5MQBI2bTMUmT6MSXBDWRMU78psXktOIMBX1XvjoU38eJFwjMtD2C
gnbmCgXv7uDEDkiaT0uRgphKfNs1qjhx0/ORL1bXJpDTadXH1cWcOL3cM+np
5Djqq52TvvyTE39hvZkp+WAcofab9+3TOPEzQ2M94eAx9JB2iu9VKCdWEbeu
2uI3gij3GX5s9+fEL+f9Q9XXhtHVpdxrqY85MaujhoGn0zA6yiL/CTtyYl/L
R7UZhkNoQYxHm3KeE4d0BooZzvYjxxP1/2mIcuLmPTeb+uI6kFWs0fBEHAde
5r4ieN7rE3r+fVSt6TUHNjotFpKxPQYV1ri++hnGgeeDyjfZ619E4muRp549
5sBfqgxJVrtToN604dMecw7s5fPWnPlKMahL6N5x3MaBd4ec5bwj0AIOhzvK
jUQ48Neqb+aqj1shRt9W4jgfB7aJnrI/N9EG84/96gXX2bHy+YTh+987Ia2v
WPlbNztO2ezP2srZB2KJKovzsez4kpPt0QnKEJzMr9LviWTHjh8kfKYeDINz
o3FK+TN27K0/d7OKbQTqmdyNXz+kv09xr3UueRTWxdmzHjuz4yWHio9fXo3C
7v2vuGwd2PH5zD+VR4THwM/q+88jJuy40TT1Rgf7OHz30CJLXmTH5d/4Ups9
xmHgRaMD51l2HKAi5bRvchzUSqe2dqqw44fdslH9RRNg1/XYtXg/O+avEvGV
kKVA1Bzfn8+72XFNGidTZAAF5nbu8fLYzI6jvwpfW4VJkFIraLciseOnPie9
e19OgsGlM/vOcrNjjn2nm9pGJyH16a2BLStsmNF31ybqYyq0v/13jHWWDUuW
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
IFem808Igf/f/6fg//9/6v8AhE0N9g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{189., Automatic},
  PlotRange->{{-5.999999755102041, 5.999999755102041}, {-0.9999996337711616, 
   0.9999997017588098}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.48322543619815*^9, 3.483225490963074*^9}, 
   3.4832255232752295`*^9, {3.483225586337326*^9, 3.483225650415041*^9}, 
   3.4876567301704807`*^9, 3.491896929453125*^9, 3.4976883894375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4832257362113667`*^9, 3.4832257391019735`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"=", 
     RowBox[{">", " ", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "x"}], "]"}], "*", "2", 
       SuperscriptBox["x", "0"]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "x"}], "]"}], "*", "2"}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4832257428050747`*^9, 3.483225834413863*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.483225757226857*^9, 3.4918969295*^9, 3.4976883895*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Tan", "[", 
   RowBox[{"3", "x"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.483261618282361*^9, 3.4832616657901363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"=", 
     RowBox[{">", " ", 
      RowBox[{
       SuperscriptBox["Sec", "2"], "[", 
       RowBox[{"3", "x"}], "]"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Sec", "2"], "[", 
      RowBox[{"3", "x"}], "]"}], "*", "3"}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4832616234255195`*^9, 3.4832616326488123`*^9}, {
  3.483261668775982*^9, 3.4832617114532533`*^9}}],

Cell[BoxData[
 RowBox[{"3", " ", 
  SuperscriptBox[
   RowBox[{"Sec", "[", 
    RowBox[{"3", " ", "x"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.483261633915061*^9, 3.49189692959375*^9, 
  3.497688389546875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "6"]}]], "Input",
 CellChangeTimes->{{3.483262061142325*^9, 3.48326209342936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"=", 
    RowBox[{">", " ", 
     RowBox[{"6", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "5"], "*", 
      RowBox[{"(", 
       RowBox[{"0", "+", 
        RowBox[{"2", 
         RowBox[{"Cos", "[", "x", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ")"}]}]}]}], "  ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.483262096367386*^9, 3.483262100618148*^9}, {
  3.4832621621291685`*^9, 3.483262227123846*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12"}], " ", 
  RowBox[{"Cos", "[", "x", "]"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "5"], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4832621020246496`*^9, 3.491896929671875*^9, 
  3.49768838965625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "3"], "+", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "3"]}]}]], "Input",
 CellChangeTimes->{{3.483262349241036*^9, 3.483262363898224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"=", 
     RowBox[{">", " ", 
      RowBox[{
       RowBox[{"3", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Sin", "[", "x", "]"}], ")"}], "2"], "*", 
        RowBox[{"Cos", "[", "x", "]"}]}], " ", "+", " ", 
       RowBox[{"3", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Cos", "[", "x", "]"}], ")"}], "2"], "*", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}]}], " ", "=", 
    RowBox[{">", " ", 
     RowBox[{"3", "sinxcosx", 
      RowBox[{"(", 
       RowBox[{"sinx", "-", "cosx"}], ")"}]}]}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.48326236571084*^9, 3.48326237141433*^9}, {
  3.4832624898594103`*^9, 3.483262539814798*^9}, {3.4832626291920857`*^9, 
  3.4832626492388997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.4832623724300203`*^9, 3.491896929765625*^9, 
  3.49768838971875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"Tan", "[", 
    SuperscriptBox["x", "3"], "]"}], "2"], " "}]], "Input",
 CellChangeTimes->{{3.4832628419358587`*^9, 3.4832628495137405`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"=", 
    RowBox[{">", " ", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"Tan", "[", 
        SuperscriptBox["x", "3"], "]"}], ")"}], "*", 
      RowBox[{
       SuperscriptBox["Sec", "2"], "[", 
       SuperscriptBox["x", "3"], "]"}], "*", "3", 
      SuperscriptBox["x", "2"]}]}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4832628513730564`*^9, 3.4832629326048317`*^9}}],

Cell[BoxData[
 RowBox[{"6", " ", 
  SuperscriptBox["x", "2"], " ", 
  SuperscriptBox[
   RowBox[{"Sec", "[", 
    SuperscriptBox["x", "3"], "]"}], "2"], " ", 
  RowBox[{"Tan", "[", 
   SuperscriptBox["x", "3"], "]"}]}]], "Output",
 CellChangeTimes->{3.4832628568103824`*^9, 3.49189692984375*^9, 
  3.497688389796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"x", "-", "6"}], 
     RowBox[{"x", "+", "7"}]], ")"}], "3"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.483347307765625*^9, 3.48334736940625*^9}, {
  3.4833483348927364`*^9, 3.4833483396985583`*^9}, {3.4833484111486993`*^9, 
  3.483348439403989*^9}, {3.483349429361335*^9, 3.4833494338766994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", "x"}], ")"}], "3"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"7", "+", "x"}], ")"}], "4"]]}], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", "x"}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"7", "+", "x"}], ")"}], "3"]]}]], "Output",
 CellChangeTimes->{
  3.483348340687992*^9, {3.4833484116652775`*^9, 3.4833484397483745`*^9}, {
   3.4833494346735287`*^9, 3.4833494399076023`*^9}, 3.491896929921875*^9, 
   3.497688389859375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Calculus", " ", "1"}], "&"}], "2", " ", "Tutor", " ", "DVD", 
     " ", "section", " ", "6"}], ",", " ", 
    RowBox[{"higher", " ", "order", " ", "derivatives"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"2", "nd", " ", "derivative", " ", 
     RowBox[{"(", 
      RowBox[{"y", "''"}], ")"}]}], ":", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d", "2"], 
      RowBox[{"y", "/", 
       RowBox[{
        SuperscriptBox["dx", "2"], ".", " ", "3"}]}], "rd", " ", "derivative",
       " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", "'''"}], " ", "or", " ", 
        SuperscriptBox["y", 
         RowBox[{"(", "3", ")"}]]}], ")"}]}], ":", " ", 
     RowBox[{
      SuperscriptBox["d", 
       RowBox[{"3", "y"}]], "/", 
      SuperscriptBox["dx", "3"]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.48334755803125*^9, 3.483347588109375*^9}, {
  3.4833496648946424`*^9, 3.4833497718869905`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   SuperscriptBox["x", "4"], "-", 
   RowBox[{"3", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"16", "x", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], 
       RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"9", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"16.", "  ", 
         RowBox[{"f", "''"}], 
         RowBox[{"(", "x", ")"}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"12", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"18", "x"}]}]}]}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.483349805993746*^9, 3.4833499195943956`*^9}, {
  3.4834905302326803`*^9, 3.4834905404826803`*^9}, {3.483490683638875*^9, 
  3.483490711263875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4834904874201803`*^9, 3.4834904940764303`*^9}}],

Cell[BoxData[
 RowBox[{"16", "-", 
  RowBox[{"9", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{3.4834904955451803`*^9, 3.491896930109375*^9, 
  3.4976883899375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4834904992326803`*^9, 3.4834905028108053`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "18"}], " ", "x"}], "+", 
  RowBox[{"12", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.4834905040139303`*^9, 3.4918969301875*^9, 
  3.497688389984375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", "1"}]], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]], "*", "2", "x"}], " ", "=", " ", 
     RowBox[{"x", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.483490886092*^9, 3.4834909556074686`*^9}, {
  3.4835282658123283`*^9, 3.483528283640453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.48349096087306*^9, 3.483490963388669*^9}}],

Cell[BoxData[
 FractionBox["x", 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}]]]], "Output",
 CellChangeTimes->{3.4834909644511623`*^9, 3.491896930265625*^9, 
  3.497688390046875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483491207447418*^9, 3.4834912106036077`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "+", 
  FractionBox["1", 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.483491211603588*^9, 3.491896930359375*^9, 
  3.497688390109375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", "x"}], "-", "1"}], ")"}], 
   RowBox[{"1", "/", "2"}]], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "x"}], "-", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]], "*", "5"}], " ", "=", " ", 
     RowBox[{
      FractionBox["5", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "x"}], "-", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]]}]}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4834912903520765`*^9, 3.4834912989456615`*^9}, {
  3.483491391928331*^9, 3.4834914598805857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483491302945585*^9, 3.483491305414287*^9}}],

Cell[BoxData[
 FractionBox["5", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"5", " ", "x"}]}]]}]]], "Output",
 CellChangeTimes->{3.4834913065548906`*^9, 3.4918969304375*^9, 
  3.4976883901875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4834915121767917`*^9, 3.483491518176715*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["25", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"5", " ", "x"}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{3.4834915192079515`*^9, 3.491896930515625*^9, 
  3.49768839025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483491524426635*^9, 3.483491527723468*^9}}],

Cell[BoxData[
 FractionBox["375", 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"5", " ", "x"}]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.4834915286609554`*^9, 3.491896930578125*^9, 
  3.497688390296875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculus", " ", "I", " ", "for", " ", "Dummies", " ", "p", ".166"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "x"}], "]"}], "-", 
     RowBox[{"2", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{
       RowBox[{"-", "2"}], "Pi"}], ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
    RowBox[{"Filling", " ", "\[Rule]", " ", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4835481258327417`*^9, 3.483548234317811*^9}, {
  3.4835601947888436`*^9, 3.483560239882882*^9}, {3.488554000765625*^9, 
  3.488554018359375*^9}, {3.488554099546875*^9, 3.488554112515625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
8Hxv
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{183., Automatic},
  PlotRange->{{-6.283185050723043, 6.283185050723043}, {-2.999996190301114, 
   1.4999998661935812`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4835481402078333`*^9, 3.4835482043488693`*^9}, {
   3.4835602041795287`*^9, 3.483560240711013*^9}, {3.488554004046875*^9, 
   3.488554021015625*^9}, {3.488554101640625*^9, 3.48855411428125*^9}, 
   3.49189693071875*^9, 3.497688390359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"DVD", " ", "Calculus", " ", "Section", " ", "8"}], ",", " ", 
    RowBox[{"curve", " ", "sketching"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "+", 
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"9", "x"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "8"}], ",", " ", "5"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.85"}], ",", 
         RowBox[{"-", "3"}], ",", "1", ",", "1.85"}], "}"}], ",", 
       "Automatic"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4836058146878505`*^9, 3.4836058392836466`*^9}, {
  3.483605884006117*^9, 3.483605921399853*^9}, {3.4836060502375793`*^9, 
  3.483606050534464*^9}, {3.4836067625728903`*^9, 3.4836067711579676`*^9}, {
  3.4836076546985826`*^9, 3.483607669054951*^9}, {3.4836077663087807`*^9, 
  3.4836077992889442`*^9}, {3.4836081012244244`*^9, 3.4836081047216244`*^9}, {
  3.4836083115091867`*^9, 3.4836083222193613`*^9}, {3.483608430678331*^9, 
  3.483608436569107*^9}, {3.483608482632786*^9, 3.4836084828984175`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
oh9oZw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-4.85, -3, 1, 1.85}, Automatic},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{188., Automatic},
  PlotRange->{{-7.999999734693877, 4.999999734693877}, {-50, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.4836059125084887`*^9, 3.483605922274926*^9}, 
   3.483606051221986*^9, {3.483606765439805*^9, 3.4836067719256115`*^9}, {
   3.4836076609295907`*^9, 3.483607672671441*^9}, {3.4836077783850126`*^9, 
   3.483607800067779*^9}, 3.483608105814499*^9, {3.483608315708949*^9, 
   3.4836083229999866`*^9}, 3.483608437537882*^9, 3.483608483726564*^9, 
   3.49189693078125*^9, 3.4976883904375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"9", "x"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "8"}], ",", " ", "5"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "30"}], ",", "50"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.85"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "1.85"}], "}"}], ",", 
         "Automatic"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "8"}], ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "8"}], ",", " ", "8"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
      RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Number", " ", "of", " ", "solutions", " ", "for", " ", "y"}], 
    "=", 
    RowBox[{
     RowBox[{
     "0", " ", "equals", " ", "the", " ", "highest", " ", "square", " ", "in",
       " ", "the", " ", 
      RowBox[{"equation", ".", " ", "3"}], " ", "in", " ", "this", " ", 
      RowBox[{"case", ".", "\[IndentingNewLine]", 
       RowBox[{"y", "'"}]}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"6", "x"}], "-", 
       RowBox[{"9.", " ", "Extremas", " ", "are"}], " ", "-", 
       RowBox[{"3", " ", "0", " ", "1", " ", "for", " ", "y"}]}], "=", 
      RowBox[{
       RowBox[{"0.", "  ", 
        RowBox[{"y", "''"}]}], "=", 
       RowBox[{
        RowBox[{"6", "x"}], "+", "6"}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Where", " ", 
       RowBox[{"y", "'"}]}], ">", "0"}], ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"y", " ", "is", " ", 
        RowBox[{"inreasing", ".", " ", "Where"}], " ", 
        RowBox[{"y", "'"}]}], "<", "0"}], ":", " ", 
      RowBox[{"y", " ", "is", " ", 
       RowBox[{"decreasing", ".", " ", "Where"}], " ", 
       RowBox[{"y", "'"}]}]}]}], "=", 
    RowBox[{"0", ":", " ", 
     RowBox[{"Local", " ", 
      RowBox[{"maximum", "/", "minimum"}], " ", "in", " ", "y"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Where", " ", 
       RowBox[{"y", "''"}]}], ">", "0"}], ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"y", " ", "is", " ", "concave", " ", 
        RowBox[{"upward", ".", " ", "Where"}], " ", 
        RowBox[{"y", "''"}]}], "<", "0"}], ":", " ", 
      RowBox[{"y", " ", "is", " ", "concave", " ", 
       RowBox[{"downward", ".", " ", "Where"}], " ", 
       RowBox[{"y", "''"}]}]}]}], "=", 
    RowBox[{"0", ":", " ", 
     RowBox[{"Inflexion", " ", "point", " ", "of", " ", "y"}]}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4836079083569975`*^9, 3.4836079644175406`*^9}, {
  3.483608496789398*^9, 3.4836086075578585`*^9}, {3.483608643183771*^9, 
  3.4836086993018155`*^9}, {3.4836089091095157`*^9, 3.4836089389799747`*^9}, {
  3.4836090778596325`*^9, 3.483609098851797*^9}, {3.4836091422461004`*^9, 
  3.4836092769314127`*^9}, {3.4836093947497964`*^9, 3.4836094030348325`*^9}, {
  3.48360943528468*^9, 3.483609474225238*^9}, {3.4836371693564324`*^9, 
  3.4836371733877087`*^9}, {3.4836372163254833`*^9, 3.483637221122389*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
UJ8X////mX34fwA0LlVN
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
/wBB3rMa
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwt1P9T0nccwHGRmd+S/AZTED6pwUVqp07RocVLQpPPtJQyaVmile1IsnEV
apd9mRV2dpHZMmuzHX5dnWZfR4m8A5y0JCs1M5uWZkvLI78Uppbbbvvhec//
4OGbmSPaamtjY5P4T/9+KY8yMjeHocwGlWVuToByPvorP05jyGOGyoqaFaDL
V0NYE+8xZIyrStszJUChixMzX73BEKtPc/ftOwGKcCt82taNoeH5g+qeFwIE
g2N/nG3A0E5puPiqQYBER80Xv0rHUAHzKco6KkCK9kLZtmYGOnvOv8RMEqDO
TueROxl0VNGvzEl2XIHoKMczwscHUR6sWc0m89H17Ua7BX9SkSlpjeAeMwZJ
ikPe9RzyRvFs5i5/P0BTJXuVOp4X2pWmSahIX47UpD7vshcUNEk2s7aIotF5
PETeUURGIxZhgHYVFx3KzshlCz2Rwa8krFkWifYSf1XIR91RpN3+qwFbOCjj
QPuix7VuqAQiImL2haHT2qGy81JXJDkvHhqpCEW3+hfPv+RHQm01DEdCeTDy
dwX+2p+dUZiXZHOBLAhdWaKUDgw6oPnQVtGRwkb9LY0LOZx56H6tU0hyMhMN
BZ4O1d0gIrGh/x6jxBe5FdRxlhIIKCx/Vn2MSEOBHEtg1cSsjv8wy6CQeaAf
BKMPNLlWndLcKg+SzkPktfWq9V+O62zGAkyhXsO6Kx9aFpgWjehe0+of1Jwc
41X1Dh0fLuzTCc6d6krycYSNyT7Xejcbdc2XuffjgjxB47S3S7/bwCO62ys9
q2kQPkBgHBT386TfXggve+4L/u9uf+Tqh3ku+dX0x7VMEKp7zKvE4zwFdzM1
Ss+G2ER34vvrVt6kJlGvMAXBifTuA8E3Z3mPDUnBV4zB0LqK7pLkTgDyTJdj
kzkURn3JBY/KiSDvOdFHvxYGu3cFZJygzAPxmefKNyoOdD9zFWWZHOCXqmJt
wo+RIMmL/ss+wRkcNshG7fK4YAiIOGawI8EjSV2NqDAaWI5NryvjXUHjQt1o
zV4O9KbtsXZKN6CYXSeJLACbads6+YA7HIjSf+5ix4A1WbuphekJeZ9c7Nf6
8KE3LJ3GLCRD5bajnTT/FbAz1dXN7xkFSmPair2ZAvAufSn+gu4FHjkX+QZy
LNRvuFAzkesNesFv2hvUOEhdtj/epKUCYUc6Zx1pJTRukvlxZ2lgZ//obMCn
lTDltIKoSaEDN16ux22EIHoYxaGXMeDzs0uvyeNCcIpyvtP0EwPis02qxA9C
uFP59Js0NQNOzgxGHp4WQnBuXsa5egYsotKKJm1xIGE3i71bGICnFrE7PHC4
mx06SB5nwJmHW6WqcBzAga0iJWAQ/DvjrVMeDlPfT1HrkzHIT+GW8vfh0NDb
WpWYioHhZUp0/kEcGA1Zt4szMVhHPF48XITDbErlK6c8DPbBTKCpHIebamyZ
fTUGd291yw434bDDxdJafREDd3yCrEU4sBTNorhGDNJ6SM2TRhxK8Y3fHW7C
wGKNJW0x4yAfKz9F7MCAEn6tnt+Hw5INUob6CQYSY/u6/AEcXhi/ruP3YVC3
5s3nxlc4JJU9aT44jEG03G+1rwUHB9taoa8FgyOE5VbxBA667YpONIlBu2p9
hcqKw56uuHTJNAZeC3evNM3g8L9f8J9fOPwNfAMwug==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-4.85, -3, -1, 1, 1.85}, Automatic},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{259., Automatic},
  PlotRange->{{-7.999999734693877, 4.999999734693877}, {-30, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.483608608557884*^9, {3.483608645683835*^9, 3.483608700817935*^9}, 
   3.4836091731818285`*^9, {3.4836371748252172`*^9, 3.483637179215871*^9}, 
   3.4836372222005205`*^9, 3.491896930875*^9, 3.497688390578125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["x", "3"], "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.6"}], ",", " ", "0.6"}], "}"}], ",", "Automatic"}], 
       "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.4836095643934975`*^9, 3.4836095789004574`*^9}, {
  3.4836096431812973`*^9, 3.483609730629693*^9}, {3.4836372030753984`*^9, 
  3.483637208481683*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zMPJ/Xm5d0/NwP//X9L9HzpeemI=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
fQj6/33I/wBl5l7R
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAALj8W6v///79ir5Dv//8nwG/5I4j5
+v+/E/saJjv8J8CwszEm8/X/v8RGpVx2+CfAMihNYubr/78m3rnJ7PAnwDcR
hNrM1/+/6Qzjo9nhJ8BA4/HKma//v3BqNVizwyfAUofNqzNf/79+JdrAZocn
wHfPhG1nvv6/mZsjks0OJ8DU1AvqwWH9v5/fiG9RCSbAHcBvFDcc/L8W0FNP
KRUlwLVrxAUP3fq/yFBTRMslJMBgjDHw2YL5v0gpJXQjIiPA+JJ7iL8/+L86
rlymzy8iwKMO3hmY4fa/+opmEzIpIcCcSjFy04n1v/X3pJVeJyDAgmxheClJ
9L/DIpI0vm0ewHsDqndy7fK/OAV/sytkHMBhgM8k1qjxv5JANzdBfRrAlb3l
mJxq8L9gnFjl6p8YwLrfKAysIu6/zKceCQGaFsAjEEBCVJ7rvxoMsDG/thTA
siqIauLj6L8GIObP6aoSwN/FsSA2Nua/Z1SFmKioEMDlLJUyv7bjv1jD38se
kg3AEX6pNi4B4b8aPf5RxYEJwCw27yyl89y/oWiz4bu2BcCDRO3QuXjXv2Lz
sVyLmgHAFVSukFkX0r8gfgVZBiP7v7L2xQ/IJMq/BnnUC5ab87+l2+WN6YS+
v7xkbCqv4+a/XVEctNtjpL8MeiqOyZXOv7kKe9XCdaM/FpA4QKQwzT814gEe
gVi/P6hpgdZgguc/I/C7+TrCyT8a9Ew7rFHzP0mj2c1OWNI/7nTGNHaE+z9F
TRID9bXXP/S5TcJ3yAFAj1/XgDC33D+rh6FgZIkFQMdOHQ1QEuE/KvarE3ib
CUDtIRV+0prjP+SyH707aA1AdXQrYY8W5j9Yl+CI65AQQNfcEFJmyOg/oaWM
vUyWEkBgeTznB0zrPwhbbe0FeRRAwys3isMF7j/SYKmnUoQWQCYJvOikSPA/
uQ0aXfdsGEAdvGtFBYjxPyyaIegHTBpAAPoCqXLi8j8Ad4T9q1McQPdRvV7F
JfQ/8vobDqg4HkDbNF8bJYT1P6Rnh9QbIyBAcFcQESLc9j+UQcyMGSUhQBmU
5FgEHfg/E2+rQsMVIkCuW6Cn83j5P8JEuL22GiNAVz1/SMi9+j8Bbl82Vg4k
QLFebSI6/Ps/BQfSmSv9JED4CkMDuVX9PzpIcsJKACZAUtE7Nh2Y/j/+3Kzo
FfImQAo7C8G8nf4/SGzIkE32JkDBpNpLXKP+P5H74ziF+iZAMHh5YZuu/j8k
GhuJ9AInQA4ft4wZxf4/SleJKdMTJ0DJbDLjFfL+P5fRZWqQNSdAQAgpkA5M
/z8wxh7sCnknQPhx+BquUf8/elU6lEJ9J0Cv28elTVf/P8PkVTx6gSdAHq9m
u4xi/z9WA42M6YknQPxVpOYKef8/fUD7LMiaJ0C3ox89B6b/P8m6122FvCdA
bg3vx6ar/z8SSvMVvcAnQCZ3vlJGsf8/XNkOvvTEJ0CUSl1ohbz/P+/3RQ5k
zSdAcvGakwPT/z8WNbSuQt4nQCpbah6j2P8/YMTPVnriJ0DhxDmpQt7/P6lT
6/6x5idAUJjYvoHp/z88ciJPIe8nQAgCqEkh7/8/hgE+91jzJ0C/a3fUwPT/
P8+QWZ+Q9ydAdtVGX2D6/z8YIHVHyPsnQC4/Fur///8/Yq+Q7///J0CVa2fI

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-0.6, 0.6}, Automatic},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{261., Automatic},
  PlotRange->{{-1.999999918367347, 1.999999918367347}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.48360965926714*^9, 3.483609732020995*^9}, 
   3.4836372097941914`*^9, 3.49189693096875*^9, 3.497688390734375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input",
 CellChangeTimes->{{3.483610536515715*^9, 3.4836105366404867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4836105397597666`*^9, 3.483610542988221*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.483610544376301*^9, 3.491896931015625*^9, 
  3.4976883908125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.483610545873555*^9, 3.483610549148799*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.483610550146969*^9, 3.491896931140625*^9, 
  3.497688390875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.4836105541864367`*^9, 3.4836105576644335`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.483610558647007*^9, 3.491896931203125*^9, 
  3.4976883909375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   SuperscriptBox["x", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.4142"}], ",", " ", "1.4142", ",", " ", "1", ",", 
          " ", "2"}], "}"}], ",", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.483635482172142*^9, 3.4836355457013254`*^9}, {
  3.483635602590858*^9, 3.483635717948018*^9}, {3.483635930679786*^9, 
  3.4836359320235276`*^9}, {3.48363623578798*^9, 3.48363625494433*^9}, {
  3.483637227575555*^9, 3.483637230419323*^9}, {3.487417605765625*^9, 
  3.487417607796875*^9}, {3.506651258119375*^9, 3.506651262213125*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/wOHd6Iy
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwtxXlM01ccAPBS2j4ouN/A4wUxGWBsMEIWIKL1el+jhE45QoUwxcSMjMUQ
g4pG3BzTZRzZXNAMBRVqjBt4dE4yozhB35uiJDJrvfDAGwFLiUChQgH5bcv7
/vHJJzJ3szVPq9FoUv/z/2OOmjeqqnK5Iv4Zielt9KlcrghbxJX+zUMqlysC
Cl+OvehWuVwRZdPnhIhbKpcrImT9H0v31Khcrohol6jSLFC5XBHZ/t0Wv4JJ
Lv9IBN2s+DL+0gSXBwtTw97HK2ePc3mQqCub32o94OPyQLGrf+mm/Z0jXE7E
xaIj+WfT33O5QaT9khUxeXiYy3Ui2XY5zdLn4XKtqG/9un1bziCX+4nmgLnz
jmb0c7nKx4VhPTX14RNcXbvsu3KjC/fxczRBybZ34V6eOM1pdZW+xj38bn6m
8YL5Of6O/13QnFFe/hDv4ekD2yefWe7gr/g3O9JDevTX8Qd8jvL7S/PVBlzw
TGtT+2VLHZOfZ6diU2Ycu34Vv8v27LX06a238RcsZd5J/6Id7Xg3M1d22POc
T/E+drv2zMKE0lf4IMtY3RBzv+sNPsx0TcaCP4Pf4qOMGE5CXJEbH2dJW9yR
f915h0+yJ6kroplvANeAOSM+oNDuYXItxM2/VXENhplcB63RTbVhDi+T60H/
06ohVjzC5AQ62koHShQfkwfC2l25iUeujTG5EbYEuaMc6yaYPBhm229UGXo/
MPkU2H1xxRqlRmVyBRatScypqdbgH0PA9+Fx1YV+eAjUJZ5edfAzLR4KFU8r
GqNC/fGpsNrcYjnk9senQmZZeqztgg6fBjE5JVm/Fevx6fCoO/B4ZZYBnwHO
3K7loZ8QnEKn7sTowSiCU3hfv/FsmIngFMLd7lmRsQSn8NU2z8iniwlOYfwH
9UxqNsEpmOrCZv64j+AUzMkdzuBKglNIcdWW768iOIWtsRHeahvBKTSfNznr
7QSnYL2RUNbSSnAKeRu9SyxtBKew09g41OYgOAVb2qIv7j0gOIW37bDkdSfB
KYzt1A7l9RCcwpTwllOuXoJTiN+QTAcHCU4hyS/Qsd1LcAqf/3qzZHSU4BTy
k35e/O0EwSkU96R6VJXgFP4F+zROHQ==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/evc7Cf////fzwABDhovD0xjMEfww5mfeTDm/YPz
uU/1pRjt+gPnq23ovumi/BvOX9pmejxoyk84v/q9bc6Ex9/h/B3ls7LW+3+D
8/0mhSr8m/kFznefu9fP480nOH/Z8cprxdEf4fw9HJra8wLfw/m/D7DFiKu9
gfP/R9rVtXO9hPM3ixvzh69+CuebiVwIetn6CM6/lBXCtc3yHpx/MG9PYHv7
dTjf/0PJv7seF+H8qjJ/weesR+F8Vf41DywPbYDzQ4J2X9vrsdQexl+p6yO2
4OghOL+h2+MNa9B5ON9HewVzedk1ON9y8u3VqRfuwPnn56y1MG59COcHem/Q
ufL0CZzPspsrbxPPCzifnW2Fg2H5azjfteC14s6L7+D8W77OGvY/PyDsCzTi
KFr9Cc43ND3bd9jhC5x/XGP3HMlzX+F81i6vz/a13+H826dbP7Tw/4TzI6uT
zGYd/gXnF3C/VjoX9QfOV159bBrbq79wfv0O52D+2f/hfKtgs+jZ0xkcYHyO
RmnD6UWMcP5Ss1VeUz2Z4Py+O33blYSY4XxvyyMeM14j+CFt/rpzt7HA+TrR
LaFLalnh/BvPOBdNDmWD8y8kPXUUkmeH89WWSkp19iP4tc99P/3/j+ADAL/Z
3lM=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-1.4142, 1.4142, 1, 2}, {4}},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{277., Automatic},
  PlotRange->{{-1.9999998979591838`, 2.9999998979591838`}, {-2, 6}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.4836354979839334`*^9, 3.483635548685643*^9}, {
   3.4836356078720064`*^9, 3.483635718979248*^9}, 3.4836359328360224`*^9, {
   3.483636241569245*^9, 3.48363625570996*^9}, 3.4836372314349546`*^9, 
   3.487417620734375*^9, 3.491896931296875*^9, 3.497688391015625*^9, 
   3.506651265025625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"6", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "2.5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", "18"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.35"}], ",", " ", 
          RowBox[{"-", "0.95"}], ",", " ", 
          RowBox[{"-", "0.55"}], ",", " ", "0.55", ",", " ", "0.95", ",", " ",
           "1.35"}], "}"}], ",", "None"}], "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "2.5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "2.5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "2.5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Magenta"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.4836363143978357`*^9, 3.483636387382678*^9}, {
  3.483636423039156*^9, 3.4836364327735934`*^9}, {3.4836364945864887`*^9, 
  3.483636561586918*^9}, {3.483636636009269*^9, 3.4836367120253806`*^9}, {
  3.4836367556194096`*^9, 3.4836367933852763`*^9}, {3.4836368491668835`*^9, 
  3.483636850807519*^9}, {3.4836368818702173`*^9, 3.483636978042708*^9}, {
  3.483637016136702*^9, 3.4836370535588164`*^9}, {3.4836370961372137`*^9, 
  3.483637135199964*^9}, {3.483637235216229*^9, 3.483637410654852*^9}, {
  3.49768919846875*^9, 3.497689204859375*^9}, {3.497689402171875*^9, 
  3.497689439109375*^9}, {3.506651233994375*^9, 3.506651246275625*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0mFiEY5cYxZqWDIp36lOiQ77///37sf+B35gOME=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
L0unscPx6YGz1vkB8P8AjCl4GA==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 1], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-1.35, -0.95, -0.55, 0.55, 0.95, 1.35}, None},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{394., Automatic},
  PlotRange->{{-2.4999998979591838`, 2.4999998979591838`}, {-38, 18}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.48363633925737*^9, 3.483636388163933*^9}, {
   3.4836364237266607`*^9, 3.4836364334767227`*^9}, {3.4836365018834105`*^9, 
   3.48363656272755*^9}, {3.4836366404467974`*^9, 3.483636712806636*^9}, {
   3.483636757072544*^9, 3.4836367944790335`*^9}, 3.483636852088777*^9, {
   3.483636885682742*^9, 3.4836369787614627`*^9}, {3.483637028855533*^9, 
   3.483637061918245*^9}, {3.483637101574749*^9, 3.4836371359030933`*^9}, {
   3.4836372408100147`*^9, 3.4836374117486086`*^9}, 3.491896931453125*^9, 
   3.49768839121875*^9, 3.49768920653125*^9, {3.4976894076875*^9, 
   3.497689440015625*^9}, 3.506651251994375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], "-", 
     RowBox[{"3", 
      RowBox[{"x", "^", "2"}]}], "-", 
     RowBox[{"2", "x"}], "+", "1"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "18"}], ",", "18"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "None"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2.5"}], ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Cyan"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.49768824684375*^9, 3.497688322125*^9}, {
  3.4976884479375*^9, 3.497688522109375*^9}, {3.497689146765625*^9, 
  3.497689151484375*^9}, {3.506651298400625*^9, 3.50665130110375*^9}, {
  3.5066513368225*^9, 3.50665133747875*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtmXk0Vl+4x9+JkJB5eN/KmGQuKsrehkoiJUoikkIKISRKEaWkIiGVKD9l
qNBAsjelkHmeknnK/J5kds+9655/zvqstc9zvuf7fM+z9llH2tHD4jSNQqHk
UCmU/z3PBDuK5DOomPJ/hyZe900xxduGgvd9IqxD59Xw3L4apcATy+jgurrz
m3M2YZ1B22TrxgU0c8tQeGO+LH6UM7g+3G8OuYifObe9goW1RZVmjc7PoWNb
GDZnX7Jwk/+5GtqpOdTInKt7f4WFRfWmgq8cmEMawglm8RosHFM6331Rfg5Z
JD/OvR/HxPd+rXnhVD+Lsl6/xwZuUvjmqq2KBmqzSPI3V8QlWQnsfzxYfWlg
Bi177v2v+Zcwzv8ZOzbSMYO85Xj+q/sijBd1M1+31M2gcaX3qO+JML7KbJPL
LZxBPr/rZA+cEMZhv7ZIuMXOoB0Z0fxaXUL4of0gtXU3uX7FYfuBIUGcfepA
fe6Lv6hopH0ohHstHnVj+p5zJNCy8Wf546zVeKTB5PKqYwSqEtQ5v3qUBw/t
uhScbE4gm+Nupt35PLifvymiZSeBEDdX+pI1D+7MiXpmJEagZANm679Yblyz
QCtjVrCRj52h/7AEF869PSxVqcVGxovyKEiXA2cTYtIuymzk/jh/UxUfB35r
t0eBLstG54pE/xr0MHCmWor6DgE2GjMwDo+/xcCp9ba7X45MI+GQ67fmWuk4
TqrGPejZNMpSHwwNvEbDgekfilS4pxFeLZoW07SChvZr9C8tTyHCPeqs49UV
ZDmazlVFTCEuzmsd1xVXkIrKc3P3rinU5vjO7fPlZdSZdftX1scpFNoRdo1L
YQnpZzvMqZ2ZQmELjF+Lt+YRZx6PhubXSTRraN6bdPcv8jp2w5KWN4lCT4RF
x+j/RZ1zK351WZPo3G6btmaCQB91/hZ6JUyiM6u/lJraEsil4LdpzoVJZBuU
5TWmykY/Ua7L1g2TqE5O34zomUTrI7/A8/PjyPOzmU0jzzDyRD1iLoPjaEPb
dqwaOYSKp1ZNODaMo6T9o4FrBIaQ0xGLJ9ZZ5Hpe52M2YoPo9frBOUPHcWS9
v1RLRbkfaWcL5EiWj6HgMSmtGPdudKD5lHxp/Ci6F6CplPC6ASVx31osDhtF
n15vPs9ZU4+mdLPqv3iPIvHmU/u8Z+pQTNLstRyzUXRzgvO22Z5a1OYa2fmU
OoocrJ4Xz/T+RGcWPzy66PoHdaW0qTb3fkFXpHl4ZHeMICih76LLzgbCHs2v
gxRGUHBVUO9yzXvwuuDF/hahEZQEdN7wpX8CTUdBZOT4MEoay/knZlkIVO/6
CMymDKODlQlGcwXfwO/5TtFKPtKHtNNlQxHVADbkyPr1DaKancVxz/tbQZP0
tW+1tYMIJ0JlruA2cM7jwGllNIiMJXssbku0gzie4dTu+EFEaXC/NbSvA0zB
dUqm5oPoE0/dCGdSJ0jOvKkunT+AKvpHFnjudwN6uN2un1H9iO9M8bVS1A98
Db9K3rvcj5wo1wPPMgbA0IrirKVzP9qZyNp6x3gAVPgT2Z16/UjywMJj8+oB
EHP2tuL0WB8qratNbG8aBAoH8oQkTPvQCem/TZpVw6Se9VO/tvWhrGdP7QZ5
RgDPj9CqZNk+5Dlz/tW6vSNgAhy8pbzQi3hS7lmIFo6ATxqDy+B1LypWd96h
lvoHmIiIjJzh6kUdvx0rNezHQEFtwI/NRA+KexfttClmjPSv68Xk7x5UoLm1
LLV0DAityrAP+NiDFj81FWxRHwcdswaNkWd6UOIa2cTHc+PAvcMT537rRr6m
F5oHdCZBV1zTk0tvu9FX0cTziYcmgYXVzst6id0IvkhxF3WZBNuqVmmXenej
dEMLQeuYSUDBT9PbZbqRnbp7uPDIJLifUhFLu9aFZp+/dAyPmAKBhxwZMu5d
KGW9Y6tJ4hRwXvl3Qf94FzIZjcDtmVNg13FZs2CtLiS5cUb1TM0UqJcnOBfr
f6NiQUbueqFpEMow75p+2Yne6d94oh01DWwcAj5rBHcizhb20bYn00C94GWs
p00nehQlXWiaMQ06vBdNx/k6EV0squNJ6TTQ6n2VN+z3C434htxiL0+DgSJG
dNe+DhQ5b90T5MgGBSx19/VyHSixMvWhiDsbPLh0fN+J5XakFMOpHnSJDfQ0
slfas9uRxdsal4IoNniUZH+uWaodfRF2EFzKYwP3xYi9ojNt6K03n4LoNzYw
sv4gY1XThgzV/AtXKtlgkn9Na11oG2rwtKgw6mYD46v5u6vGWtHjNeyQOA4C
rGvv37CmtBX56pv1b+MjAKG9dnF/cisS1OV1TRMlwPNx5+yyI61IZGukwpIC
AebtRNaXoBZkrHLuud9uAtTkwXl6QgsSuPplV7IpAVJFzjUa+LSgTyvMhKeH
CWBRWXwbK7agbQbt3bwnCZC+03P28/1mNPhZvrHoEgF0fCtMq12aUZ/4j8y/
VwlQ+kbxeQ9oRi5Vf4bZNwjQJ9O9j3u8CSEphSnz+wTwst31lFnShMbXe4xn
xhKAGhs/rZbYhGysknOaHpPPw23x+IhJE3qtrDp/8yUBMgyyJlylm9CQTn6m
4GsC6AbyGAXNNiLm4UeRzlkEsJ4oHk1JbUTrAtK1vT8QYEBxvf7HoEZk/FdE
UymfABcdLz8st2xE6w9vL8z4QoAHjVv0pmiNKCpq9ZjwNwJs4L/3gNHWgELa
JormvxPgjfHogNi7BtTRNX07o4wAeteNdTffbECl1qpOShUEqPj8IkrPvgH5
zH4+5VNFAJu/lL5D2g1IwPd9SkQNAYZU7bafXkOuD9+663wdAXxd8u7499Wj
8l6LfcwGAnAki3Tf/lyPDKFS96NGAsS0X9B69qAeOR1uYHU1EUBGpOpWtms9
Olp/VvxvMwHeHlDqLIH1yMx31UhTC6nnZphmq1g98pr+mn6jldRT1BM2Ol6H
iKU8X2obAY4v6LWvlNQhmjndyYTkka2P1YSe1KHSx3l3HEj2d/8XouBThy4m
zHAbkcyZdrhlx/46pE1tIAiy3sPuN8pmMnVIJ8ztjDfJclK81xzmatHb301+
iLx/tqVLo3dNLSr+qmbQSuqDd79tCv+vFiUPRXViUn/Vjw1XEq7UogDG2jO+
5PPZUoPqMq1q0eXKiqm5egL80WlVKFKuRXVzHQn7SX8CfLQuN9Br0WtwPMCN
9I8r6371YFsN0rI6+eoY6W/s4Jjswrsa9HSSS1+U9F9O2sSf71YNEil1s3lO
9ifbJrVC2qEG/bifwrdA9k8/hiatta0GddHLfWXJ/hbw+UZ/LK9GnPn7fnSR
/W+9prqz078anTvb1H2RzMcMMdDH2FiNiMefhNvI/Ki1H9W2CKlC4sf7Ngq8
IYDpAYHf/hpVaK3VSZ0eMn8uRaXhz35Xop60hLKQVAIk/7ejdVS3EmHtV8Va
TwiAJKevCY1UoM2/3p3YE0eAjsjXSjpxFUj2w692hWgCiPhIBYYTP5FfC0fn
0ZsEuAmX1slklqN3P51xoCcBPm44Mv7Dthwp4cQ0lbNknilvvpznLUdySxem
3p4iwO4iB9s8tzL0tGyBrnaEADSDb/EHlUrR6MK1ktU7CKAhw3Kdaf2BnoVk
7bfQIIADzXd74q0fqHu3/6TbJlJf8cbmwaHvaD27mxCXIECg4W3hq/+VoI+A
ft12hg3SZft65Y6WILk/fLF6Y2zQRt+VU85ZgjS+5oYRvWyw49v4IdEz39A2
r0rbjho2mDGyiMqU+4qkpRQvPk1jA489EjwdzzHSFVRZRz3IBk8VvFqvHcLo
5YdMlrIRG1Rx/kzbSMWoxq34ovJ2NrC+O3d3ABciz2updzPXs0FdFOYW0StA
4q8OLOaMToPvDw6sXNj+EZWdKrs7cGUayB2mPP3y6APSNrTb4eU5DUKEsndy
/3uPwsWufmo4OQ1gjEhA0vtc1CjmFr3OaBrkP+wgqjSzkd33VstSTnL+azQ2
HLV5jYYtCypvhk6BF2XbROJUX6E/eQnyOT5TYOJkglULLQ2FN5f/y3eaAqEP
7Jus018iZW5V61NGU+ANe7j52GISetPpICdBmwICLfNuHpfuIl/RoJJNfpPg
RcSbXVA3Fni+deOouDcO+G1GCtCDOJD8mxgvcxkHAZvkd4KRBGBssvwkHI4D
89IEHb34Z0DbLXPAYGIMLNG+Sj29/AI84NU79mXfGEiDWeKJrZlA2ErzUu/0
H7BiZ8BdYfIJPNLNsaSJDYPZBDOGzdgnsPLgfaF27xCYbrZeGYzKA4B93lj+
zRAYOOTxl96YD452JF3V2DMEKnYnduvafwFPczx+rb4wCCpFFzoadxSB27dz
j7Hz+sHjZcv3uw98By9vsc/1S/QAKWdGzgPdGtDCLX5FRacBuBx2XnvtZA0o
DRdjffxcD3JBuYdHeA3YJvLJvmNnPTggfk/ZtL4GVL98zr+wqw4El0mlcrjV
AoP7l1vuk3UGNm+J90+oA5ZWfbQm41KQPXny6om5BtD1fIdZm18mMA5A+5U+
toJ7k7UcvyMrUE6UdEXtcjd4XSQY/T1tFEnet+Vi8gyClpamY1vZc2j/1sfb
iwv/gOAi7Z2GOTSsI2D//Ny5SRCmN9nKwc+Ntxz12qBQNQ2k/U3uW83y4Xit
62cHZP8Cm4y4pj8mgvjy9lBp+4x/wDA4zClEQQTr896su8E9D3Kf33CVjBLD
Mn0rB0qE5sF7pwvHuuLEMKPA7ydj3Ty4+bhLJClZDH93c/4WojkPJFv423k/
iGGTn3s+XDs+Dza+XzeQ0CGGLSI4EoIy50E7dA4IURTHjlwhJy8eWgDzmWO+
Np/FsWHX/K/c4wsgpsUZmX0Tx3KfvGyI0wsgVzCeR6dSHA84Ox72DlgAi4qD
UUud4vjsD/3dF1IWQD/Hs5dqNAnsFUbZdP7vAuD6OuCvs1cChzCuTDrFL4LF
YxsSCn9K4OIq6Zs+KYvgVUx4ZFK9BKbEl6wPzVwEnxOXqZfbJfAVlTXmKUWL
4MaPXUck/pDfi0cSM7uHF4GK6yhjgVsSu6flnz2hswTgkKuB2R5JbGP6r+9o
+xII0Oj0p+dJ4njRx4HO/UvgSuT95WEkiVu69IT9JpZAvYnjntLvktjqYphh
LH0ZjD4OYpxrkMQHn4okN2xeBocvhUebT0jiPZNb7A8FLgNf5b3frslKYc0Y
z1YT1gqYqXZPd7khhXNPLypmKqwAkf6g1uYIKay97aY/v/oK4B3S0wb3pLBu
2zOxBoMVcCTa32UmQQobbai2snNZAZrXtylyvpXCRzNU6jxyVsBo8/6W1BYp
3BaUJ11XsAJiIy9kxP6Swrbmuy9s/b4CvJJqTl7pkcIO07YCcy0rIDKvw1Zr
VAqf3X7nwPXlFbClIJ5Xf0UK6zlePF0uR4FMSX7Rn7JMvGKiG3l5EwX+Ol38
SVuRifEW6ntlVQqUu6I9Ea/MxAYckYyobRQoM0lj7NVi4r1pL1IOm1Ag6ojf
rbuHiQ+O13d3eFCgwsTG0fAzTOwYoHliIp8Cs95w9EQlMfG5vXUzHJgCFev0
tJRfMLGvsFcUs4QCQ02nhr/8x8QRWe/wvmoK3NDDZ1+UxcQ5PeqyL3opML7I
6OfeAiYufFPzOX+IAlvqHYLuIiYuDfS0rB2jQC/PKPvyYibuEH17Y/kfBdJ6
PB9LlzExY7/akDUvFe5stjUya2RiPvHqYI+1VLjuvHz5zhYmFu93lwgTpcJO
FH9Aup2Jla9mmeRsoEJVrTqdsi4mtspRyVyjRYVfoxLY0X+YOFVK2avYjgod
I0yu8q8w8duhnzytjlRo0lvKY0pl4fz3bikTzlTIeUJeM4jOwlXm6Q1ML/L+
FiW6X1ax8L8QpW1+YVRodiYvMoefhWmHyqsjb1Ph3WW4P2YtC/OuO+vy4h4V
bvgDvF2FWHjDp1fxtQlUGGgzOTwpysLGo4qLm99Q4dviLSXeLBa2yCuNMcil
QnXVu5v+rWNh2zAXlWN5VHh9w9x39w0s7Lkh7UTYVyqs0TSL0ZFl4YCxvf8S
S6nwzLOOj3flWDg0fzAqp5IKeZXLFprkWTjOcmNRVzMVFupxVhgqsnCy9I9j
/zqo0GXt0n6XTSycMX5mek0PFZ548qQ+WImF8c1UWd1Rsl6AYnekMguXW+0p
ODRFhZLieTbXVVi4QWbA0mWGCo9wwa9nVVl4uEA+7CGFBtMvBRmLqbNwTGRe
gBUHDZ458jerimR4wsxDhIcGdzICAy9rsPCoavepRj4adH+0OoOlSepb8bF+
KESD2nJPt78n2aiGy8xKnAbrClVYBltYeDIpUV+ERYPXL+dafiM58YK6dqM0
DV5xV27T3Ur6Z/BN6aECDXJlRKWlkUwIWq+32kyDDsYt+TxaLJzU+0dIRJ0G
C49SeB1JNs29ytW4lQadxqmPskieDRVaitlBg3c2NB+ZJPmF1X9Tlno0GEAL
2LNRm4UPKugOCBuS69P6HA6TvDhT1dawlwYjFNY+9yE57YdjdYwpDSrfn6Pe
Jtkybuar5SEavLn46EosyRTXiE/CR2iwKXBg7SOSM3asy2ywoUFbhd8f7pBs
zZP9PMaeBi3XBLr4kcxo3x1r6USDs7s/Sh8l+W16a4SwK1mvL+LXZpJtA89f
bThPg0ZLk7F/Sb2rzKg+MV406Pyi1ziX5GzWQxdLPxrUHLcddyb5xLiinXAg
DXaMH7kuQDIPKjjUEEyDGfk/VzJJvz5EHdwTc4MGG06/PwlJdnTo07GMoMFk
Bl/KD9JvPg1/NeEoGjRIry40JPlM3TPxmDga5D3pe0GS7JdgypY1lk9oMDvO
fNmH7G+h9w+qcDINymwKOPSN7L+oyMRIdDoNer1M19ZXY+Hi/uu/D7+lwYq8
1EJ3Mj/uH0QbhN7T4JBf++w9Ml8lR/W+RBfS4EWDNo+czWTeFeveHf5K+uUX
l5xD5pM5dzpVqJQGF1P9vdPI/PokREZF15L92hve7rGRheV+dZyM7qPB0a/b
tl+UYeGaTM8jh4dpMJjDoVpCmoUDrzD2C43TYHFvQEf2ejLP65W3Rv+jQb0f
nkbFTBYOcbzMGc1Dh9UOHwutyPdTdQv/ggU/HQYWVvk/EWbhNnrKhKAwHRbb
vApuFWRhzZflLQ9YdCiYdO+0Kvn+9wxKpD9Qp0P3mGv/TMj58OWdYaaOFh06
t0VoAw4y75fPv+nZQYcytLi1iuQ8MeMvytE0pMNw3ZqbzctM/EnbpaDOig6d
tm3/l/GXiaMpDwoDbOgw6FzX/d1sJnYv/4xl7Omwjvddct0kE8ue4C/xcqHD
wfpfQuXkPLt740Ol4GU6nLbtf6PSzcSu5l3V+VfpUKTyoJ9rJxMbSfDUOYbS
4YAGd1Q8OR/nMuyasiPp8OI678Qmcp46NTB+WyTRoYlT+uuv5LzVkT08+aCE
Du9kZHiefsPEImOB0zrldHjKdzVHXzoTT35IJXqqyHp7KU+PpDHxS5P5Wc0W
OkR7CsvFnjOxgNdzav0IHXbFrL7N/YCJB/CEoJAAA54JHLmeeoGJiyIkRD4L
M+C16krFU+eZONHSUOyUBAOa7roXLuTKxIeGYqVyZBjwYeY3W3MHJi7g15M7
rMWARsVu3ZoHmPjBiTta0TYMmFryTu3lRib+wHsvLcmeAQuXxKuVZZi4LT9a
KsuJAfm2cCS9ZDKxtNhjapk7A7pe3FV4di0576tfVS5fZ8DSS70GBvNSuAr+
OH02ndQX9kFGukwKT4+Xt/i9ZcC6hkFGXrEUFn1Stf/GewasSur+qF8ghe3m
GjWSEAPm3V/xk38jhUff9S011jNgwb+Ej1oxUphblharv8iAw62UEe/jUli5
loPbnMoBC4y20kUtpfDBq9yBtpwcMDTT+06aqRSOaxdw9BPggHLHBpue7pLC
CjHrVTPlOKDMDuvk6nXk/oFj13dxMw4YI722bGenJA4e9JuZeMIBGwqd6VKH
yP1KvEdJajIHTFZ6ftLBWBKv3u8cY/cfB7Q3z7r9CEji2Kwjmj/fcsDyfc/U
2lUkccZFLffUrxxwe6atykdyP9VCZ/fbDnPAjBsmuV8KJbD6BvfGsq2c8KA2
614PSwLP1J5+EbyDE7Z9lOk/KiSBP4fYeW/T44T2si0uhVwSeM+g6dqXezmh
o17W0Am2OLbN2mwWbMMJjdRuwrEf4vjmzuFv2sGcsObwLEPXXRx3WTvlpvzk
hOoniWD/N2J4fFyLQDVkffMsYum5GF4KXbW1o5ETavC6774QI4Yl373OEe7i
hKnNs07Sl8SwJfdU9g2CE2Yw146l6ovh0rygd86sVbDL/99/+tWi+I3ko6zN
Hqvgsz3E0q0OEVz41mV8r88q6C54kV1YIYIr9uioOl1aBb/Nli91FYjgIa9f
mYkhq+DN5Ylto4kiWOanbOaauFWw7hDxYJ2tCI69/DZ9Aq+CTer3z441CeMr
HWVpOYJcsOqJT+OqQiGs6htldEmMC/JVRt/iyhTCnfxWXXpMLtgGHwnMPhbC
wLBLrFyeC/7Z8ud6yiUhTHk9E9a1nQsSs4pnN28Vwtf9ZE+vseeCPWHcVfMv
BXGYYJC0czoXTCXKDX0C1+K7xuoJkkbcsOCIo5Xr4Bp8vv22YakxN+T56fzw
+Jc12NR9cPSiGTdUh/InlKLXYJ6Yp6D2CDf0UXY8Zae3Bof/5u0Pd+WGqZyS
6uLRvDjYd1jt711u2PJA41yL1mp84UVySXUrN5yOvrITOnBhS4rIVKgHD9x+
LfRV9B4aDvQzWR3nwwMV1RMhg5+GX4xflU+/xAPjfl/cZ9xMxUTHyLHaEB6Y
NnH+qokzFcfk4WJWHHl9qrO89g0KbvQ6F/MB80DLXg8DcGEJHen/um1o7Wro
b0dR/jn/F1mXe13Zn7saUjhv8F3uakbVgbVcrr280Cnu+A2l8QUQqv+qrGcz
H7m/WTKnfloLJw6tTNi780NXvpfNx0ZZ0Fk+nTvBTADu5nDedcBTHv5VitbO
nhSAx68yuQdtVaAC1f7Yq7Nr4f//H4P/AwuVlT0=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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

      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwdlGs0lHkcgIep1i3JGzKM20jKDoPJ27r0/shJyDnoYrKaCiU1romOEBFq
UUhktzalUiOHtEKj91+RSxKhxKwdKnIpo5iGhtl2Pzzn+fB8f4wDI3wPKFIo
FK8f/GeHgZgJuZyKeKWFYrmcjfrqSqbcv1NRoGfd0TgZG8UWdXzNl1AR50u/
5LOUjSp3msvWfqIiVzBY+HuajUw7B9S8+6lIT1iqLHjHRmpNLpZX71NRK3bP
5HgzGw1WaERBKBWZpbbvEOewUcqpcknyK0U0tF+hTkRnozM6R57f+E0B3fI5
zxGY2yKDRvPrR/0pSDufW/96sw2ac+9cn8BdJB/pqZ8PD7JG9qMB1zi938ma
18OOCpEsVFg9apgRN0dWPfvkd0PXCh3/NZm1MCIhi133vXdiMtHkEf1YXuAM
Oe1dwOlyt0AJ/JrHTOUv5GWKu89w+jpkmN0AYfOfyclVbtKPl9eiJGMVFcYv
4+S59qeMsN41iJqxx+n5uQ9kiSYVn9QyRbnX2y8qpojIXQ1Z0n0sE8R3jJQ+
zH1D7lMt2LT9iBHKhAUDk7ttJC3h5YFYCh35W/f2+PnfIb0X5+iOjrpIvsdF
ud2jlmA1G/8jq9VCeiFLqvMcOolduwdlZWMr0dZ40nP9g7eERzDL7WqNGqo+
Z9zetThExJS98GpSWIpouQFK+iqjROW28RH+0Dzpyf5945NHEwQ8CyiPzhgj
7TX2lvB4YkKk0u3M3dFI2PpFG5l1fCFYqhVP3veIiUsbTh0eYcwSRc7LTx58
s0ic2JhmvLf8GxF5OyuYvvQncFbLfHVaeZ5oNC2Ky9VXh9QlSeLgSzKicVnD
IZ0RTbC5EPnWgy4ntg2abxHztSEw3oY7VU8Bs4hCWgeLBmOCNekFFEUQ2EXl
IQUDGB7V5eexqNA9cJMibDGCPG7Whnz/JTCQ7dspzDCB5NE4ydTlpQAD1dOj
PFMQcYLvX3++DLxPX8w5Zm0GScLWsmpNJRC0WSYu1zeHnK2sYpqrMvTwto6u
HVkHOyha02kRKpCU/Geo2y0L4LRFJ3neV4U0q3KnqBwmvEzoUgp9pwZ2DvbZ
9J1WkOZ8u3XYQh0Y05t0xq+yYMpHPrU3fAUcTZR/bc6zhpA1fOViLw2g1Sar
h8TYwOz6fLt7Yg2IREIf1VBbEJR+H5rNXAm0uLlXkV5s4LoywMFAE7JH2CIO
cwMYhmXUWSJNqGB4am8xsgNdFV6Vlx8GZitMzs4o4lC2OTFevBuDhA8PH3xc
hoNdYs7m/AAMuh7u/CBUwcFXXNnbtx+DE4fOQJMmDmdfz84F8TB4+VgsKTDB
Yf7aSZf4FAziYsgg3AUHoUN+900+Bm1vA5ziU3A4fKz0D/cKDAwrJYfDT+Mg
rfjrwGQlBjHp54sCz+CwyqTvm3UNBga2jV89cnHYpkTXb0AYRGdZ3NErwaGh
52Zwdy8G+sS8dgP60dVrmbF9P7rWBdeqRhz63VolqwcwaJ5gRt9owUFSP5HJ
FWEQVbT/RXYnDpYlrLtj4xg0TbekckU4CPqdY7M+YUBrCazyfY+Dx6rthJUY
g4grssEtH3E4mHGsK2YWA11Plr2VGIcZlF6sI8Ug3LgthDGDw6n5wqD6eQye
fgsq0JHioMG+/fOeBQxWdyw8UZXhcCWsflYuxyDs/3/h8C/OE0rC
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbX275PX//8wHGMBAwuHeOoFCh0wEv7FpzbeGS0xw
fqd49uml3YxwvtwRjcXFUQxw/k/PC1o1cf/2w/hWz2MWRVz9DedP3/xcvr38
J5xfEd1g8PfZNzj/TbZMWU7SFzi/ZvW2g7qcn+B8+d69Drm/3sH5dYpcXMqW
r+B85vZY29P9T+H8iYvPTGNqfADnr7Yp+LF74nU4v8Phr5zS2lNwfpTh1Svh
Uavg/P+xTpxnvHbYw/jS6SybJ1lfgPM9qvZ7a22/Cedv7lc8c/HfQzhfamIM
hwzXczjf22S2xaF9r+F8K4H4hTk5H+B84/AiBbVzn+D8maZNWc+Uv8L51RYt
ivFrvsP5jjwdl1o5f8H5zSx1H1Jm/oHzjaYU3PSS/Q/nJ1UZxb3fxeAA47/c
o9o2lYEJzn/0XHL1JANmOH9SXI/p5CgWOL/hefm393NZ4fwHESlbFp9mg/Pr
7pxcsVmIA87v8zCYJeXCCeeHMIh+bMnngvMjThXVeW/hhvPP11zkyHzMA+e3
OK48+UibD85/H/j/fXweP5yfrrqac5avAJz/VWuy2aYPCP6eJb8ffu0QhPPj
XJQdrOWE4Hz53PadegcQfEmunI2+4cJw/h3ryZeXrUbw5+Xu+vr/P4IPAEw/
204=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLinesStyle->GrayLevel[0.85],
  ImageSize->{348., Automatic},
  PlotRange->{{-2.4999998469387754`, 4.999999846938776}, {-18, 18}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.49768828453125*^9, {3.497688323734375*^9, 3.497688329953125*^9}, 
   3.4976883913125*^9, {3.49768846259375*^9, 3.497688523265625*^9}, 
   3.497689152546875*^9, 3.506651302181875*^9, 3.50665133847875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calculus", " ", "DVD"}], ",", " ", 
    RowBox[{"section", " ", "6"}], ",", " ", "integrals"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Integral", ":", " ", 
    RowBox[{
    "Find", " ", "the", " ", "original", " ", "function", " ", "from", " ", 
     "the", " ", "derivative", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "go", " ", "back", " ", "to", " ", "the", " ", "original", " ", 
        "function"}], ")"}], ".", " ", "That"}], " ", 
     RowBox[{"is", ":", " ", 
      RowBox[{
      "the", " ", "antiderivative", " ", "or", " ", "integral"}]}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.483610626070244*^9, 3.483610715858719*^9}, {
  3.4836107683177195`*^9, 3.483610774011428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Integral]", 
      RowBox[{"2", "x", 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", "C"}], " ", "=", 
      RowBox[{">", " ", 
       RowBox[{"Indefinite", " ", 
        RowBox[{"integral", ".", " ", "C"}], " ", "is", " ", "any", " ", 
        "constant"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "because", " ", "the", " ", "constant", " ", "part", " ", "goes", " ", 
      "away", " ", "when", " ", "you", " ", "take", " ", "the", " ", 
      "derivative", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "x"}], ")"}], ".", " ", 
       RowBox[{"f", "'"}]}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "57000"}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", ".", "\[IndentingNewLine]", 
        RowBox[{"\[Integral]", 
         RowBox[{
          SuperscriptBox["x", "n"], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"x", "-", "1"}]], 
         SuperscriptBox["x", 
          RowBox[{"n", "+", "1"}]]}], "+", 
        RowBox[{"C", "\[IndentingNewLine]", 
         RowBox[{"\[Integral]", 
          RowBox[{"Cfx", 
           RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"C", 
         RowBox[{"\[Integral]", 
          RowBox[{"fx", 
           RowBox[{
            RowBox[{"\[DifferentialD]", "x"}], ".", "   ", 
            RowBox[{"\[Integral]", 
             RowBox[{"4", 
              SuperscriptBox["x", "5"], 
              RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{"\[Integral]", 
           RowBox[{
            SuperscriptBox["x", "5"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{"4", "*", 
           FractionBox["1", 
            RowBox[{"5", "+", "1"}]], "*", 
           SuperscriptBox["x", 
            RowBox[{"5", "+", "1"}]]}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            FractionBox["4", "6"], 
            SuperscriptBox["x", "6"]}], " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              FractionBox["2", "3"], 
              SuperscriptBox["x", "6"]}], "+", 
             RowBox[{
              RowBox[{"C", ".", " ", "Derivative"}], " ", 
              RowBox[{"is", ":", " ", 
               RowBox[{
                FractionBox["12", "3"], 
                SuperscriptBox["x", 
                 RowBox[{"5", " "}]]}]}]}]}], "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"4", 
               SuperscriptBox["x", "5"], "\[IndentingNewLine]", 
               RowBox[{"\[Integral]", 
                RowBox[{"f", 
                 RowBox[{"(", "x", ")"}]}]}]}], "+", 
              RowBox[{"g", 
               RowBox[{"(", "x", ")"}], 
               RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Integral]", 
                RowBox[{"f", 
                 RowBox[{"(", "x", ")"}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
               RowBox[{"\[Integral]", 
                RowBox[{"g", 
                 RowBox[{"(", "x", ")"}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
               RowBox[{
                RowBox[{"C", ".", " ", 
                 RowBox[{"(", 
                  RowBox[{"Sum", " ", "the", " ", "two", " ", "integral", " ", 
                   RowBox[{"constants", "."}]}], ")"}]}], 
                "\[IndentingNewLine]", 
                RowBox[{"\[Integral]", "sinxdx"}]}]}], " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "cosx"}], "+", 
                RowBox[{"C", "\[IndentingNewLine]", 
                 RowBox[{"\[Integral]", "cosxdx"}]}]}], " ", "=", " ", 
               RowBox[{
                RowBox[{"sinx", "+", 
                 RowBox[{"C", "\[IndentingNewLine]", 
                  RowBox[{"\[Integral]", 
                   RowBox[{
                    SuperscriptBox["sec", "2"], "xdx"}]}]}]}], " ", "=", " ", 
                RowBox[{
                 RowBox[{"tanx", "+", 
                  RowBox[{"C", "\[IndentingNewLine]", 
                   RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["csc", "2"], "xdx"}]}]}]}], " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "cotx"}], "+", 
                   RowBox[{"C", "\[IndentingNewLine]", 
                    RowBox[{"\[Integral]", "secxtanxdx"}]}]}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{"secx", "+", 
                    RowBox[{"C", "\[IndentingNewLine]", 
                    RowBox[{"\[Integral]", "cscxcotxdx"}]}]}], " ", "=", " ", 
                   RowBox[{
                    RowBox[{"-", "cscx"}], "+", 
                    "C"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fundamental", " ", "theorem", " ", "of", " ", 
     RowBox[{"calculus", ":", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{"fx", 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "b", "]"}], "-", 
      RowBox[{
       RowBox[{"F", "[", "a", "]"}], ".", " ", 
       RowBox[{"F", "[", "b", "]"}]}]}], " ", "=", " ", 
     RowBox[{"the", " ", 
      RowBox[{"antiderivative", "/", "integral"}], " ", "at", " ", "point", 
      " ", "b"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4837771302647676`*^9, 3.4837772681148195`*^9}, {
  3.4837776699007883`*^9, 3.4837777508685017`*^9}, {3.483777806852335*^9, 
  3.48377787646171*^9}, {3.48377791024296*^9, 3.48377792874296*^9}, {
  3.48377799633671*^9, 3.483778071789835*^9}, {3.483778103352335*^9, 
  3.48377824496171*^9}, {3.483778341758585*^9, 3.48377840243046*^9}, {
  3.483778512883585*^9, 3.483778654883585*^9}, {3.484796400117875*^9, 
  3.484796401367875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Section", " ", "10"}], ",", " ", 
    RowBox[{"Solving", " ", "integrals"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "4"], 
      RowBox[{
       SuperscriptBox["x", "2"], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       FractionBox["1", "3"], 
       SuperscriptBox["4", "3"]}], "-", 
      RowBox[{
       FractionBox["1", "3"], 
       SuperscriptBox["0", "3"]}]}]}], " ", "}"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Definite", " ", 
      RowBox[{"integral", ":", " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "4"], 
        RowBox[{
         SuperscriptBox["x", "2"], 
         RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "3"], 
        SuperscriptBox["4", "3"]}], "-", 
       RowBox[{
        FractionBox["1", "3"], 
        SuperscriptBox["0", "3"]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "3"], 
        SuperscriptBox["4", "3"]}], " ", "=", " ", 
       FractionBox["64", "3"]}]}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.4840578415063353`*^9, 3.4840578427719603`*^9}, {
  3.48479641110225*^9, 3.484796413555375*^9}, {3.485906026973625*^9, 
  3.485906048629875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["64", "3"], ",", 
   FractionBox["64", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.483974076765047*^9, 3.485906042848625*^9, 
  3.4918969315625*^9, 3.497688391453125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}], "-", 
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], " ", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["1", "2"], "-", 
      SuperscriptBox["1", "3"]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"0", "-", 
      SuperscriptBox["0", "2"], "-", 
      SuperscriptBox["0", "3"]}], ")"}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Definite", " ", 
     RowBox[{"integral", ":", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}], "-", 
          RowBox[{"3", 
           SuperscriptBox["x", "2"]}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "1"], 
       SuperscriptBox["x", "1"]}], "-", 
      RowBox[{
       FractionBox["2", "2"], 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{
       FractionBox["3", "3"], 
       SuperscriptBox["x", "3"]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["1", "2"], "-", 
         SuperscriptBox["1", "3"]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"0", "-", 
         SuperscriptBox["0", "2"], "-", 
         SuperscriptBox["0", "3"]}], ")"}]}], " ", "=", " ", 
      RowBox[{"-", "1"}]}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.48479504978975*^9, 3.48479514572725*^9}, {
   3.484795201149125*^9, 3.484795313196*^9}, 3.4859055978955*^9, {
   3.485905973254875*^9, 3.485905978442375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.484795074774125*^9, 3.48590597973925*^9, 
  3.4918969316875*^9, 3.4976883915625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "3"}], "0"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", 
         SuperscriptBox["y", "4"]}], "-", 
        RowBox[{"6", 
         SuperscriptBox["y", "2"]}], "+", "14"}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], " ", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["5", "5"], 
        SuperscriptBox["0", "5"]}], "-", 
       RowBox[{
        FractionBox["6", "3"], 
        RowBox[{"(", 
         SuperscriptBox["0", "3"], ")"}]}], "+", 
       RowBox[{"14", 
        RowBox[{"(", "0", ")"}]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["5", "5"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "3"}], ")"}], "5"]}], "-", 
       RowBox[{
        FractionBox["6", "3"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "3"}], ")"}], "3"]}], "+", 
       RowBox[{"14", 
        RowBox[{"(", 
         RowBox[{"-", "3"}], ")"}]}]}], ")"}]}]}], "}"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Definite", " ", 
     RowBox[{"integral", ":", " ", 
      RowBox[{"=", " ", 
       RowBox[{
        RowBox[{
         FractionBox["5", "5"], 
         SuperscriptBox["y", "5"]}], "-", 
        RowBox[{
         FractionBox["6", "3"], 
         SuperscriptBox["y", "3"]}], "+", 
        RowBox[{"14", "y"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["0", "5"], "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          SuperscriptBox["0", "3"], ")"}]}], "+", 
        RowBox[{"14", 
         RowBox[{"(", "0", ")"}]}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "3"}], ")"}], "5"], "-", 
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "3"}], ")"}], "3"]}], "+", 
        RowBox[{"14", 
         RowBox[{"(", 
          RowBox[{"-", "3"}], ")"}]}]}], ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "243"}], "+", "54", "-", "42"}], ")"}]}], " ", "=", " ",
       "231"}]}]}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "243"}], "+", "54", "-", "42"}], ")"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"=", " ", 
    RowBox[{"243", "-", "54", "+", 
     RowBox[{
     "42.", " ", "Remember", " ", "to", " ", "switch", " ", "signs", " ", 
      RowBox[{"inside", "!"}]}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.48479538647725*^9, 3.4847954126335*^9}, {
  3.48479547310225*^9, 3.48479556397725*^9}, {3.48479578035225*^9, 
  3.484795959805375*^9}, {3.485905601067375*^9, 3.485905605458*^9}, {
  3.485905938567375*^9, 3.485905943911125*^9}, {3.505903428375*^9, 
  3.505903519625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"231", ",", "231"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4847954135085*^9, {3.484795482711625*^9, 3.484795492336625*^9}, 
   3.484795908446*^9, 3.4859059453955*^9, 3.4918969318125*^9, 
   3.4976883916875*^9, 3.505903522625*^9}],

Cell[BoxData["231"], "Output",
 CellChangeTimes->{
  3.4847954135085*^9, {3.484795482711625*^9, 3.484795492336625*^9}, 
   3.484795908446*^9, 3.4859059453955*^9, 3.4918969318125*^9, 
   3.4976883916875*^9, 3.505903522625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     SuperscriptBox["x", "99"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "100"], 
      SuperscriptBox["1", "100"]}], "-", 
     RowBox[{
      FractionBox["1", "100"], 
      SuperscriptBox["0", "100"]}]}], ")"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.48590573348925*^9, 3.485905915833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "100"], ",", 
   FractionBox["1", "100"]}], "}"}]], "Output",
 CellChangeTimes->{{3.485905754317375*^9, 3.48590576905175*^9}, 
   3.485905916911125*^9, 3.49189693190625*^9, 3.497688391828125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "4"], 
    RowBox[{
     FractionBox["1", "5"], 
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      FractionBox["1", "5"], "3"], 
     SuperscriptBox["4", "3"]}], "-", 
    RowBox[{
     FractionBox[
      FractionBox["1", "5"], "3"], 
     SuperscriptBox["0", "3"]}]}]}], " ", "}"}]], "Input",
 CellChangeTimes->{{3.48590662730175*^9, 3.485906633833*^9}, {
  3.485906682254875*^9, 3.485906691083*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["64", "15"], ",", 
   FractionBox["64", "15"]}], "}"}]], "Output",
 CellChangeTimes->{3.48590669667675*^9, 3.491896931984375*^9, 
  3.497688391890625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Section", " ", "11"}], ",", " ", 
    RowBox[{"Integrals", " ", "by", " ", "substitution"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"\[Integral]", 
   RowBox[{"x", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "1"}], ")"}], "99"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.485906824004875*^9, 3.485906827692375*^9}, {
  3.506664094681875*^9, 3.50666414101*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "200"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["x", "2"]}], ")"}], "100"]}]], "Output",
 CellChangeTimes->{3.506664143556875*^9}]
}, Open  ]]
},
WindowSize->{930, 1084},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 2004, 53, 120, "Input"],
Cell[2574, 77, 6310, 108, 179, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8921, 190, 1085, 28, 66, "Input"],
Cell[10009, 220, 2553, 48, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12599, 273, 1839, 42, 100, "Input"],
Cell[14441, 317, 373, 6, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14851, 328, 867, 21, 48, "Input"],
Cell[15721, 351, 518, 8, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16276, 364, 512, 13, 64, "Input"],
Cell[16791, 379, 375, 6, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17203, 390, 1109, 32, 48, "Input"],
Cell[18315, 424, 447, 6, 29, "Output"]
}, Open  ]],
Cell[18777, 433, 2649, 68, 120, "Input"],
Cell[CellGroupData[{
Cell[21451, 505, 612, 17, 29, "Input"],
Cell[22066, 524, 451, 7, 29, "Output"]
}, Open  ]],
Cell[22532, 534, 701, 14, 48, "Input"],
Cell[CellGroupData[{
Cell[23258, 552, 138, 3, 29, "Input"],
Cell[23399, 557, 461, 7, 29, "Output"]
}, Open  ]],
Cell[23875, 567, 1185, 31, 84, "Input"],
Cell[CellGroupData[{
Cell[25085, 602, 596, 13, 29, "Input"],
Cell[25684, 617, 511, 9, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26232, 631, 823, 19, 48, "Input"],
Cell[27058, 652, 466, 7, 29, "Output"]
}, Open  ]],
Cell[27539, 662, 2379, 62, 122, "Input"],
Cell[CellGroupData[{
Cell[29943, 728, 554, 11, 29, "Input"],
Cell[30500, 741, 1946, 40, 190, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32483, 786, 2460, 54, 192, "Input"],
Cell[34946, 842, 803, 15, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35786, 862, 1093, 28, 44, "Input"],
Cell[36882, 892, 484, 9, 29, "Output"]
}, Open  ]],
Cell[37381, 904, 4300, 114, 230, "Input"],
Cell[CellGroupData[{
Cell[41706, 1022, 299, 8, 50, "Input"],
Cell[42008, 1032, 185, 5, 48, "Output"]
}, Open  ]],
Cell[42208, 1040, 347, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[42580, 1051, 140, 3, 29, "Input"],
Cell[42723, 1056, 355, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43115, 1069, 124, 2, 29, "Input"],
Cell[43242, 1073, 331, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43610, 1083, 140, 3, 29, "Input"],
Cell[43753, 1088, 332, 7, 47, "Output"]
}, Open  ]],
Cell[44100, 1098, 328, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[44453, 1110, 334, 10, 34, "Input"],
Cell[44790, 1122, 550, 14, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45377, 1141, 168, 4, 29, "Input"],
Cell[45548, 1147, 399, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45984, 1160, 290, 8, 29, "Input"],
Cell[46277, 1170, 425, 7, 47, "Output"]
}, Open  ]],
Cell[46717, 1180, 1581, 50, 48, "Input"],
Cell[CellGroupData[{
Cell[48323, 1234, 192, 4, 47, "Input"],
Cell[48518, 1240, 337, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48892, 1250, 189, 4, 31, "Input"],
Cell[49084, 1256, 315, 6, 47, "Output"]
}, Open  ]],
Cell[49414, 1265, 2033, 56, 138, "Input"],
Cell[CellGroupData[{
Cell[51472, 1325, 142, 3, 29, "Input"],
Cell[51617, 1330, 378, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52032, 1344, 800, 19, 71, "Input"],
Cell[52835, 1365, 188, 3, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53060, 1373, 532, 12, 55, "Input"],
Cell[53595, 1387, 522, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54154, 1406, 667, 18, 51, "Input"],
Cell[54824, 1426, 296, 6, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55157, 1437, 617, 18, 51, "Input"],
Cell[55777, 1457, 302, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56116, 1469, 362, 8, 41, "Input"],
Cell[56481, 1479, 475, 8, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56993, 1492, 293, 8, 44, "Input"],
Cell[57289, 1502, 234, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57560, 1512, 245, 7, 41, "Input"],
Cell[57808, 1521, 246, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58091, 1531, 898, 26, 44, "Input"],
Cell[58992, 1559, 221, 5, 29, "Output"]
}, Open  ]],
Cell[59228, 1567, 573, 12, 48, "Input"],
Cell[CellGroupData[{
Cell[59826, 1583, 718, 19, 31, "Input"],
Cell[60547, 1604, 339, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60923, 1614, 466, 9, 31, "Input"],
Cell[61392, 1625, 289, 4, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61718, 1634, 168, 4, 31, "Input"],
Cell[61889, 1640, 92, 1, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62018, 1646, 411, 11, 34, "Input"],
Cell[62432, 1659, 164, 4, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62633, 1668, 1169, 32, 31, "Input"],
Cell[63805, 1702, 337, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64179, 1712, 920, 24, 29, "Input"],
Cell[65102, 1738, 626, 9, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65765, 1752, 230, 5, 31, "Input"],
Cell[65998, 1759, 297, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66332, 1769, 1217, 39, 29, "Input"],
Cell[67552, 1810, 300, 5, 29, "Output"]
}, Open  ]],
Cell[67867, 1818, 221, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[68113, 1828, 140, 3, 29, "Input"],
Cell[68256, 1833, 238, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68531, 1843, 295, 8, 31, "Input"],
Cell[68829, 1853, 237, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69103, 1863, 228, 5, 29, "Input"],
Cell[69334, 1870, 241, 3, 29, "Output"]
}, Open  ]],
Cell[69590, 1876, 243, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[69858, 1887, 140, 3, 29, "Input"],
Cell[70001, 1892, 599, 19, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70637, 1916, 2271, 66, 95, "Input"],
Cell[72911, 1984, 15672, 262, 140, "Output"]
}, Open  ]],
Cell[88598, 2249, 2111, 60, 88, "Input"],
Cell[CellGroupData[{
Cell[90734, 2313, 139, 3, 29, "Input"],
Cell[90876, 2318, 256, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91169, 2331, 2771, 74, 199, "Input"],
Cell[93943, 2407, 14568, 245, 167, "Output"]
}, Open  ]],
Cell[108526, 2655, 310, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[108861, 2668, 140, 3, 29, "Input"],
Cell[109004, 2673, 280, 8, 31, "Output"]
}, Open  ]],
Cell[109299, 2684, 1806, 48, 68, "Input"],
Cell[111108, 2734, 926, 18, 29, "Input"],
Cell[CellGroupData[{
Cell[112059, 2756, 668, 22, 34, "Input"],
Cell[112730, 2780, 597, 11, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113364, 2796, 1196, 31, 55, "Input"],
Cell[114563, 2829, 16256, 274, 170, 11778, 199, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[130834, 3106, 1789, 47, 68, "Input"],
Cell[132626, 3155, 269, 5, 29, "Input"],
Cell[CellGroupData[{
Cell[132920, 3164, 284, 7, 31, "Input"],
Cell[133207, 3173, 313, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133557, 3183, 2406, 69, 111, "Input"],
Cell[135966, 3254, 14516, 244, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150519, 3503, 1041, 26, 51, "Input"],
Cell[151563, 3531, 365, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151965, 3543, 1987, 57, 75, "Input"],
Cell[153955, 3602, 15097, 254, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169089, 3861, 1367, 41, 86, "Input"],
Cell[170459, 3904, 13794, 234, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184290, 4143, 1311, 40, 104, "Input"],
Cell[185604, 4185, 108, 2, 31, "Output"],
Cell[185715, 4189, 9973, 171, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195725, 4365, 1426, 41, 104, "Input"],
Cell[197154, 4408, 125, 2, 29, "Output"],
Cell[197282, 4412, 9677, 166, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206996, 4583, 1623, 44, 73, "Input"],
Cell[208622, 4629, 6122, 107, 156, "Output"]
}, Open  ]],
Cell[214759, 4739, 237, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[215021, 4749, 809, 23, 29, "Input"],
Cell[215833, 4774, 204, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216074, 4784, 881, 22, 75, "Input"],
Cell[216958, 4808, 11593, 197, 156, "Output"]
}, Open  ]],
Cell[228566, 5008, 1152, 33, 47, "Input"],
Cell[CellGroupData[{
Cell[229743, 5045, 140, 3, 29, "Input"],
Cell[229886, 5050, 218, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230141, 5061, 1561, 43, 49, "Input"],
Cell[231705, 5106, 632, 10, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232374, 5121, 681, 14, 74, "Input"],
Cell[233058, 5137, 6718, 119, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239813, 5261, 592, 16, 77, "Input"],
Cell[240408, 5279, 12568, 213, 171, "Output"]
}, Open  ]],
Cell[252991, 5495, 2663, 77, 234, "Input"],
Cell[255657, 5574, 234, 6, 29, "Input"],
Cell[CellGroupData[{
Cell[255916, 5584, 142, 3, 29, "Input"],
Cell[256061, 5589, 199, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256297, 5599, 1950, 43, 108, "Input"],
Cell[258250, 5644, 6188, 108, 149, "Output"]
}, Open  ]],
Cell[264453, 5755, 481, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[264959, 5773, 142, 3, 29, "Input"],
Cell[265104, 5778, 235, 6, 47, "Output"]
}, Open  ]],
Cell[265354, 5787, 450, 11, 34, "Input"],
Cell[CellGroupData[{
Cell[265829, 5802, 617, 20, 32, "Input"],
Cell[266449, 5824, 205, 5, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266691, 5834, 713, 14, 55, "Input"],
Cell[267407, 5850, 36269, 601, 138, "Output"]
}, Open  ]],
Cell[303691, 6454, 198, 5, 29, "Input"],
Cell[CellGroupData[{
Cell[303914, 6463, 480, 15, 29, "Input"],
Cell[304397, 6480, 180, 4, 29, "Output"]
}, Open  ]],
Cell[304592, 6487, 201, 5, 29, "Input"],
Cell[CellGroupData[{
Cell[304818, 6496, 527, 16, 29, "Input"],
Cell[305348, 6514, 218, 6, 31, "Output"]
}, Open  ]],
Cell[305581, 6523, 278, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[305884, 6535, 703, 22, 32, "Input"],
Cell[306590, 6559, 373, 11, 34, "Output"]
}, Open  ]],
Cell[306978, 6573, 282, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[307285, 6585, 921, 27, 29, "Input"],
Cell[308209, 6614, 401, 12, 31, "Output"]
}, Open  ]],
Cell[308625, 6629, 235, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[308885, 6639, 504, 15, 32, "Input"],
Cell[309392, 6656, 320, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309749, 6670, 494, 12, 67, "Input"],
Cell[310246, 6684, 720, 24, 52, "Output"]
}, Open  ]],
Cell[310981, 6711, 1072, 32, 50, "Input"],
Cell[312056, 6745, 920, 28, 31, "Input"],
Cell[CellGroupData[{
Cell[313001, 6777, 142, 3, 29, "Input"],
Cell[313146, 6782, 246, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313429, 6794, 143, 3, 29, "Input"],
Cell[313575, 6799, 231, 7, 31, "Output"]
}, Open  ]],
Cell[313821, 6809, 856, 28, 44, "Input"],
Cell[CellGroupData[{
Cell[314702, 6841, 137, 3, 29, "Input"],
Cell[314842, 6846, 201, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315080, 6857, 141, 3, 29, "Input"],
Cell[315224, 6862, 425, 15, 59, "Output"]
}, Open  ]],
Cell[315664, 6880, 926, 31, 37, "Input"],
Cell[CellGroupData[{
Cell[316615, 6915, 138, 3, 29, "Input"],
Cell[316756, 6920, 243, 8, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317036, 6933, 141, 3, 29, "Input"],
Cell[317180, 6938, 334, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317551, 6954, 140, 3, 29, "Input"],
Cell[317694, 6959, 314, 10, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318045, 6974, 1094, 26, 84, "Input"],
Cell[319142, 7002, 22900, 383, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342079, 7390, 1675, 40, 89, "Input"],
Cell[343757, 7432, 9550, 162, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353344, 7599, 5135, 132, 302, "Input"],
Cell[358482, 7733, 16919, 286, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375438, 8024, 2458, 62, 230, "Input"],
Cell[377899, 8088, 16959, 287, 188, "Output"]
}, Open  ]],
Cell[394873, 8378, 171, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[395069, 8386, 140, 3, 29, "Input"],
Cell[395212, 8391, 137, 3, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395386, 8399, 139, 3, 29, "Input"],
Cell[395528, 8404, 114, 2, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395679, 8411, 144, 3, 29, "Input"],
Cell[395826, 8416, 115, 2, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395978, 8423, 2677, 64, 230, "Input"],
Cell[398658, 8489, 7874, 138, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406569, 8632, 3770, 87, 284, "Input"],
Cell[410342, 8721, 44643, 739, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455022, 9465, 3103, 75, 282, "Input"],
Cell[458128, 9542, 17936, 304, 231, "Output"]
}, Open  ]],
Cell[476079, 9849, 829, 22, 66, "Input"],
Cell[476911, 9873, 6374, 163, 281, "Input"],
Cell[CellGroupData[{
Cell[483310, 10040, 1484, 46, 90, "Input"],
Cell[484797, 10088, 228, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485062, 10099, 1890, 59, 70, "Input"],
Cell[486955, 10160, 217, 6, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487209, 10171, 3039, 98, 91, "Input"],
Cell[490251, 10271, 272, 6, 29, "Output"],
Cell[490526, 10279, 225, 4, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490788, 10288, 491, 16, 47, "Input"],
Cell[491282, 10306, 255, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491574, 10317, 581, 19, 54, "Input"],
Cell[492158, 10338, 209, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492404, 10349, 528, 15, 62, "Input"],
Cell[492935, 10366, 238, 8, 47, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
